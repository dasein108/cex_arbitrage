# https://www.gate.com/docs/developers/apiv4/en/ llms-full.txt

<|firecrawl-page-1-lllmstxt|>
## Gate API v4 Documentation
- Spot & Margin

- Perpetual Futures

- Delivery Futures

- Options

- Unified

- Alpha

- Announcements


简体中文


- Python
- Shell

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#gate-api-v4-105-9) Gate API v4.105.9

Welcome to Gate API
APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.

Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#access-url) Access URL

**REST API BaseURL:**

- Live trading: `https://api.gateio.ws/api/v4`
- TestNet trading: `https://api-testnet.gateapi.io/api/v4`
- Futures live trading alternative (futures only): `https://fx-api.gateio.ws/api/v4`

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#sdk) SDK

Available SDK:

- [Python(opens new window)](https://github.com/gateio/gateapi-python)
- [Java(opens new window)](https://github.com/gateio/gateapi-java)
- [PHP(opens new window)](https://github.com/gateio/gateapi-php)
- [Go(opens new window)](https://github.com/gateio/gateapi-go)
- [C#(opens new window)](https://github.com/gateio/gateapi-csharp)
- [NodeJS(opens new window)](https://github.com/gateio/gateapi-nodejs)
- [Javascript(opens new window)](https://github.com/gateio/gateapi-js)

Besides API examples, some SDK provides an additional demo application.
The demo application is a relatively complete example demonstrating how to use the SDK.
It can be built and run separately. Refer to corresponding repository for details.

- [Python(opens new window)](https://github.com/gateio/gateapi-python/tree/master/example)
- [Java(opens new window)](https://github.com/gateio/gateapi-java/tree/master/example)
- [C#(opens new window)](https://github.com/gateio/gateapi-csharp/tree/master/example)
- [Go(opens new window)](https://github.com/gateio/gateapi-go/tree/master/_example)

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#about-apiv4-key-improvement) About APIv4 key improvement

Previously(before April 2020) futures APIv4 key are separated from spot one, but this is
no longer the case anymore. You can create multiple keys with each key having multiple
permissions now. e.g. you can create one key with spot read/write and futures read/write
permission which can be used in both spot and futures trading.

History API keys will not be affected by this improvement. Previous spot key and futures key
are now one key with only spot permissions enabled, another only futures permission enabled.
You can reconfigure their permissions after migration.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#comparison-with-apiv2) Comparison with APIv2

APIv4 is a standalone brand-new HTTP REST API, currently used in parallel with APIv2.
APIv4 provides complete trading operations, with more highly secured authentication method.
What's more, APIv4 specification is written following
[OpenAPI Specification(opens new window)](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).
SDKs and documents are all generated from the same spec, which ensures consistency between
documents and implementation.

The ways APIv4 and APIv2 differ are:

1. Their API keys are separated from each other. Once logged into the web console,
v2 API keys are generated on _"APIKeys"_ page, while v4 _"APIv4Keys"_
page.
2. APIv2 supports only spot trading, while v4 supports all trading operations in spot, margin and futures.

Which one to choose:

1. If margin or futures trading are needed, choose APIv4.
2. If only spot trading or wallet operation is required, choose on your own.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#application-for-marketers) Application for Marketers

In order to further improve the platform's opening depth and trading liquidity,
we will recruit institutional market makers in an open and transparent way,
and provide a professional market maker's service rate scheme for professional institutional market makers
according to their contribution to the platform's liquidity.

1. Provide Gate UID
2. Provide other transaction volume screenshot or VIP level
3. Brief introduction of market making method and scale

Provide the above content and submit to [mm@gate.com](mailto:mm@gate.com) , we will accept within 3
working days.

TIP

Vip11 and above need to open GT deduction in the personal center to enjoy the professional
market rate.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#technical-support) Technical Support

If you have any questions or suggestions during the use, you can contact us in any of the following ways:

- Submit Work Order Feedback
- Online Work Order Feedback
- Send your contact information and questions to [mm@gate.com](mailto:mm@gate.com) We will assign
technical specialists to serve you.

If you encounter API errors, it is recommended that you sort out the following content, so that we can quickly analyze the problem for you:

1. Problem Description
2. Gate UID
3. Request URI and parameters
4. Error Code
5. Responses

DANGER

Even if you submit a problem, you should not submit the API key information to customer service or others, otherwise there will be serious asset risk. If it has been accidentally leaked, please delete the existing API and rebuild it.

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#changelog) Changelog

**v4.103.0**

- Add `code` field in `GET /spot/account_book` query parameter and response to filter account book entries by specific code
- Add `text` parameter to `closeAllPositions` operation for order remarks when closing all positions
- New comprehensive AccountBook code documentation with detailed explanations for over 300 transaction codes

**v4.102.6**

- Enhance staking swap response structure `SwapCoinStruct` with additional fields: `pid`, `subtype`, `exchange_amount`, `updateStamp`, `protocol_type`, `client_order_id`, `source`

**v4.102.0**

- Add `is_all_collateral` field in `GET /unified/accounts` endpoint response to indicate if all currencies are used as collateral
- Add `enabled_collateral` field in balances array of unified accounts to show currency collateral status
- New feature `POST /unified/collateral_currencies` endpoint, Set collateral currencies for cross-currency margin mode

**v4.101.9**

- New feature `GET /futures/{settle}/risk_limit_table` endpoint, Query risk limit tier table by table\_id
- Add `enable_tiered_mm` field in futures account model for tiered maintenance margin calculation
- Add `risk_limit_table` and `average_maintenance_rate` fields in position model for enhanced risk management
- Add `deduction` field in futures limit risk tiers for maintenance margin quick calculation
- Introduce new models: `FuturesRiskLimitTier` and `FuturesRiskLimitTierList` for risk management
- Enhance `POST /earn/staking/swap` endpoint response structure with improved swap order details

**v4.100.0**

- Add alpha account query and account book query functionality
- New feature `GET /earn/staking/coins` endpoint, Query on-chain staking coin types
- New feature `POST /earn/staking/swap` endpoint, On-chain staking coin swap
- Add `sub_broker_info` object field in broker commission and transaction APIs

**v4.99.0**

- Add `refresh_time` field in `GET /spot/accounts` endpoint response
- Remove the `PUT /earn/uni/interest_reinvest` endpoint

**v4.98.0**

- New feature `/earn/uni/rate` endpoint, Currency estimate annualized interest rate
- Add `delisting_time`、 `trade_url` field in `GET /spot/currency_pairs`、 `GET /spot/currency_pairs/{currency_pair}`
endpoint

**v4.97.0**

- New feature `GET /unified/batch_borrowable` endpoint, Batch query unified account can be borrowed up to a maximum
- `GET /spot/candlesticks` endpoint, `interval` supports `1s` granularity
- New feature `GET /earn/uni/chart` endpoint, UniLoan currency annualized trend chart
- New feature `POST /futures/{settle}/positions/cross_mode` endpoint, Switch to the full position-by-store mode

**v4.96.0**

- Add `cross_margin_balance`, `cross_mmr`, `cross_imr` field in `GET /futures/{settle}/accounts` response

**v4.95.0**

- Add `code` field in `GET /spot/account_book` query & response
- New feature `GET /unified/transferables` endpoint, Batch query unified account can be transferred up to a maximum of
- New feature `GET /margin/user/loan_margin_tiers` endpoint, Check the user's own leverage lending gradient in the
current market
- New feature `GET /margin/loan_margin_tiers` endpoint, Query the current market leverage lending gradient
- New feature `POST /margin/leverage/user_market_setting` endpoint, Set the user market leverage multiple
- New feature `GET /margin/user/account` endpoint, Query the user's leverage account list

**v4.94.0**

- New feature `GET /unified/currencies` endpoint, List of loan currencies supported by unified account
- Add `sub_uid` field in `GET /unified/accounts` query

**v4.93.0**

- Add `plan_id` field in `GET /earn/dual/investment_plan` query
- Add `from`、 `to`、 `page`、 `limit` field in `GET /earn/dual/orders` query
- Add `text` field in `GET /earn/dual/orders` response
- Add `text` field in `POST /earn/dual/orders` response
- New feature `GET /earn/staking/eth2/rate_records` endpoint, Query historical rate of ETH2

**v4.92.0**

2025-02-24

- Add `name` field in `GET /spot/currencies` query
- Add `base_name`、 `quote_name` field in `GET /spot/currency_pairs` response
- Add `unified` field in `GET /spot/price_orders` query
- Add `sub_uid` field in `GET /unified/accounts` query

**v4.91.0**

2025-02-10

`2025-04-01` After that, we will remove the following interface, please migrate to the new interface as soon as possible

**v4.90.0**

2025-01-20

- Add `transaction_type` field in `GET /wallet/push` query
- New feature `GET /rebate/user/sub_relation` endpoint, Query whether the specified user is in the system
- Add `order_size` field in `GET /futures/{settle}/liq_orders` response
- Add `type` field in `GET /spot/currency_pairs` response

**v4.88.0**

2024-12-24

- New feature `GET /spot/insurance_history` endpoint, Query spot insurance fund historical data
- Add `cross_balance`、 `iso_balance`、 `im`、 `mm`、 `imr`、 `mmr`、 `margin_balance`、 `available_margin` field
in `GET /unified/accounts` response
- `PUT /unified/unified_mode` endpoint，Added single-currency margin mode

**v4.87.0**

- New feature `GET /unified/history_loan_rate` endpoint, Get historical lending rates

**v4.86.0**

2024-12-02

- New feature `GET /wallet/order_status` endpoint. Transfer status query
- Add `update_id` field in `GET /futures/{settle}/positions` response

**v4.85.0**

2024-11-11

- Add `x-gate-exptime` field in `POST /futures/{settle}/orders`、 `POST /spot/batch_order` header.

Add `cross_order_margin`、 `cross_initial_margin`、 `cross_maintenance_margin`、 `cross_unrealised_pnl`、 `cross_available`、 `isolated_position_margin`
field in `POST /futures/{settle}/dual_mode` response.

**v4.84.0**

2024-11-04

- New feature `GET /loan/multi_collateral/current_rate` endpoint, Query the current interest rate of the currency
- Add `lowest_size`、 `highest_size` field in `GET /spot/tickers` response
- Add `amount` field in `POST /earn/dual/orders` request body

**v4.83.0**

2024-10-28

- New feature `GET /unified/leverage/user_currency_config` endpoint, Query the maximum and minimum leverage multiples
that users can set for a currency
- New feature `GET /unified/leverage/user_currency_setting` endpoint, Get the user's currency leverage
- New feature `POST /unified/leverage/user_currency_setting` endpoint, Set the currency leverage ratio
- Add `id` field in `GET /futures/{settle}/account_book` response
- Add `leverage` field in `GET /unified/currency_discount_tiers` response

**v4.82.0**

2024-10-14

- New feature `GET /account/rate_limit` endpoint, Get user flow limit information. For details, please refer
to [Trade Ratio Rate Limiting](https://www.gate.com/docs/developers/apiv4/en/#trade-ratio-rate-limiting)
- `GET /account/detail` 接口, 返回值增加 `copy_trading_role` field

**v4.81.0**

2024-09-30

- New feature `POST /options/countdown_cancel_all` endpoint, Countdown to cancel order
- Add `message` field in `GET /wallet/push` response
- Add `from`、 `to` in `GET /futures/{settle}/funding_rate` query
- Add `is_max` field in `POST /earn/dual/orders` response

**v4.80.0**

2024-09-09

- New feature `GET /options/mmp` endpoint, MMP Query
- New feature `POST /options/mmp` endpoint, MMP Settings
- New feature `POST /options/mmp/reset` endpoint, MMP Reset
- Add `block_number` field in `GET /wallet/withdrawals` response

**v4.79.0**

2024-09-02

- Add `from`、 `to` field in `GET /unified/interest_records` query
- Add `options` field in `GET /unified/unified_mode` response
- Add `options` field in `PUT /unified/unified_mode` request body

**v4.78.0**

2024-08-19

- New feature `GET /wallet/push` endpoint, Get Records
- New feature `POST /withdrawals/push` endpoint, Transfer between spot main accounts. Both parties cannot be
sub-accounts.
- New feature `GET /futures/{settle}/batch_amend_orders` endpoint, Batch modify orders with specified IDs
- Add `close_size` field in `GET /futures/{settle}/my_trades` response
- Add `tx_id` field in `POST /wallet/transfers` response

**v4.77.0**

2024-08-05

- New feature: add `GET /sub_accounts/unified_mode` endpoint，Get sub-account mode
- Add `from`、 `to` field in `GET /rebate/broker/commission_history` query
- Add `from`、 `to` field in `GET /rebate/broker/transaction_history` query

**v4.76.0**

2024-07-22

- New feature: add `GET /rebate/partner/sub_list` endpoint，Partner subordinate list
- Add `page`、 `limit` field in `GET /flash_swap/currency_pairs` query
- Add `order_id`、 `currency_pair`、 `account` field in `PATCH /spot/orders/{order_id}`
- Add `order_id`、 `currency_pair`、 `account` field in `DELETE /spot/orders/{order_id}`

**v4.75.1**

2024-07-08

- New feature: add `GET /delivery/{settle}/risk_limit_tiers` endpoint，querying risk limit levels
- New feature: add `GET /rebate/partner/transaction_history` endpoint，partners to get the transaction history of
recommended users
- Add `borrow_type` field in `GET /unified/loan_records` response
- Add `accum_size` field in `GET /futures/{settle}/position_close` response

**v4.75.0**

2024-06-24

- New feature: add `GET /account/debit_fee` endpoint，query GT deduction configuration.
- New feature: add `POST /account/debit_fee` endpoint, to enable or disable GT deduction for the current account.

**v4.74.1**

2024-06-11

- Optimization of DOM for the visible area on mobile devices

**v4.74.0**

2024-05-29

- New feature: add `GET /unified/loan_margin_tiers` endpoint, list loan margin tiers

**v4.73.0**

2024-05-27

- Add `is_all` parameter in `POST /wallet/small_balance` endpoint
- Add `text` field in `POST /spot/cancel_batch_orders` response
- Add `funding`、 `funding_version`、 `use_funding` field in `GET /unified/accounts` response

**v4.72.0**

2024-05-13

- Add `last_access` field in `GET /sub_accounts/{user_id}/keys` response
- Add `contract` field in `GET /futures/{settle}/risk_limit_tiers` response

**v4.71.0**

2024-04-23

- Add `page` parameter in `GET /wallet/saved_address` endpoint
- New feature: add `GET /api/v4/rebate/user/info` endpoint, retrieve user rebate information
- New feature: add `POST /unified/portfolio_calculator` endpoint, portfolio margin calculator
- New feature: add `GET /unified/risk_units` endpoint, retrieve user risk unit
- New feature: add `PUT /unified/unified_mode` endpoint, set unified account mode
- New feature: add `GET /unified/unified_mode` endpoint, retrieve unified account mode

**v4.70.0**

2024-04-08

- Add `pnl_pnl`、 `pnl_fund`、 `pnl_fee` field in `GET /futures/{settle}/positions` response
- Add `pnl_pnl`、 `pnl_fund`、 `pnl_fee` field in `GET /futures/{settle}/position_close` response

**v4.69.0**

2024-03-25

- Add `text` field in `POST /delivery/{settle}/price_orders` response

**v4.68.0**

2024-03-18

- New feature: add `GET /unified/currency_discount_tiers` endpoint, list currency discount tiers
- Add `type` parameter in `GET /unified/loans` endpoint
- Add `type` parameter in `GET /unified/interest_records` endpoint

**v4.67.0**

2024-03-11

- Add `filled_amount` field in `POST /spot/orders`, `POST /spot/batch_orders` response
- In frequency limit rule for the wallet withdrawal interface, the speed limit description has been corrected
from `10r/10s` to `1r/3s`(No modification to the original rate limiting behavior)

**v4.66.1**

2024-02-19

- New feature: add `GET /wallet/small_balance` endpoint, list small balance.
- New feature: add `GET /wallet/small_balance_history` endpoint, list small balance history.
- New feature: add `GET /unified/estimate_rate` endpoint, get unified estimate rate.

**v4.65.0**

2024-01-29

- Add `debit_fee` field in `GET /spot/batch_fee` response
- Add `user_id` parameter in `DELETE /account/stp_groups/{stp_id}/users` endpoint
- Spot API introduces asynchronous support modes for create orders: `ACK`, `RESULT`, `FULL`. For details, please refer
to [SPOT API](https://www.gate.com/docs/developers/apiv4/en/#create-an-order)

**v4.64.0**

2024-01-22

- Add `order_type` parameter in `GET /loan/multi_collateral/orders` endpoint
- Add `order_type`, `fixed_type`, `fixed_rate`, `expire_time`, `auto_renew`, `auto_repay` field
in `GET /loan/multi_collateral/orders` response
- Add `before_ltv`, `after_ltv` field in `GET /loan/multi_collateral/repay` response
- New feature: add `GET /loan/multi_collateral/fixed_rate` endpoint, query multi-collateral fix rate.
- Add `unrealised_pnl`, `borrowed` field in `GET /wallet/total_balance` response

**v4.63.0**

2024-01-15

- Add `decimal` field in `GET /wallet/currency_chains` response
- New feature: add `GET /futures/{settle}/risk_limit_tiers` endpoint, list risk limit tiers.

**v4.62.0**

2024-01-02

- New feature: add `POST /futures/{settle}/batch_cancel_orders` endpoint, users have the ability to batch cancel orders.
- New feature: add multi-collateral-loan api. ( `/loan/multi_collateral/**`)

**v4.61.0**

2023-12-18

- New features: The broker obtains the user's commission rebate records in `GET /rebate/broker/commission_history`
and `GET /rebate/broker/commission_history` endpoints

**v4.60.0**

2023-12-01

- Breaking change: New [Unified API](https://www.gate.com/docs/developers/apiv4/en/#unified-account) is online. The old `/portfoli/*` endpoints are deprecated.
- New features: add earn product api. ( `/earn/**`)
- Add `trade_id` field in `GET /futures/{settle}/account_book` response

**v4.59.0**

2023-11-22

- Add `funding_cap_ratio` field in `GET /futures/{settle}/contracts` response
- Add `contract` field in `GET /delivery/{settle}/account_book` response
- Add `withdraw_percent_on_chains` field in `GET /wallet/withdraw_status` response
- Add `leverage` field in `GET /portfolio/accounts` response

**v4.58.0**

2023-11-03

- Add `tier` field in `GET /account/detail` response
- Add `max_base_amount`、 `max_quote_amount` field in `GET /spot/currency_pairs` response

**v4.57.0**

2023-10-20

- New feature: API Gateway inbound & outbound time, For more details, please refer to
the [API Gateway in/out time](https://www.gate.com/docs/developers/apiv4/en/#api-gateway-in-out-time)
- New feature: support portfolio account in `POST /spot/orders` endpoint
- New feature: add `PUT /earn/uni/interest_reinvest` endpoint, users have the option to enable or disable interest
reinvestment.
- New feature: add `POST /spot/amend_batch_orders` endpoint, users have the ability to batch modify orders.
- Add `sequence_id` field in `GET /spot/trades` response
- Add `text` field in `GET /spot/account_book` response
- Add `text` field in `GET /spot/my_trades` response
- `GET /portfolio/spot/orders`、 `GET /portfolio/spot/orders`、 `GET /portfolio/spot/orders/{order_id}`、 `DELETE /portfolio/spot/orders/{order_id}`
and `PATCH /portfolio/spot/orders/{order_id}` have been deprecated. We will remove the endpoints by the end of October
2023\. Please use `/spot/orders` instead.

**v4.56.0**

2023-09-25

- Add `repayment_type` field in `GET /portfolio/loan_records` endpoint.
- Add request parameter `holding` in `GET /futures/{settle}/positions` endpoint
- Add request parameter `role` in `GET /futures/{settle}/my_trades_timerange` endpoint
- Add request parameter `side` and `pnl` in `GET /futures/{settle}/position_close` endpoint

**v4.55.0**

2023-09-12

- Add new `POST /portfolio/account_mode` endpoint, allow to change the mode.

**v4.54.0**

2023-08-28

- Add `contract_address` field in `GET /wallet/currency_chains` endpoint.
- Add `GET /portfolio/spot/currency_pairs` and `GET /portfolio/spot/currency_pairs/{currency_pair}` endpoints, list
portfolio spot's currency pairs.

**v4.53.0**

2023-08-14

- New feature: delete user in STP group in `DELETE /account/stp_groups/{stp_id}/users` endpoint

**v4.52.0**

2023-08-07

- New feature: add collateral loan api

**v4.51.0**

2023-07-29

- Adjusted and optimized the [account book types](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type)
- Add `mode` field in `GET /account/detail` edpoint.

**v4.50.0**

2023-07-14

- New feature: New [Portfolio API](https://www.gate.com/docs/developers/apiv4/en/#portfolio-account). Currently, these services are only available to whitelisted
users. If you are interested in accessing these APIs, please contact our institutional department for further
information.
- Add new endpoint `GET /flash_swap/currency_pairs`, list all flash swap currency pair

**v4.49.0**

2023-07-03

- Add new [frequency limit rule](https://www.gate.com/docs/developers/apiv4/en/#frequency-limit-rule)，the new rule is expected to take effect on 2023-07-10 (UTC+8)
- In the `GET /futures/{settle}/orders` API endpoint, the request field `contract` has been modified to be optional
instead of mandatory.

**v4.48.0**

2023-06-16

- Add `client_order_id` fields in `GET /wallet/sub_account_transfers` edpoint.

**v4.47.0**

2023-05-23

- New feature: add STP group admin api
- New feature: query estimated interest rates of margin in `GET /margin/uni/estimate_rate` endpoint.
- New feature: list futures order by time range in `GET /futures/{settle}/orders_timerange` endpoint
- Add `underlying`、 `underlying_price`、 `mark_iv`、 `delta`、 `gamma`、 `vega`、 `theta` fields
in `GET /options/positions/{contract}` endpoint.

**v4.46.0**

2023-05-08

- New feature: query spot account book in `GET /spot/account_book` endpoint
- New feature: query user futures trading fee in `GET /futures/{settle}/fee` endpoint

**v4.45.0**

2023-04-21

- The margin loan has been migrated to the `Lend & Earn`. For more information, please refer to
the [Margin Migration Instructions](https://www.gate.com/docs/developers/apiv4/en/#margin-migration-instructions)
- New feature: Add `Self-Trade Prevention` feature in the `POST /futures/{settle}/batch_orders` endpoint.

**v4.44.0**

2023-04-07

- Add `ORDER_BOOK_NOT_FOUND` and `FAILED_RETRIEVE_ASSETS` error messages.

**v4.43.0**

2023-03-27

- New feature: Add `Self-Trade Prevention` feature in the `POST /spot/orders` endpoint. Fore more detail, please refer
to [STP overview](https://www.gate.com/docs/developers/apiv4/en/#self-trade-prevention-stp)
- New feature: Get API key's ip whitelist in `GET /account/detail` endpoint.
- Add `amend_text` in `PATCH /spot/orders/{order_id}` endpoint.

**v4.42.0**

2023-03-13

- New feature: add `Lend & Earn` API
- New feature: Add `Self-Trade Prevention` feature in the `POST /futures/{settle}/orders` endpoint. Fore more detail,
please refer to [STP overview](https://www.gate.com/docs/developers/apiv4/en/#self-trade-prevention-stp)
- Add `delivery` account type in `POST /wallet/sub_account_transfers` endpoint

**v4.41.0**

2023-03-03

**v4.40.0**

2023-02-24

- New feature: List Auto-Deleveraging history endpoint `Get /futures/{settle}/auto_deleverages`
- Add `sum` field in `GET /futures/{settle}/candlesticks` endpoint

**v4.39.0**

2023-02-09

- New feature: Query a batch of user trading fee rate endpoint `GET /spot/batch_fee`
- Add `enable_bonus`、 `enable_credit` fields in `GET /futures/{settle}/contracts` endpoint

**v4.38.0**

2023-02-04

- New feature: time range query for my futures trade endpoint `GET /futures/{settle}/my_trades_timerange`
- Add `withdraw_order_id` field in `POST /withdrawals` endpoint

**v4.37.0**

2023-01-20

- Add new rebate API endpoints.

**v4.36.0**

2022-12-23

- Hiding all amount is not supported any more when using `iceberg` in `POST /spot/orders` and `POST /spot/batch_orders`
endpoints

**v4.35.0**

2022-12-09

- New feature: amend order endpoint `/spot/orders/{order_id}`
- Add `avg_deal_price` field in `GET /spot/orders` response
- Support market order in `POST /spot/batch_orders` endpoint

**v4.34.0**

2022-11-25

- Support market order in `POST /spot/orders` endpoint

**v4.33.0**

2022-11-11

- New feature: Futures Premium Index endpoint `GET /futures/{settle}/premium_index`
- Allow to specify password and email when creating a sub-account.

**v4.32.0**

2022-10-28

- Improve options api document

**v4.31.0**

2022-10-14

- Allow to transfer futures and cross\_margin funds between two sub-accounts in `POST /wallet/sub_account_to_sub_account`
endpoint

**v4.30.0**

2022-09-23

- New feature: manage sub-accounts API Key
- New feature: lock and unlock sub-account endpoint
- Allow to transfer between two sub-accounts in `POST /wallet/sub_account_to_sub_account` endpoint

**v4.29.0**

2022-09-09

- New feature: create and list sub-accounts
- Add `settle` parameter in `GET /wallet/fee` endpoint
- Add `refr` field in option order
- The maximum number of API Keys changes to 20

**v4.28.0**

2022-08-12

- Add `offset` parameter in `GET /futures/{settle}/trades`
- new countdown cancel orders endpoint for spot and futures.

**v4.27.0**

2022-07-29

- Add `X-Client-Request-Id` http header for tracking request
- new create a batch of futures order endpoint `POST /futures/{settle}/batch_orders`
- new `FOK` tif type for futures order

**v4.26.0**

2022-07-15

- Spot Price-Trigger order supports portfolio margin account
- Add `GET /wallet/saved_address` to list saved address
- `POST /wallet/transfers` returns `tx_id` field
- Add `GET /wallet/sub_account_cross_margin_balances` to query subaccount's `cross_margin` account
- Add `status` field in `GET /margin/currency_pairs` response

**v4.25.1**

2022-07-06

- New `GET /spot/time` endpoint which get system's time info.
- New `GET /options/my_settlements` endpoint which list my selttlements.
- Add `change_utc0`, `change_utc8` fields in `GET /spot/tickers` endpoint

**v4.25.0**

2022-06-24

- Support portfolio margin account API
- Cross-margin add more fields. Please refer to endpoint document for more details.
- New `POST /spot/cross_liquidate_orders` spot trading endpoint that close position when the
cross-currency is disabled
- Add `bouns` and `history` fields in `GET /futures/{settle}/accounts` endpoint
- Add `text`、 `fee` and `point_fee` fields in `GET /futures/{settle}/my_trades` endpoint
- Fix typo for `cancel a price-triggered order` endpoints
- `POST /wallet/sub_account_transfers` supports transferring to `cross_margin`

**v4.24.0**

2022-05-20

- Support flash swap operations with new API group `/flash_swap`. Spot operation permission is
required.
- New wallet APIs `GET /wallet/sub_account_margin_balances`
and `GET /wallet/sub_account_futures_balances` to help main account retrieving sub accounts'
margin and perpetual contract balances
- New perpetual contract API `GET /futures/{settle}/index_constituents/{index}` to retrieve index
price constituents
- Fix missing fields like `order_type` in `FuturesPriceTriggeredOrder`

**v4.23.4**

2022-04-25

- Spot candlesticks supports `30d` interval

**v4.23.3**

2022-04-01

1. Spot candlestick API returns base currency amount
2. Spot currency detail add `chain` field.
3. Add withdrawal and deposit status in `GET /wallet/currency_chains` response
4. Add missing `cross_leverage_limit` in perpetual contract's dual mode position leverage update API
5. Support more intervals in perpetual and delivery contract candlesticks

**v4.23.2**

2022-01-21

1. Add `fee` in withdrawal and deposit history
2. Add fix fee rate in spot `Currency`

**v4.23.1**

2021-12-23

1. Spot orders support new `time_in_force` `FOK`
2. New `FOK_NOT_FILL` error label

**v4.23.0**

2021-12-09

1. Add options API
2. Add detailed rate limiting rules
3. Add `GET /wallet/currency_chains` to retrieve chains supported by currency
4. Add additional status for deposit and withdrawal history

**v4.22.4**

2021-11-01

1. Data type of `ctime` and `ftime` in `SpotPriceTriggeredOrder` should be `int64`

**v4.22.3**

2021-10-27

1. `GET /spot/trades` supports time range based query using `from` and `to`.

**v4.22.2**

2021-09-29

1. Add more status in withdrawal or deposit record model
2. Add new write only field `auto_size` in `FuturesOrder` to support closing dual mode position.

**v4.22.1**

2021-09-07

1. New wallet API `GET /wallet/total_balance` to retrieve all user's estimate balance.
2. Add `locked` and `risk` in margin account response
3. Margin and cross margin loans support custom text input.

**v4.22.0**

2021-08-13

1. Delivery contract API supports BTC settled
2. Spot API `GET /spot/orders` and `GET /spot/my_trades` supports query by time range
3. Add margin and cross margin max borrowable API
4. Multiple document enhancements.

**v4.21.6**

2021-08-12

1. Fix incorrect address field name in `GET /wallet/deposit_address`

**v4.21.5**

2021-06-30

- `GET /spot/orders`, `GET /spot/orders/{order_id}` and `GET /spot/my_trades` allow empty
`currency_pair` if operated against finished orders
- Add fixed withdrawal fee on multiple chains in `GET /wallet/withdraw_status` response
- Add `GET /margin/transferable` to retrieve maximum transferable amount from margin account
- Add `from` and `to` parameter to specify time range for futures position closes history API

**v4.21.4**

2021-06-23

- Add millisecond timestamp in `GET /margin/account_book` response

**v4.21.3**

2021-06-17

- Add order book timestamp for both spot and futures trading

**v4.21.2**

2021-06-07

- Futures API support cross margin leverage modification
- Add new spot cross margin API `/margin/cross`
- Add spot order operations using spot cross margin account
- Add unpaid interests in spot margin account query
- Add new millisecond fields `create_time_ms` and `update_time_ms` in spot orders.
- Add `DELETE /withdrawals/{withdrawal_id}` to cancel withdrawal operation

**v4.20.1**

2021-04-14

- Update document links

**v4.20.0**

2021-03-25

- Support spot auto orders with API group `/spot/price_orders`

**v4.19.6**

2021-03-22

- Add trading timestamp in spot currency pair

**v4.19.5**

2021-03-18

- Spot and Futures operations based on order ID also accept user custom ID(but only for 30 minutes
since creation)

**v4.19.4**

2021-03-10

- `/wallet/sub_account_transfers` supports transferals with sub user's perpetual contract account

**v4.19.3**

2021-03-04

- Add margin loans auto repay API `/margin/auto_repay`
- Add `multichain_address` in `/wallet/deposit_address` for currencies with multiple deposit
addresses
- Optimize documentation

**v4.19.2**

2021-03-01

- Add `/wallet/fee` API to retrieve trading fee. Previous `/spot/fee` is deprecated in favour of
this one.
- Add new field `chain` in withdrawal operation.
- Add new field `with_id` in `/futures/{settle}/order_book` API and `id` field in its response
- Add new `offset` in API `/futures/{settle}/position_close` to retrieve position close history with
pagination.
- Add contract value calculation. Refer to `Contract` model for details.
- Fix incorrect field type in futures stats API

**v4.18.4**

2021-01-22

- Add field `create_time_ms` in spot `Trade` model
- ETF currency pairs' ticker add net value related info

**v4.18.1**

2021-01-07

- Add iceberg order support for spot orders
- Fix incorrect field types in `/futures/{settle}/contract_stats`

**v4.18.0**

2020-12-21

- Add new spot API `/spot/currencies` and `/spot/currencies/{currency}` to retrieve currency info
- Add more fields, e.g., `top_lsr_account`, `top_lsr_size`, in futures `ContractStat` model.

**v4.17.1**

2020-12-16

- Increase maximum of `limit` in `/spot/order_book` to 100

**v4.17.0**

2020-12-15

- Add `/wallet/sub_account_balances` to retrieve sub accounts' balances.

**v4.16.1**

2020-12-10

- Fix mistaken field name `dual_mode` in futures position model which should be `mode` instead.

**v4.16.0**

2020-12-09

_Spot_

- Increase order number limit each currency pair to 10 in `POST /spot/batch_orders`
- Add new query parameter `reverse` in `GET /spot/trades` to trace back trading history

_Futures_

- Add perpetual contract dual mode position support. Use `/futures/{settle}/dual_mode` to set
position's dual mode. For dual mode position operations, refer
to `/futures/{settle}/dual_comp/positions` API group
- Add perpetual contract new field `in_dual_mode` in futures account response model;
`dual_mode` in position response model.
- Add new perpetual contract public API `/futures/{settle}/liq_orders` to query liquidated orders in
markets

**v4.15.5**

2020-11-04

- Add `/futures/{settle}/contract_stats` API to retrieve contract stats
- Add `/margin/{currency_pair}` to retrieve single margin currency pair detail

**v4.15.4**

2020-09-01

- Add `point_type` in `GET /spot/fee` response
- Add `GET /wallet/withdraw_status` API
- Add C# SDK entry

**v4.15.2**

2020-08-12

- Add `GET /spot/fee` to retrieve spot order trading fee rates

**v4.15.1**

2020-08-04

- Add `GET /spot/open_orders` to retrieve all open orders in spot trading
- Add `GET /margin/account_book` to retrieve margin account balance history

**v4.14.1**

2020-07-08

- maximum length of `text` field in order extends to 28(prefix excluded)

**v4.14.0**

2020-07-06

- New Delivery contract APIs `/delivery`

**v4.13.1**

2020-06-28

- Add `GET /wallet/sub_account_transfers` to list sub account transfer records

**v4.13.0**

2020-05-20

- APIv4 now supports withdraw API. Refer to `POST /withdrawals` and "Authentication"
section for details.
- `POST /wallet/transfers` supports transferring between spot and futures account
- Wallet API supports retrieving deposits and withdrawals history
- Futures orders and personal trades retrieving now supports `offset` field
- Futures `Contract` model add new field `in_delisting`

**v4.12.0**

2020-04-08

- APIv4 Key management improved. Keys are no longer separated with different trading types.
Every key can now have multiple operation permissions. Refer to _"About APIv4 key improvement"_
for details.
- Add `POST /wallet/sub_account_transfers` to support transferring between main and sub account
- `GET /spot/candlesticks` adds query parameters `from` and `to` to support retrieving history data
points

**v4.11.2**

2020-03-29

- Add `filled_total` in `Order` to replace `fill_price` (the latter is badly named)
- Add new error label `POC_FILL_IMMEDIATELY`

**v4.11.1**

2020-03-23

- Add `role` in `GET /spot/my_trades` response
- Fix missing currency account in `GET /margin/funding_accounts`

**v4.11.0**

2020-03-20

- Spot order supports GT fee discount
- Spot order time in force supports `poc`

**v4.10.1**

2020-02-24

- Add `trade_status` in spot currency pair

**v4.10.0**

2020-02-17

- Margin order creation adds new field `auto_borrow`(write only) to borrow
the insufficient part by the system if balance is not enough
- Add new API `POST /spot/cancel_batch_orders` to support batch cancellation
with specified order IDs
- Add new document section "Error handling" and "Which one to choose, APIv4 or APIv2?"

**v4.9.1**

2020-01-07

- Add fee and recent modification time in `Order` and `BatchOrder`
- Add fee in `GET /spot/my_trades` response

**v4.9.0**

2019-12-17

- `last_id` in `GET /futures/{settle}/trades` is deprecated. Use `from` and `to` to retrieve trading
history

**v4.8.2**

2019-12-02

- Add `/spot/batch_orders` to support creating a bundle of spot or margin orders
- Fee rate of margin loan repayment enjoys VIP discount
- `Loan` add new fields `fee_rate`(fee rate of lending loan)
and `orig_id`(original loan ID if loan is auto renewed)

**v4.8.1**

2019-11-27

- Fix missing `settle` in `GET /futures/{settle}/positions` docs and code snippet

**v4.8.0**

2019-11-07

- Futures API now supports settling in USDT.
- Change `/futures` to `/futures/{settle}` in ALL futures API to support
futures operations in different settle currency.
- `currency` field in `/futures/{settle}/accounts` response adds new value: `USDT`
response to replace `volume_24h_btc` and `volume_24h_usd`. The latter two are still
preserved for compatibility usage, but are NOT recommended for any futures operations.

To use USDT futures, just replace `/futures` with `/futures/usdt`, e.g.
use `GET /futures/usdt/accounts` to retrieve futures accounts settled in USDT,
while `GET /futures/btc/accounts` returns accounts in BTC.

For compatibility, `GET /futures/xxx` defaults to `GET /futures/btc/xxx`, e.g.
`GET /futures/accounts` will be treated as `GET /futures/btc/accounts`

**v4.7.3**

2019-07-18

- Add `text` in `/spot/orders` and `/futures/orders` to support user defined order information

**v4.6.3**

2019-06-11

- Add point information in Futures account and position

**v4.7.2**

2019-05-29

- Change `rate` in `Loan` as non-required for lending side.

**v4.7.1**

2019-04-17

- Add wallet v4 API. Support transfers between spot and margin account for now.
- `GET /margin/loans` can sort by `rate` and support an optional parameter `currency_pair`
- Fix miscellaneous document issues

**v4.6.2**

2019-04-24

- Fix price-triggered futures order's docs incorrect override docs for
`GET /futures/orders/{order_id}` and `DELETE /futures/orders/{order_id}`

**v4.6.1**

2019-04-02

- Add `high_24h`, `low_24h` and `funding_rate_indicative` in futures ticker

**v4.6.0**

2019-03-21

_SDK related only_

- Rename futures order related function name in SDKs to avoid duplication
with spot order API in Go
- Fix query parameter not decoded while generating authentication signature

**v4.5.2**

2019-03-14

- `currency_pair` in `/spot/order_book` should be a required parameter
- Optimize document code samples

**v4.5.1**

2019-03-11

- Fix missing URL parameter description

**v4.5.0**

2019-03-05

To avoid version confusion, all versions in APIv4 (documents and SDKs are both included) will start
with `4` from now on

- Add Spot v4 API to provide improved API capability
- Add Margin v4 API to provide support for margin loans and trading
- Add Futures price triggered auto order API support. Refer to `/futures/price_orders` for details
- Base URL of all Gate API v4 real trading changed to `https://api.gateio.ws/api/v4`

**v1.3.0**

2019-02-13

_Important update_

- Domain of base URLs are changed to `fx-api.gateio.ws` and `fx-api-testnet.gateio.ws`
respectively, `*.gateio.io` is deprecated and will soon be out of service.

**v1.2.1**

2019-02-13

- Add `volumn_24h_usd` and `volume_24h_btc` in `GET /futures/tickers` response

**v1.2.0**

2019-01-17

- Add `GET /futures/contracts/{contract}` to get one single contract
- Add `GET /futures/positions/{contract}` to get one single position
- Add `GET /futures/account_book` to retrieve user account balance history
- Add `config_change_time` in `Contract` model
- fix miscellaneous document issues

**v1.1.0**

2019-01-08

- Add more fields to `Contract`, `Position`, `FuturesOrder`
- Add API `GET /futures/position_close` to retrieve position close history
- Add optional `order_id` support for API `GET /futures/my_trades`
- Change the status code of `DELETE /futures/orders` and `DELETE /futures/orders/{order_id}` from
204 to 200,
with cancelled order details returned on success.
- Request `DELETE /futures/orders/{order_id}` with invalid order ID or order
that has been finished will return 404 instead of ignoring the error
- `POST /futures/orders` now supports POC, iceberg

**v1.0.0**

2018-12-30

- Initial release

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#general) General

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#matching-mechanism) Matching mechanism

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#matching-priority) Matching priority

Gate Order matching follows Price Priority > Time priority principle.

Suppose that the order book is as follows：

| Order | Order time | Ask/Selling price |
| --- | --- | --- |
| A | 10:00 | 100 |
| B | 10:00 | 102 |
| C | 10:01 | 100 |

If the current price of 10:02 pays 102, the final transaction order is: A, C, B

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#order-life-cycle) Order life cycle

A valid order sent to the matching engine is immediately confirmed and executed with existing
orders, with the executing result sent back to the client.

If an order is fully executed, then it is closed. If any part of the order is not executed
immediately, orders with TimeInForce set to `IOC` will be cancelled, while others will be appended
to the price list, waiting for subsequent filling or being cancelled.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#data-center) Data Center

Gate data center is located in AWS Japan's ap-northeast-1 region.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-overview) API Overview

| API Classification | Category Links | Overview |
| --- | --- | --- |
| host + `/api/v4/spot/*` | Spot Trading | Including currency status, market information, order, transaction records and other functions |
| host + `/api/v4/margin/*` | Margin Trading | Margin account management, lending, repayment, etc |
| host + `/api/v4/wallet/*` | Wallet Management | Charge and withdrawal records, balance inquiries, fund transfers, etc. |
| host + `/api/v4/withdrawals/*` | Withdrawal | Withdrawal of digital currency |

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#margin-migration-instructions) Margin Migration Instructions

Between 14:00 (UTC+8) on April 13, 2023 and 14:00 (UTC+8) on April 23, 2023, the platform will gradually migrate the assets that have not been borrowed in the lending market to the `Lend & Earn` through an automated system process. At the same time, assets that have already been borrowed will be cancelled for automatic lending. After the migration is complete, you can check your investment details in the `Lend & Earn`. During this period, borrowing funds through the lending market will be temporarily suspended. You can also manually transfer your assets from the lending market to the `Lend & Earn` to obtain investment returns in advance.

After the automatic migration, the old version of the borrowing and lending endpoint will be deprecated, and the new version of the endpoint can be found in the /margin/uni endpoint group. For detailed endpoint migration, please refer to the following table:"

Margin account related endpoints：

| Name | Path | Deprecated | New Path |
| --- | --- | --- | --- |
| Margin account list | GET /margin/accounts | No | `-` |
| List margin account balance change history | GET /margin/account\_book | No | `-` |
| Funding account list | GET /margin/funding\_accounts | No | `-` |
| Update user's auto repayment setting | POST /margin/auto\_repay | No | `-` |
| Querying user's automatic repayment settings | GET /margin/auto\_repay | No | `-` |
| Get the max transferable amount for a specific margin currency | GET /margin/transferable | No | `-` |

The margin lending and borrowing related APIs have been migrated to the `/margin/uni` API group：

| Name | Old Path | Deprecated | New Path |
| --- | --- | --- | --- |
| List all supported currency pairs supported in margin trading | GET /margin/currency\_pairs | Yes | GET /margin/uni/currency\_pairs |
| Query one single margin currency pair | GET /margin/currency\_pairs/{currency\_pair} | Yes | GET /margin/uni/currency\_pairs/{currency\_pair} |
| Lend or borrow | POST /margin/loans | Yes | POST /margin/uni/loans |
| Retrieve one single loan detail | GET /margin/loans/{loan\_id} | Yes | `-` |
| List all loans | GET /margin/loans | Yes | GET /margin/uni/loans |
| Repay a loan | POST /margin/loans/{loan\_id}/repayment | Yes | POST /margin/uni/loans |
| List loan repayment records | GET /margin/loans/{loan\_id}/repayment | Yes | GET /margin/uni/loan\_records |
| Get the max borrowable amount for a specific margin currency | GET /margin/borrowable | Yes | GET /margin/uni/borrowable |
| List interest records | `-` | `-` | GET /margin/uni/interest\_records |

The earn related APIs have been migrated to the `/earn/uni` API group):

| Name | Old Path | Deprecated | New Path |
| --- | --- | --- | --- |
| List all supported currency pairs supported in margin trading | GET /margin/currency\_pairs | Yes | GET /earn/uni/currencies |
| Query one single margin currency pair | GET /margin/currency\_pairs/{currency\_pair} | Yes | GET /earn/uni/currencies/{currency} |
| Lend or borrow | POST /margin/loans | Yes | POST /earn/uni/lends |
| List all loans | GET /margin/loans | Yes | GET /earn/uni/lends |
| Order book of lending loans | GET /margin/funding\_book | Yes | - |
| Merge multiple lending loans | POST /margin/merged\_loans | Yes | - |
| Modify a loan | PATCH /margin/loans/{loan\_id} | Yes | PATCH /earn/uni/lends |
| Cancel lending loan | DELETE /margin/loans/{loan\_id} | Yes | POST /earn/uni/lends |
| List repayment records of a specific loan | GET /margin/loan\_records | Yes | GET /earn/uni/lend\_records |
| Get one single loan record | GET /margin/loan\_records/{loan\_record\_id} | Yes | `-` |
| Modify a loan record | PATCH /margin/loan\_records/{loan\_record\_id} | Yes | `-` |
| List interest records | `-` | `-` | GET /earn/uni/interest\_records |

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#api) API

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#http-convention) HTTP convention

- All read endpoints use `GET` method. They accept only request parameters. No request body will be
read.
- `DELETE` methods remove resources(like orders), but not all removing operation using `DELETE`,
as `DELETE` s don't read request body either. For complex removing operations, `POST` method is
used with parameters filled in request body.
- Updating is done using `POST`, `PUT` or `PATCH` method. Their parameters are either in body or
request parameters for different endpoints. Refer to endpoint detail for how to send the request.
- All endpoints return HTTP status code `2xx` on success. `401` is returned on authentication
failure. Other `4xx` codes mean the request is malformed. `5xx` means the server encounter some
critical error on processing the request. Commit issues if `5xx` is met.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#time) Time

All time related fields are unix timestamp in **seconds** if no extra note, but they may differ
in formats(int64, number or string). Possible values like the following may be returned:

- 1596531048
- "1596531048"
- 1596531048.285
- "1596531048.285"

The best way to handle time fields is parsing them as a number with decimal places.
If higher precision is not needed, you can safely cast them to integer(or long). Our SDKs listed
above has already taken proper deserialization to handle them

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-gateway-in-out-time) API Gateway in/out time

In every API request, the response header will always include the following fields:

- `X-In-Time`: The timestamp when the API gateway receives a request, in Unix timestamp format, measured in microseconds.

- `X-Out-Time`: The timestamp when the API gateway returns a response, in Unix timestamp format, measured in microseconds.


For example:

```
X-In-Time: 1695715091540163
X-Out-Time: 1695715091551905

```

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#pagination) Pagination

Pagination is achieved using one of the following method

- `page-limit`
- `limit-offset`

In both method, `limit` limits the maximum number of records returned in one request. If no
additional explanation, it defaults to `100` if not provided and its maximum value is limited
to `1000`.

`page` starts from `1`, mimicking common paging used in web pages. To iterate the whole list, use
the same `limit` and increment `page` by `1` until the records' length is shorter than the
`limit`

`offset` starts from `0`, behaving like common DB search. To iterate the whole list, increment
`offset` by `limit` until the records' length is shorter than the `limit`.

For example, if the total number of orders is 201. Using page-limit method, send request parameters
like the following:

1. `page=1&limit=100`
2. `page=2&limit=100`
3. `page=3&limit=100`

Using limit-offset method, send request parameters like:

1. `limit=100&offset=0`
2. `limit=100&offset=100`
3. `limit=100&offset=200`

Some endpoints may return additional pagination metadata. If present, they are sent back through the
response header. Take `GET /futures/{settle}/orders` as an example, following headers will be
returned

- `X-Pagination-Limit`: request limit
- `X-Pagination-Offset`: request offset
- `X-Pagination-Total`: total record number satisfying the request

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#frequency-limit-rule) Frequency limit rule

| Markets | Endpoints | Limits | Based On | Include |
| --- | --- | --- | --- | --- |
| All public endpoints | Public endpoints | 200r/10s per endpoint | IP | Orderbook, Candlestick, Ticker, etc. |
| Wallet | Private endpoints | Withdrawal(POST /withdrawals) : 1r/3s<br> Transfer between trading accounts (POST /wallet/transfers) 80r/10s<br> Transfer between main and sub accounts (POST /wallet/sub\_account\_transfers) 80r/10s<br> Transfer from a sub-account to another sub-account (POST /wallet/sub\_account\_to\_sub\_account) 80r/10s<br> Retrieve user's total balances (GET /wallet/total\_balance) 80r/10s<br> Retrieve sub account balances (GET /wallet/sub\_account\_balances) 80r/10s<br> Query sub accounts' margin balances (GET /wallet/sub\_account\_margin\_balances) 80r/10s<br> Query sub accounts' futures account balances (GET /wallet/sub\_account\_futures\_balances) 80r/10s<br> Query subaccount's cross\_margin account info(GET /wallet/sub\_account\_cross\_margin\_balances) 80r/10s<br> The Others: 200r/10s per endpoint | UID | Withdrawal.<br> Query personal account balance.<br> Query subaccount balance. |
| Spot | Private endpoints | The rate limit for batch/single order placement and amend an order are total of 10r/s (UID+Market)<br> The rate limit for batch/single order cancellation is total of 200r/s<br> The Others: 200r/10s per endpoint | UID | Spot order placement and cancellation.<br> Trade history and fee rates. |
| Perpetual Futures | Private endpoints | The rate limit for batch/single order placement and amend an order are total of 100r/s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 200r/s<br> <br> The Others: 200r/10s per endpoint | UID | Futures order placement and cancellation<br> Trade history and fee rates |
| Delivery | Private endpoints | The maximum rate limit for the order placement (bulk/single) is 500r/10s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 500r/10s<br> <br> The Others: 200r/10s per endpoint | UID | Order placement and cancellation |
| Options | Private endpoints | The maximum rate limit for the order placement (bulk/single) is 200r/s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 200r/s<br> <br> The Others: 200r/10s per endpoint | UID | Order placement and cancellation |
| Subaccount | Private endpoints | 80r/10s per endpoint | UID | Create a sub-account.<br> Retrieve the list of sub-accounts.<br> Disable or enable API key for a sub-account. |
| Unified | Private endpoints | Borrow or repay 15/10s | UID | Borrow or repay(POST /unified/loans) |
| Other Private endpoints | Private endpoints | 150r/10s per endpoint | UID | Earning, collateral etc |

> The rate limit is counted against each sub-account or main account.

**Rate Limit**

Each request to the API response header will contain the following fields:：

- X-Gate-RateLimit-Requests-Remain - your remaining requests for current endpoint
- X-Gate-RateLimit-Limit - your current limit for current endpoint
- X-Gate-RateLimit-Reset-Timestamp - the timestamp indicating when your request limit resets if you have exceeded your rate\_limit. Otherwise, this is just the current timestamp (it may not exactly match timeNow).

WebSocket:

- Spot: Bulk order/single order/single order modification, a total of 10 requests per second (10r/s).
- Futures: Bulk order/single order/single order modification/single order cancellation/bulk cancellation, a total of 100 requests per second (100r/s).
- Others: No limit.
- Number of connections per IP: ≤ 300

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#rate-limit-based-on-fill-ratio) Rate Limit Based On Fill Ratio

In order to enhance trading efficiency, we have decided to implement more favorable sub-account rate limits for clients with a higher fill ratio. This assessment will be based on trading data from the past seven days and will be calculated daily at 00:00 UTC. Please note that this rule applies only to clients at **VIP level 14 and above**.

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-introduction-of-terminology) 1\. Introduction of Terminology

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-1-symbol-multiplier) 1.1 Symbol Multiplier

To facilitate a more refined management of the impact of different trading products on the fill ratio, we have introduced the concept of the symbol multiplier. This multiplier allows us to adjust the influence of each product on the overall trading volume based on its characteristics. For products with a multiplier of less than 1, they typically involve smaller contract sizes and therefore require more trading orders to achieve the same trading volume. Generally, all trading products come with a default multiplier; however, certain products are assigned independent multipliers based on their specific characteristics. For detailed information regarding the multipliers of relevant products, please refer to the provided table.

| Product Typee | Based On | Independnet Symbol Multiplier | Default Symbol Multiplier |
| --- | --- | --- | --- |
| USDT-Margined Perpetural Futures | Contract Symbol | 1<br> Contract Symbol:<br> BTC-USDT<br> ETH-USDT | 0.4 |
| Spot | Currency Pairst | 1<br> Currency Pairs:<br> BTC-USDT<br> ETH-USDT | 0.4 |

> Please note: The spot trading rate limits will not be launched this time.

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-2-definition-of-trading-volume-weight) 1.2 Definition of Trading Volume Weight

We will assess the behavior patterns of makers and takers based on market fluctuations and design the trading volume weight ratios accordingly. Additionally, we will regularly evaluate these weights and make synchronized adjustments when necessary.

**Current weight of the maker trading volume: 100%, current weight of the taker trading volume: 90%.**

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-3-calculation-formula) 1.3 Calculation Formula

The system will take a snapshot of the data at 00:00 UTC daily and, based on this information, will select the higher value between the fill ratio of the sub-account and the overall fill ratio of the main account to determine the future trading rate limit for the sub-account. For exchange brokers, the system will only consider the fill ratio of their sub-accounts. It is important to note that the main account is also considered a "sub-account."

1. Sub-account Fill Ratio: This ratio is calculated as follows: (Sub-account Taker's USDT trading volume × 0.9 + Maker's USDT trading volume × 1) / (The sum of (Number of new and modified requests for each contract × symbol multipliers) for each subaccount).
2. Main-account Aggregated Fill Ratio: This ratio is calculated as follows: (main account's Taker USDT trading volume × 0.9 + Maker USDT trading volume × 1) / (The sum of (Number of new and modified requests for each contract × symbol multipliers) for all subaccounts).

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_2-future-rate-limit-rule) 2\. Future Rate Limit Rule

| Contract Frequency Limitation Rules |
| --- |
| Tier | Ratio | Rate Limit (uid) |
| Tier 1 | \[0,1) | 100r/s |\
| Tier 2 | \[1,3) | 150r/s |\
| Tier 3 | \[3,5) | 200r/s |\
| Tier 4 | \[5,10) | 250r/s |\
| Tier 5 | \[10,20) | 300r/s |\
| Tier 6 | \[20,50) | 350r/s |\
| Tier 7 | >= 50 | 400r/s |\
\
> > Please stay tuned for the rate limits for spot trading.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_3-detailed-rules-for-fill-ratio) 3\. Detailed Rules for Fill Ratio\
\
1. Target Client Group: VIP ≥ 14\
2. Calculation Period: 7 days\
3. Update Time: Daily at 08:00 (UTC). The system will update the fill ratio data based on the data from 00:00 UTC.\
1. If the fill ratio and the pre-set rate limit improve, the increase will take effect immediately at 08:00 (UTC).\
2. However, if the fill ratio declines, the rate limit will be reduced immediately.\
3. If a client's VIP level drops below VIP 14, their rate limit will be lowered to the minimum tier, taking effect immediately.\
4. If a client's VIP level rises above VIP 14, their rate limit will be adjusted immediately based on their current level.\
5. If a sub-account's trading volume over the past 7 days is below 1,000,000 USDT, the rate limit will be implemented based on the main-account aggregated fill ratio.\
6. For newly created sub-accounts, the minimum tier rate limit will be applied at the time of creation, and the aforementioned rate limit rules will begin to apply at T+1 08:00 (UTC).\
7. Both WebSocket and REST APIs are subject to these rules.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_4-example) 4\. Example\
\
Assuming the client has three accounts, with the symbol multipliers for trading perpetual contract products BTC-USDT and SOL-USDT being 1 and 0.4, respectively.\
\
1. Account A (Main Account):\
   - BTC-USDT perpetual futures Maker trading volume: 100 USDT, number of order requests: 10; Perpetual futures Taker trading volume: 200 USDT, number of order requests: 20.\
   - SOL-USDT perpetual futures Maker trading volume: 20 USDT, number of order requests: 15; Perpetual futures Taker trading volume: 20 USDT, number of order requests: 20.\
   - Sub-account Fill Ratio = ((100 + 20) \* 1 + (200 + 20) \* 0.9) / ((10 + 20) \* 1 + (15 + 20) \* 0.4) = 7.23\
2. Account B (Sub-account):\
   - BTC-USDT perpetual futures Maker trading volume: 200 USDT, number of order requests: 20; Perpetual futures Taker trading volume: 200 USDT, number of order requests: 30.\
   - SOL-USDT perpetual futures Maker trading volume: 20 USDT, number of order requests: 5; Perpetual futures Taker trading volume: 30 USDT, number of order requests: 5.\
   - Sub-account Fill Ratio = ((200 + 20) \* 1 + (200 + 30) \* 0.9) / ((20 + 30) \* 1 + (5 + 5) \* 0.4) = 7.91\
3. Account C (Sub-account):\
   - BTC-USDT perpetual futures Maker trading volume: 50 USDT, number of order requests: 5; Perpetual futures Taker trading volume: 60 USDT, number of order requests: 8.\
   - SOL-USDT perpetual futures Maker trading volume: 100 USDT, number of order requests: 20; Perpetual futures Taker trading volume: 120 USDT, number of order requests: 25.\
   - Sub-account Fill Ratio = ((50 + 100) \* 1 + (60 + 120) \* 0.9) / ((5 + 8) \* 1 + (20 + 25) \* 0.4) = 10.06\
4. Main Account Aggregated Fill Ratio = ((100 + 20 + 200 + 20 + 50 + 100) \* 1 + (200 + 20 + 200 + 30 + 60 + 120) \* 0.9) / ((10 + 20 + 20 + 30 + 5 + 8) \* 1 + (15 + 20 + 5 + 5 + 20 + 25) \* 0.4) = 8.19\
5. Account Rate Limits:\
   - Account A = max(7.23, 8.19) = 8.19 -> 250 r/s\
   - Account B = max(7.91, 8.19) = 8.19 -> 250 r/s\
   - Account C = max(10.06, 8.19) = 10.06 -> 300 r/s\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_5-remarks) 5\. Remarks\
\
1. The release date for the rate limit of perpetual contracts based on fill ratio will be announced later. Please stay tuned.\
2. The existing abuse rate limit rules for perpetual contracts will still apply, namely:\
1. Fill Ratio = USDT Training Amount / (Total Number of Order, Cancellation, and Modification Requests)\
2. If the number of requests exceeds 86,400 within 24 hours, with no order fill in the same period. Then the order placement rate limit will be restricted to 10r/10s for the next hour.\
3. If the number of requests exceeds 86,400 within 24 hours, with the fill ratio below 1%. Then the order placement rate limit will be restricted to 20r/10s for the next hour.\
3. Please stay tuned for the fill ratio rate limit for spot trading.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#return-format) Return Format\
\
All API responses are in JSON format, and users need to transform and extract data by themselves.\
\
The HTTP status code 2XX will be returned when all operations are successful. 401 indicates that\
there is a problem with the certification. Other 4xx status codes indicate that the request is\
invalid. If it is a 5xx error, the server has encountered an unknown serious error when processing\
the request. Please give feedback as soon as possible。\
\
**Return Status**\
\
| Status Code | Description |\
| --- | --- |\
| 200/201 | Request succeeded |\
| 202 | Request accepted by the server, but processing is not done yet |\
| 204 | Request succeeded, but the server doesn't return body |\
| 400 | Invalid request |\
| 401 | Authentication failed |\
| 404 | Not found |\
| 429 | Too many requests |\
| 5xx | Server error |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#data-type) Data Type\
\
| Type | Description |\
| --- | --- |\
| `string` | String type, in double quotation marks. Price and amount are also formatted in string format |\
| `integer` | 32-bit integer，Mainly related to status codes, size, times, etc. |\
| `integer(int64)` | 64-bit integer，Mainly involves ID and higher precision timestamp |\
| `float` | Floating point number. Some time and stat fields use float. |\
| `object` | Object，Contains a child object{} |\
| `array` | List，Includes multiple groups of content |\
| `boolean` | true is true，false is false |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#portfolio-margin-account) Portfolio Margin Account\
\
TIP\
\
The Portfolio Margin Account is no longer maintained, please refer to the new version of the [Unified Account](https://www.gate.com/docs/developers/apiv4/en/#unified-account)\
\
Since version `4.25.0`, we start supporting portfolio margin account. Gate's Portfolio Margin\
Account is a new feature of Gate's trading system. Its main function is to break the capital\
isolation between cross-margin leverage account and USD cross-margin perpetual contract account\
inside a Classic Account and achieve the multi-currency margin sharing among multi-product lines.\
Thanks to the margin sharing, users don't need to transfer funds between the two accounts, and the\
profit and loss of positions among different trading products can offset each other and effectively\
improve the capital utilization rate. See more details in the\
[Help Center](https://www.gate.com/help/trade/leveraged/26421/introductions-to-gate.io-s-portfolio-margin-account)\
\
Before using the portfolio margin account's API key, you should create the API key on the API\
management page.\
The API key supports spot and perpetual contracts trading only.\
\
> If permissions of the API key can't be checked, ensure your cross-margin account has available\
> balance first.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer) Transfer\
\
The classic account and portfolio margin account are two different capital isolation accounts. If\
you want to achieve multi-currency margin sharing among multi-product lines, use\
the portfolio margin account please.\
\
The funds of the portfolio margin account come from the classic account. Due to the change of funds\
in the classic account, the transfer of funds can only be performed using the API Key of the classic\
account.\
\
The portfolio margin account is upgraded based on the cross-margin account of the original classic\
account, so the classic account only needs to transfer its spot funds to the cross-margin account to\
deposit the portfolio margin account. Similarly, withdrawals from portfolio margin account can be\
achieved by the classic account performing transferals from the cross margin to its spot account.\
\
The API Key of the portfolio margin account can only perform transferals among its own multiple\
accounts.\
Due to the sharing of margin, the portfolio margin account does not need to transfer funds\
to its futures account (we also restrict doing so).\
If the futures account has PNL funds that need to be withdrawn, it must be transferred by the\
portfolio margin account's API key to its cross-margin account first, so that the classic\
account can perform withdrawals from portfolio margin account.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot-trading) Spot trading\
\
The spot trading of the portfolio margin account is almost the same as the classic account, except\
that `cross_margin` must be specified in the `account` parameter when placing orders. For example,\
if you want to place a buy order for the `BTC_USDT` currency pair, the order request will be similar\
to\
\
```\
POST /spot/orders\
\
{\
  "currency_pair": "BTC_USDT",\
  "account": "cross_margin",\
  "side": "buy",\
  ...\
}\
\
```\
\
For other related restrictions, please refer to the document of the API endpoint directly.\
\
TIP\
\
It should be noted that the portfolio margin account is upgraded from the classic account's\
cross-margin account. The API Key of the classic account originally supports the operation of the\
cross-margin account. In order not to affect the existing operations of the classic account, we\
still retain this function of the classic account. So whether it is the API Key of the classic\
account or the portfolio margin account, both can operate the same the cross margin account (note\
that the futures accounts are separate)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-trading) Futures trading\
\
The API operation of the perpetual contract of the portfolio margin account is exactly the same as\
that of the classic account, but currently only supports USD settlement\
\
TIP\
\
In the futures trading, it should be noted that there is no compatibility for cross-margin accounts\
like using the API Key of the classic account in spot trading. Therefore, when using the API Key of\
the classic account for futures trading, assets are kept under `classic account-futures`, and when\
using portfolio margin account API Key for futures trading, assets are kept\
under `portfolio margin account-futures`. These two are different futures accounts. In addition,\
funds under `classic account-spot` cannot share margin with `classic account-futures`.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#trace-id) Trace ID\
\
The API response will carry the header: X-Gate-Trace-ID . This header is used for tracking.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#self-trade-prevention-stp) Self-Trade Prevention (STP)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#concepts) Concepts\
\
**Self-Trade Prevention**: STP will prevent any user's orders from being matched with each other.\
\
**CN**: Cancel new, Cancel new orders and keep old ones.\
\
**CO**: Cancel old, Cancel old orders and keep new ones.\
\
**CB**: Cancel both, Both old and new orders will be cancelled.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#stp-strategies) STP Strategies\
\
We support three STP strategies, which are `CN` , `CO` and `CB`.\
\
STP is achieved by adding users to one STP trading group.\
When a user in a STP group place orders, and trading could happen with existing orders of users in the same group, orders will be cancelled.\
The prevention strategy depends on the `stp_act` parameter specified when placing the order as taker.\
If not specified, the `CN` strategy will be used by default.\
\
A user has to be added to a STP trading group before using STP.\
When a user does not belong to any STP trading group, and place orders with the `stp_act` parameter, the orders will be rejected.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-parameter-adjustment) API Parameter Adjustment\
\
Take placing futures order as an example:\
\
```\
POST /futures/{settle}/orders\
\
```\
\
New request body parameter:\
\
| Name | Position | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_act | body | string | No | STP Strategies, including: <br>\- cn<br>\- co<br>\- cb |\
\
New response fields:\
\
| Name | Type | Required | Restriction | Description |\
| --- | --- | --- | --- | --- |\
| stp\_act | string | No | none | STP Strategies, including：<br>\- cn<br>\- co<br>\- cb |\
| stp\_id | integer(int64) | No | readonly | The ID of the STP trading group to which user belongs. |\
| finish\_as | string | No | readonly | order finish type: <br>\- **stp: The order has been canceled due to the `STP`** |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-case) User case\
\
There are multiple accounts under `Organization A`, and the IDs of several accounts are `101`, `102`, and `103`\
\
In order to prevent self-trading of orders placed by internal accounts of the organization, the administrator created a STP trading group with group ID `100`,\
and added accounts `101` and `102` to the STP trading group.\
In this case, the members in the group are `[101,102]`.\
\
T1: The `STP` strategy version released.\
\
T2: After the `organization A` account `101` places a short order, there is no matching order in the market order book to match the transaction.\
At this time, the role of the order is `maker`, and the order status is `open`.\
The key response fields returned are:\
\
```\
{\
	"status":"open",\
	"stp_act":"cn",\
	"stp_id":100\
}\
\
```\
\
T3: `Organization A` account `101`/ `102` places a long order, and it can reach a trade with account 101’s short order.\
The match engine finds both two orders' stp\_id are 100, so it applies the STP strategy of the taker order, which defaults to `cn` , and cancels the long order.\
Order's `finish_as` will be set to `stp`.\
The key response fields returned are:\
\
```\
{\
	"status":"finished",\
	"stp_act":"cn",\
	"stp_id":100,\
	"finish_as":"stp"\
}\
\
```\
\
- If `stp_act` is `co` , the order placed by `taker` will be retained, the order status will be `open`,\
and the system will cancel the order of `maker`.\
\
- If `stp_act` is `cb`, both the long and short orders will be cancelled. Orders' `finish_as` will be set to `stp`.\
The key response fields returned are:\
\
\
```\
{\
	"status":"finished",\
	"stp_act":"cb",\
	"stp_id":100,\
	"finish_as":"stp"\
}\
\
```\
\
T3': If account 103 places a long order, and it can reach a trade with account 101’s short order,\
the transaction will be made since account 103 has not been added to account 101’s STP group.\
The key response fields returned are:\
\
```\
{\
	"status":"finished",\
	"stp_id":0,\
	"finish_as":"filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#unified-account) Unified Account\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#description) Description\
\
Once a user upgrades their account to the unified account, they can utilize the assets from their spot account as collateral for trading. The assets in the account, denominated in various currencies, will be adjusted based on their liquidity and converted to USD for consistent calculation of the account's assets and position value.\
\
The maximum borrowing limit for margin trading represents the maximum amount that a user can borrow for a given trading market. The platform calculates the user's maximum borrowing limit based on factors such as available margin and platform risk control rules. Once the margin trading generates automatic borrowing, the platform immediately starts accruing interest on the borrowed digital assets.\
\
Currently, the ability to switch to `cross_margin` or `usdt_futures` mode is available. In the future, we will gradually introduce support for various combination margin accounts, including `Futures`, `Delivery`, `Options` and more. Stay tuned for further updates.\
\
Please refer to the documentation for unified API. Once you have upgraded your account, you will be able to make use of these endpoints.\
\
Related endpoint can be found in the Unified Account API doc. After enabling the Unified Account, you can proceed to call them. For more detailed information, please refer to [here](https://www.gate.com/unified-trading-account)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-integration-process) API Integration Process\
\
- Create a new `API KEY` or update the permissions of an existing `API KEY`, checking the `unified` permission\
- Use the classic account's `API KEY` to call the `PUT /unified/unified_mode` endpoint, or upgrade from the WEB page to the Unified Account\
- Use the `/api/v4/spot/**` API for spot-related operations (ordering, modifying orders, querying orders), with the `account=unified` option\
- Use the `/api/v4/futures/**` API for perpetual futures-related operations (ordering, modifying orders, querying orders)\
- Use the `/api/v4/unified/**` API for Unified Account-related operations (account querying, loan querying)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot-trading-2) SPOT Trading\
\
The spot trading in the Unified Account is consistent with that in the classical account. In order operations, specify `account=unified`, or specify `account=spot` and the system will automatically handle the order as a unified account order when detecting the account as a unified account. For example, to place a buy order for the `BTC_USDT` currency pair, the order creation request would be similar to\
\
```\
POST /spot/orders\
\
{\
  "currency_pair": "BTC_USDT",\
  "account": "unified",\
  "side": "buy",\
  ...\
}\
\
```\
\
For other related restrictions, please refer to the document of the API endpoint directly.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#formula) Formula\
\
| Name | Cross Margin |\
| --- | --- |\
| portfolio\_margin\_total\_equity | Account Equity = ∑(Equity \* Index Price） |\
| total\_margin\_balance | Account Margin Balance = ∑(Positive Equity x Index Price x Adjustment Factor) + ∑(Negative Equity x Index Price) - Haircut Loss |\
| total\_initial\_margin\_rate | Account Initial Margin Level = Account Margin Balance / Account Initial Margin |\
| total\_maintenance\_margin\_rate | Account Maintenance Margin Level = Account Margin Balance / Account Maintenance Margin |\
| total\_initial\_margin | Account Initial Margin = Total Liabilities x Spot Initial Margin Rate |\
| total\_maintenance\_margin | Account Maintenance Margin = Total Liabilities x Spot Maintenance Margin Rate |\
| equity | Equity = Coin Balance - Borrowed |\
| available | Available Balance = Principal + Borrowed |\
| freeze | Occupied = Assets Occupied by Spot Open Orders |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#accountbook-type) AccountBook type\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#general-2) General\
\
- unknown: Unknown\
- login: Log In\
- withdraw: Withdrawals\
- ch\_pass: Change Password\
- ch\_fund\_pass: Change Fund Pass\
- login\_failed: Login Failed\
- axs\_account: Access Account\
- req\_pass\_ch: Request Password Change\
- req\_fund\_pass\_ch: Request Fund Pass Change\
- fund\_pass\_ent: Fund Pass Entered\
- bank\_card\_add: Bank Card Added\
- frw: Face Recognition For Withdrawal\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#order) Order\
\
- new\_order: Order Placed\
- cancel\_order: Order Cancelled\
- order\_fill: Order Filled\
- order\_rej: Order Rejected\
- order\_fee: Trading Fees\
- system\_fee: Trading Fee System Account\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdraw-deposit) Withdraw-Deposit\
\
- withdraw: Withdrawals\
- deposit: Deposits\
- deposit\_rej: Deposit Rejected\
- withdraw\_rej: Withdrawal Rejected\
- cancel\_withdraw: Cancel Withdrawal\
- withdraw\_gatecode: GateCode Withdrawals\
- withdraw\_fireblock: Fireblocks Withdrawals\
- withdraw\_copper: Copper Withdrawals\
- startup\_withdraw: Token Withdrawal From Startup\
- deposit\_gatecode: GateCode Deposits\
- deposit\_fireblock: Fireblocks Deposits\
- deposit\_copper: Copper Deposits\
- buy\_cl: Buy Crypto Legend\
- buy\_cc: Buy Crypto Cabital\
- deposit\_finmo: Gate connect Finmo Deposit\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#startup) Startup\
\
- startup\_prtcp: Startup Sale Participation\
- startup\_refund: Startup Sale Refund\
- startup\_sale: Startup Sale\
- startup\_sale\_rb: Startup Sale Rolled Back\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#rebate) Rebate\
\
- referral\_rebate: Referral Superior Rebate\
- sec\_rebate\_out: Secondary Rebate Financial Account Transfer Out\
- sec\_rebate\_in: Affiliate Indirect Superior Rebate Income\
- ab\_rebate: API Broker Rebate Income\
- eb\_rebate: Exchange Broker Rebate Income\
- u\_rebate: Referral Rebate Income\
- ads\_rebate: Affiliate Direct Superior Rebate Income\
- au\_rebate: Affiliate User Rebate Income\
- pis\_rebate: Partner Indirect Superior Rebate Income\
- pds\_rebate: Partner Direct Superior Rebate Income\
- pu\_rebate: Partner User Rebate Income\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#convert) Convert\
\
- eth\_swap: ETH Swap\
- dust\_swap\_dctd: Dust Swap-Small Balances Deducted\
- dust\_swap\_gt\_add: Dust Swap-GT Added\
- dust\_swap\_fee: Dust Swap-Fees Deducted\
- cv\_buy: Quick Buy-Bought\
- cv\_sell: Quick Sell-Sold\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#c2c) C2C\
\
- c2c\_mop: C2C Merchant Order Placed\
- c2c\_moc: C2C Merchant Order Canceled\
- c2c\_rop: C2C Retail Order Placed\
- c2c\_roc: C2C Retail Order Canceled\
- c2c\_om: C2C Order Matched\
- c2c\_or: C2C Order Rejected\
- c2c\_fee: C2C Fees\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#reward) Reward\
\
- deposit\_bonus: Deposit Bonus\
- trading\_rewards: Trading Rewards\
- purchase\_bonus: Purchase Bonus\
- airdrop: Airdrop\
- award: Award\
- mining\_rewards: Mining Rewards\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#account-transfer-in-out) Account Transfer In-Out\
\
- margin\_in: Isolated Margin-Transferred In\
- margin\_out: Isolated Margin- Transferred Out\
- spot\_settle\_out: Spot Settlement Transfer Out\
- spot\_settle\_in: Spot Settlement Transfer Out\
- lending\_in: Lending-Transferred In\
- lending\_out: Lending-Transferred Out\
- cross\_in: PortfolioMarginAccountTransferIn\
- cross\_out: PortfolioMarginAccountTransferOut\
- perp\_in: Perps- Transferred In\
- perp\_out: Perps- Transferred Out\
- perp\_settle\_in: Perpetual Multi-currency Settlement Transfer In\
- perp\_settle\_out: Perpetual Multi-currency Settlement Transfer Out\
- delivery\_in: Delivery- Transferred In\
- delivery\_out: Delivery- Transferred Out\
- ai\_in: Auto-Invest-Transferred In\
- ai\_out: Auto-Invest-Transferred Out\
- e\_options\_in: Easy Options- Transferred In\
- e\_options\_out: Easy Options- Transferred Out\
- options\_in: Options- Transferred In\
- options\_out: Options- Transferred Out\
- cbbc\_in: CBBC- Transferred In\
- cbbc\_out: CBBC- Transferred Out\
- warrant\_in: Warrant- Transferred In\
- warrant\_out: Warrant- Transferred Out\
- subaccount\_trf: Subaccount Transfer\
- quant\_in: Quant- Transferred In\
- quant\_out: Quant- Transferred Out\
- pay\_in: Payment Account- Transferred In\
- pay\_out: Payment Account- Transferred Out\
- fct\_in: Futures Copy Trading - Funds Transfer In\
- fct\_out: Futures Copy Trading - Funds Transfer Out\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#points) Points\
\
- points\_purchase: Points Purchase\
- points\_expiration: Points With Expiration\
- points\_trf: Points Transfer\
- points\_trf\_rej: Points Transfer Rejected\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#finance) Finance\
\
- lending\_lent: Lending-Lent\
- collected: Collected\
- interest\_in: Interest Income\
- lending\_fee: Lending-Fees Deducted\
- hodl\_int: HODL Interest\
- redeem: Redeem\
- lend: Lend\
- dual\_purchased: Dual C-Purchased\
- dual\_settled: Dual C-Settled\
- liq\_add: Liquidity Added\
- liq\_rm: Liquidity Removed\
- liq\_rebalanced: Liquidity Rebalanced\
- slot\_int\_in: Slot Auction Staking Interest Income\
- str\_int\_in: Structured Products Staking Interest Income\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#loan) Loan\
\
- borrow: Borrow\
- repay: Repay\
- margin\_borrow: Isolated Margin-Transferred In\
- margin\_repay: Isolated Margin- Transferred Out\
- margin\_interest\_out: Isolated Margin-Interest Deduction\
- cl\_borrow: Cryptoloan- Borrowed\
- cl\_repay: Cryptoloan- Repaid\
- cl\_dctd: Cryptoloan- Collateral Deducted\
- cl\_rtd: Cryptoloan- Collateral Returned\
- cross\_borrow: PortfolioMarginAccountBorrowIn\
- cross\_repay: PortfolioMarginAccountRepay\
- interest\_out: Interest\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#moments) Moments\
\
- donation: Donation\
- rp\_sent: Red Packet Sent\
- rp\_rcvd: Red Packet Received\
- rp\_rej: Red Packet Rejected\
- ls\_offered: Live Stream-Reward Offered\
- ls\_rcvd: Live Stream- Reward Received\
- pt\_offered: Posts- Reward Offered\
- pt\_rcvd: Posts- Reward Received\
- subs\_deduct: Subscription-Fees Deducted\
- subs\_in: Subscription-Fees Received\
- subs\_refund: Subscription- Refund\
- subs\_in\_rcvd: Subscription- Refunds Received\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#push-trading) PUSH Trading\
\
- push\_dctd: Push- Deduction\
- push\_rcvd\_dctd: Push- Received-Deducted\
- push\_canceled: Push Canceled\
- push\_rej: Push Rejected\
- push\_sent: Push Sent\
- push\_rcvd: Push Received\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#copy-trading) Copy Trading\
\
- quant\_return: Quant- Transaction Returned\
- quant\_cmn\_in: Quant-Commission Transferred In\
- quant\_cmn\_out: Quant-Commission Transferred Out\
- quant\_cmn\_rtd: Quant-Commission Returned\
- fct\_refund: Futures Copy Trading - Funds Auto Transfer Out\
- fct\_rcvd: Futures Lead Trading - Performance Fee Received\
- fct\_fee: Futures Copy Trading - Performance Fee Paid\
- fct\_fee\_refund: Futures Copy Trading - Performance Fee Refund\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#nft) NFT\
\
- nft\_mp: NFT Auction-Margin Paid\
- nft\_bm: NFT Auction-Bid Made\
- nft\_om: NFT Auction-Offer Made\
- ntf\_mr: NFT Auction-Margin Returned\
- nft\_amr: NFT Auction-Aborted-Margin rcvd\
- nft\_ocb: NFT Auction-Order Canceled-Back\
- nft\_fb: Fixed Price-Bought\
- nft\_fs: Fixed Price-For Sale\
- nft\_ob: NFT Make-Offer Bought\
- nft\_os: NFT Make-Offer Sale\
- nft\_cr: Cancel offer refund\
- nft\_ir: Refund for invalid offer\
- nft\_wf: Withdrawal service fee\
- nft\_wfr: Withdrawal service fee\
- ntf\_mf: Multi-copy creation service fee\
- ntf\_mfr: Multi-copy creation service fee refund\
- ntf\_royalty: Royalties\
- nft\_cd: NFT Auction-Order Canceled-Deducted\
- nft\_crd: NFT Auction-Order Canceled-Rotalty-Deducted\
- nft\_cf: crowdfunding\
- nft\_cfr: crowdfunding refund\
- nft\_ammf: Nft-Amm Frozen\
- nft\_ammw: Nft-Amm Withdraw\
- nft\_ammdf: Nft-Amm Deal Fee\
- nft\_ammd: Nft-Amm Deal\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#accountbook-code) AccountBook code\
\
- 1 : Order Placed Old\
- 2 : Order Cancelled old\
- 4 : Withdrawals\
- 9 : Cancel GateCode Withdrawal\
- 17 : GateCode Withdrawals\
- 18 : Fireblocks Withdrawals\
- 19 : copper withdraw\
- 20 : Face Recognition For Withdrawal\
- 101 : Order Placed\
- 102 : Order Filled\
- 103 : Order Cancelled\
- 104 : Cancel Onchain Withdrawal\
- 105 : Token Withdrawal From Startup\
- 106 : Donation\
- 107 : Startup Sale Participation\
- 108 : Startup Sale Refund\
- 109 : Referral Superior Rebate\
- 110 : Deposits\
- 111 : Interest\
- 112 : Deposit Rejected\
- 113 : Withdrawal Rejected\
- 114 : Fund Correction\
- 115 : Snapshot\
- 116 : Order Rejected\
- 117 : CNY1 Deposited\
- 118 : Rebasing\
- 120 : Transaction Rolled Back\
- 121 : GateCode Deposits\
- 122 : Fireblocks Deposits\
- 123 : Wrongdepo Fee\
- 124 : copper deposit\
- 131 : Call Auction- Locked\
- 132 : Call Auction- Unlocked\
- 141 : ETF Asset Consolidation - Debit\
- 142 : ETF Asset Consolidation - Credit\
- 151 : Trading Fees\
- 152 : Trading Fee System Account\
- 161 : Secondary Rebate Financial Account Transfer Out\
- 162 : Affiliate Indirect Superior Rebate Income\
- 164 : Affiliate Direct Superior Rebate Income\
- 166 : Affiliate User Rebate Income\
- 171 : Order Placed Frozen\
- 172 : Order Cancelled Unfrozen\
- 181 : ETH Swap\
- 182 : ETH2 Swap\
- 191 : Referral Rebate Income\
- 196 : Web3 Rebate Income\
- 301 : C2C Merchant Order Placed\
- 302 : C2C Merchant Order Canceled\
- 303 : P2P User Sell\
- 304 : C2C Retail Order Canceled\
- 305 : P2P User Buy\
- 306 : C2C Order Rejected\
- 307 : Payment Setup\
- 308 : C2C Fees\
- 309 : C2C Deposit Freeze\
- 310 : C2C Deposit Refund\
- 311 : C2C Deposit Forfeiture\
- 312 : P2P Shared Asset Order Refund\
- 313 : P2P Frozen Funds\
- 314 : P2P Unfrozen Funds\
- 319 : Crypto Conversion Fee\
- 322 : Buy Crypto Legend\
- 323 : Buy Crypto Cabital\
- 324 : Gate Connect-Buy\
- 325 : Gate Connect-Buy\
- 326 : Gate Connect-Buy\
- 327 : Gate Connect-Buy\
- 328 : Gate Connect-Sell\
- 329 : Gate Connect-Refund\
- 330 : Gate Connect-Buy\
- 331 : Gate Connect-Sell\
- 401 : Deposit Bonus\
- 402 : Trading Rewards\
- 403 : Purchase Bonus\
- 404 : Airdrop\
- 405 : Feedback Rewards\
- 501 : IFO Claimed\
- 502 : IFO Returned\
- 601 : Isolated Margin - Transfer In\
- 602 : Isolated Margin - Transfer Out\
- 603 : Lending-Transferred In\
- 604 : Lending-Transferred Out\
- 605 : Isolated Margin-Transferred In\
- 606 : Isolated Margin- Transferred Out\
- 607 : Liquidating-Unlocked\
- 608 : Liquidating-Locked\
- 609 : Interest Updated\
- 610 : Lending-Lent\
- 611 : Collected\
- 612 : Interest Income\
- 613 : Lending-Fees Deducted\
- 614 : Due Repayment-Unlocked\
- 615 : Due Repayment-Locked\
- 616 : Liquidation Fee\
- 621 : Staking-Locked\
- 622 : Staking-Unlocked\
- 623 : Staking Interest Income\
- 624 : Staking-Locked\
- 625 : Staking-Unlocked\
- 626 : Staking Interest Income\
- 627 : HODL Interest\
- 628 : HODL Interest Distribution\
- 629 : HODL Interest Rolled Back\
- 630 : Borrow\
- 631 : Repay\
- 632 : Pledge\
- 633 : Collateral Refund\
- 635 : Fixed Rate Loan - Interest\
- 640 : Flexible Rate Loan - Borrow\
- 641 : Flexible Rate Loan - Repay\
- 642 : Flexible Rate Loan - Liquidate to Repay Principal\
- 643 : Flexible Rate Loan - Liquidate to Repay Interest\
- 644 : Flexible Rate Loan - Interest\
- 645 : Pledge\
- 646 : Collateral Refund\
- 647 : Adjust Collateral\
- 648 : Refund after Liquidation\
- 649 : Liquidation Fee\
- 651 : Portfolio Margin Account Transfer In\
- 652 : Portfolio Margin Account Transfer Out\
- 655 : Fixed Rate Loan - Borrow\
- 656 : Fixed Rate Loan - Repay\
- 657 : Fixed Rate Loan - Liquidate to Repay Interest\
- 658 : Fixed Rate Loan - Liquidate to Repay Principal\
- 659 : Cross-Currency Repayment - Transfer Out\
- 660 : Cross-Currency Repayment - Transfer In\
- 661 : Redeem\
- 662 : Lend\
- 669 : Interest\
- 670 : MarginTradingBorrowed\
- 671 : MarginTradingRepaid\
- 672 : MarginTradingInterest\
- 673 : Isolated Margin-Transferred In\
- 674 : Isolated Margin- Transferred Out\
- 675 : Interest Updated\
- 676 : Isolated Margin-Interest Deduction\
- 677 : Borrow\
- 678 : Repay\
- 679 : Interest\
- 681 : Bonus\
- 682 : Contributing Insurance Funds\
- 683 : Consuming Insurance Funds\
- 685 : Interest - Platform Loans\
- 686 : Subscription - Fixed-term\
- 687 : Redemption - Fixed-term\
- 688 : Interest - Fixed-term\
- 689 : Bonus - Fixed-term\
- 696 : Early repayment penalty\
- 697 : Refund of early repayment penalty\
- 701 : Perps- Transferred In\
- 702 : Perps- Transferred Out\
- 703 : Delivery- Transferred In\
- 704 : Delivery- Transferred Out\
- 705 : Multi-currency Settlement Transfer In\
- 706 : Multi-currency Settlement Transfer Out\
- 721 : Stable Income - Lock\
- 722 : Stable Income - Unlock\
- 723 : Stable Income - Interest\
- 724 : Stable Income - Lock\
- 725 : Stable Income - Unlock\
- 726 : Stable Income - Interest\
- 727 : Structured Products - Lock\
- 728 : Structured Products - Lock\
- 729 : Structured Products - Unlock\
- 730 : Structured Products - Interest\
- 731 : Structured Products - Unlock\
- 732 : Structured Products - Interest\
- 733 : Hybrid Interest - Lock\
- 734 : Hybrid Interest - Lock\
- 735 : Hybrid Interest - Unlock\
- 736 : Hybrid Interest - Interest\
- 737 : Hybrid Interest - Unlock\
- 738 : Hybrid Interest - Interest\
- 739 : Wealth Referral Commission Rebate\
- 751 : Quant Fund - Lock\
- 753 : Quant Fund - Unlock\
- 754 : Quant Fund - Earnings\
- 761 : Lock & Earn Redeem Early\
- 801 : Gift Coins Sent\
- 802 : Gift Coins Received\
- 803 : Gift Coins Rejected\
- 804 : Live Stream-Reward Offered\
- 805 : Live Stream- Reward Received\
- 806 : Posts- Reward Offered\
- 807 : Posts- Reward Received\
- 901 : Buy Points\
- 902 : Buy Points Rollback\
- 903 : Time-Limited Points\
- 911 : Auto-Invest-Transferred Out\
- 912 : Auto-Invest-Transferred In\
- 913 : Redeem points for goods\
- 915 : Redeemed Points - Refund\
- 917 : Expired & Recycled\
- 1001 : C2C Loan Ad Posted\
- 1002 : C2C Loan Ad Canceled\
- 1003 : C2C Loan Order Placed\
- 1004 : C2C Loan Repaid\
- 1005 : C2C Loan Order Canceled\
- 1006 : C2C Loan Fees\
- 1007 : C2C Loan Liquidated\
- 1008 : C2C Loan- Margin Added\
- 1101 : Points Transfer\
- 1102 : Points Transfer Refund\
- 1171 : Bonus - Flexible\
- 1173 : Bonus - Flexible\
- 1174 : Bonus\
- 1181 : Staking\
- 1184 : Redemption\
- 1186 : Interest\
- 1191 : Staking\
- 1194 : Redemption\
- 1196 : Interest\
- 1201 : Startup Sale\
- 1202 : Startup Sale Rolled Back\
- 1251 : Stake\
- 1253 : Manually Redeem\
- 1255 : Reward\
- 1258 : Auto-Redeem\
- 1301 : Dust Swap-Small Balances Deducted\
- 1302 : Dust Swap-GT Added\
- 1303 : Dust Swap-Fees Deducted\
- 1307 : Dust Swap-Small Balances Deducted\
- 1310 : Dust Swap-Small Balances Deducted\
- 1311 : Dust Swap-Small Balances Deducted\
- 1312 : Small Balance Convert - USDT Added\
- 1322 : Convert Small Balance (USDT)\
- 1323 : Convert Small Balance - USDT Added\
- 1401 : Subaccount Transfer\
- 1501 : Subscription-Fees Deducted\
- 1502 : Subscription-Fees Received\
- 1503 : Subscription- Refund\
- 1504 : Subscription- Refunds Received\
- 1601 : Easy Options- Transferred In\
- 1602 : Easy Options- Transferred Out\
- 1603 : Options- Transferred In\
- 1604 : Options- Transferred Out\
- 1701 : Bots - Transfer In\
- 1702 : Bots - Transferred Out\
- 1703 : Bots - Refund\
- 1801 : CBBC- Transferred In\
- 1802 : CBBC- Transferred Out\
- 1811 : Warrant- Transferred In\
- 1812 : Warrant- Transferred Out\
- 1901 : Push- Deduction\
- 1903 : Push- Received-Deducted\
- 1905 : Push- Canceled\
- 1906 : Push- Rejected\
- 1907 : Push- Sent\
- 1908 : Push- Received\
- 2001 : Dual C-Purchased\
- 2004 : Dual C-Settled\
- 2011 : Subscription to Dip Sniper products\
- 2012 : Recouped from expired Dip Sniper products\
- 2021 : Subscription to Peak Sniper products\
- 2022 : Recouped from expired Peak Sniper products\
- 2202 : Lending Farm-Token Added\
- 2203 : Lending Farm-Token Removed\
- 2301 : Liquidity Added\
- 2302 : Liquidity Removed\
- 2303 : Liquidity Rebalanced\
- 2311 : Add Liquidity\
- 2312 : Remove Liquidity\
- 2314 : Mining Rewards\
- 2401 : Bots - Performance Fee Received\
- 2402 : Bots - Performance Fee Paid\
- 2403 : Bots - Performance Fee Refund\
- 2501 : NFT Auction-Margin Paid\
- 2502 : NFT Auction-Bid Made\
- 2503 : NFT Auction-Offer Made\
- 2504 : NFT Auction-Margin Returned\
- 2505 : Fixed Price-Bought\
- 2506 : Fixed Price-For Sale\
- 2512 : NFT Auction-Aborted-Margin Received\
- 2517 : NFT Auction-Order Canceled-Back\
- 2518 : NFT Make\_Offer Bought\
- 2519 : Cancel offer refund\
- 2523 : Withdrawal service fee\
- 2524 : Withdrawal service fee\
- 2527 : Multi-copy creation service fee\
- 2528 : Multi-copy creation service fee refund\
- 2531 : Royalties\
- 2532 : NFT Auction-Order Canceled-Deducted\
- 2533 : Refund for invalid offer\
- 2536 : NFT Make\_Offer Sale\
- 2538 : NFT Auction-Order Canceled-Rotalty-Deducted\
- 2539 : crowdfunding\
- 2540 : crowdfunding refund\
- 2541 : crowdfunding\
- 2542 : crowdfunding refund\
- 2551 : Nft-Amm Frozen\
- 2552 : Nft-Amm Withdraw\
- 2553 : Nft-Amm Deal Fee\
- 2554 : Nft-Amm Deal\
- 2601 : Quick Buy-Bought\
- 2602 : Quick Sell-Sold\
- 2603 : Repay All - Transfer Out\
- 2604 : Repay All - Transfer In\
- 2605 : Buy\
- 2606 : Sell\
- 2607 : Buy\
- 2608 : Sell\
- 2609 : Buy\
- 2610 : Sell\
- 2611 : Convert Refund\
- 2612 : Buy\
- 2613 : Sell\
- 2614 : HODLer Airdrop\
- 2701 : Mining Contract Purchased\
- 2702 : Mining Balance Added to System\
- 2703 : Mining Rewards Deducted From System\
- 2704 : Mining Rewards Claimed\
- 2706 : Mining Balance User Money Back\
- 2707 : Mining Balance deducted From System\
- 2801 : Slot Auction Staking-Locked\
- 2802 : Slot Auction Staking-Unlocked\
- 2803 : Slot Auction Staking Interest Income\
- 2804 : Slot Auction Staking-Locked\
- 2805 : Slot Auction Staking-Unlocked\
- 2806 : Slot Auction Staking Interest Income\
- 2807 : Structured Products Staking-Locked\
- 2808 : Structured Products Staking-Unlocked\
- 2809 : Structured Products Staking Interest Income\
- 2810 : Structured Products Financial Account Staking-Locked\
- 2811 : Structured Products Financial Account Staking-Unlocked\
- 2812 : Structured Products Financial Account Staking Interest Income\
- 2901 : Futures Competition Buy Gift Pack\
- 2902 : Futures Competition Dovote Reward\
- 2903 : Futures Competition Individual Ranking Reward\
- 2904 : Futures Competition Team Ranking Reward\
- 2905 : Futures Competition Early Bird Reward\
- 2906 : Futures Competition Early Bird Reward\
- 3001 : Payment Account- Transferred In\
- 3008 : Payment Account- Transferred Out\
- 3019 : Fiat Withdrawal\
- 3020 : Refund for Fiat Withdrawal\
- 3101 : Vouchers - Redeem Points\
- 3102 : Coupon Center Usdtest Exchange\
- 3103 : Activity Center Point Exchange\
- 3104 : Exclusive Benefits\
- 3105 : Vouchers - Trading Fee Rebate\
- 3150 : Error in event token release\
- 3151 : Paid by Loss Protection Voucher for Copier\
- 3201 : Futures Copy Trading - Funds Transfer In\
- 3202 : Futures Copy Trading - Funds Transfer Out\
- 3203 : Futures Copy Trading - Funds Auto Transfer Out\
- 3204 : Futures Lead Trading - Performance Fee Received\
- 3205 : Futures Copy Trading - Performance Fee Paid\
- 3206 : Futures Copy Trading - Performance Fee Refund\
- 3301 : Affiliate Ultra Direct Superior Rebate Income\
- 3302 : Gate.TR&Gate Transfer\
- 3321 : Affiliate Ultra Indirect Superior Rebate Income\
- 3341 : Affiliate Ultra User Rebate Income\
- 3390 : API Broker Rebate Income\
- 3401 : Block Trading Transfer In\
- 3402 : Block Trading Transfer Out\
- 3410 : Exchange Broker Rebate Income\
- 3501 : card top up\
- 3502 : Gate Card Cashback\
- 3503 : Return Top up\
- 3504 : Replace Card Fee\
- 3505 : Return Card Fee\
- 3506 : Card Inactivity Fee\
- 3507 : Authorization\
- 3508 : Reversal\
- 3509 : Clearing\
- 3510 : Refund\
- 3511 : Repayment\
- 3512 : Card Issuance Fee\
- 3513 : Return Card Fee\
- 3514 : Return Card Balance\
- 3515 : Tax Refund\
- 3516 : Points Redemption\
- 3517 : Withdraw from SGD Card\
- 3518 : Deposit to SGD Card\
- 3601 : Spot Lead Trading - Funds Transfer In\
- 3602 : Spot Lead Trading - Funds Transfer Out\
- 3603 : Spot Lead Trading - Funds Auto Transfer Out\
- 3604 : Spot Copy Trading - Funds Transfer In\
- 3605 : Spot Copy Trading - Funds Transfer Out\
- 3606 : Spot Copy Trading - Funds Auto Transfer Out\
- 3607 : Spot Lead Trading - Performance Fee Received\
- 3608 : Spot Copy Trading - Performance Fee Paid\
- 3609 : Spot Copy Trading - Performance Fee Refund\
- 3701 : OTC trade - buy\
- 3702 : OTC trade - sell\
- 3703 : OTC trade - cancel\
- 3801 : Futures Voucher Return Transfer\
- 3901 : Transfer to Pilot\
- 3902 : Transfer from Pilot\
- 3903 : Transfer to Spot\
- 3904 : Transfer from Spot\
- 3905 : Transfer to Spot\
- 3906 : Transfer from Pilot\
- 3920 : Event Rewards\
- 3922 : Pilot Token Airdrop\
- 3923 : Pilot Token Airdrop Failed\
- 4002 : Withdraw Commission\
- 4009 : Withdraw Rewards\
- 4011 : Deducted Negative Maker Fee\
- 5001 : Pre-Market OTC Trading Fee\
- 5002 : Pre-Market OTC Frozen Assets (Buy)\
- 5003 : Pre-Market OTC Frozen Assets (Sell)\
- 5004 : Pre-Market OTC Trading Fee Refund (Order Canceled)\
- 5005 : Pre-Market OTC Unfreeze Frozen Assets (Order Canceled)\
- 5006 : Pre-Market OTC Unfreeze Frozen Assets (Order Canceled)\
- 5007 : Pre-Market OTC Delivery Transfer Out\
- 5008 : Pre-Market OTC Delivery Transfer In\
- 5009 : Pre-Market OTC Unfreeze Frozen Assets (Delivery Success)\
- 5011 : Compensation to Buyer\
- 5012 : Pre-Market OTC Delivery Refund\
- 5013 : Pre-Market OTC Trading Fee Refund (Project Canceled)\
- 5014 : Pre-Market OTC Payment Refund Due to Project Cancellation (Buy)\
- 5015 : Pre-Market OTC Unfreeze Frozen Assets (Sell)\
- 5016 : Early Termination Fee\
- 5017 : Early Termination Indemnity\
- 5051 : Pre-Market - Mint - Deduct Staked Assets\
- 5052 : Pre-Market - Mint - PreToken Release\
- 5053 : Pre-Market - Take a Snapshot and Clear Balance Before Settlement\
- 5054 : Pre-Market - Delivery - Token Delivery\
- 5055 : Pre-Market - Delivery - Unstake Staked Assets\
- 5056 : Pre-Market - Settlement - Token Settlement\
- 5057 : Pre-Market - Settlement - Staked Assets Settlement\
- 5058 : Pre-Market - Project Canceled - Staked Assets Settlement\
- 5059 : Pre-Market-Unstake-Deduct PreToken\
- 5060 : Pre-Market -Unstake-Unstake Staked Assets\
- 5061 : Pre-Market - Increase Staked Assets\
- 5062 : Pre-Market - Decrease Staked Assets\
- 5104 : Fireblocks Fee Refund\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#error-handling) Error Handling\
\
For all abnormal requests, APIv4 will return non-2xx status code, with a response body in JSON\
format to\
explain the error.\
\
The error response body follows a format like:\
\
```\
{\
  "label": "INVALID_PARAM_VALUE",\
  "message": "Invalid parameter `text` with value: abc"\
}\
\
```\
\
- `label`: denotes error type in `string` format. Its value are chosen from a certain list(see\
below).\
Programs can use `label` to identify and catch a specific error.\
- `message`(or `detail`): detailed error message. A longer explanation showing why the error is\
generated\
or how to avoid it. Its purpose is helping to better understand the API. Error handling\
mechanism with this field is highly **NOT** recommended.\
\
Take Python [requests(opens new window)](https://requests.readthedocs.io/en/latest/) for example,\
error handling can be written like:\
\
> Following examples only deal with business-related errors. Network timeout or other\
> common errors need to be handled separately:\
\
```\
import requests\
\
r = requests.get("https://api.gateio.ws/api/v4/futures/btc/contracts/BTC_USD")\
try:\
    r.raise_for_status()\
except requests.HTTPError:\
    # catch 2xx errors, parse error message in body, and do something based on `label`\
    if r.json()['label'] == 'xxx':\
        print(r.json())\
\
```\
\
or with [Python SDK(opens new window)](https://github.com/gateio/gateapi-python):\
\
```\
import json\
from gate_api import FuturesApi\
from gate_api.rest import ApiException\
\
api = FuturesApi()\
try:\
    api.get_futures_contract(settle='btc', contract="BTC_USD")\
except ApiException as e:  # ApiException wraps whole error information, see implementation for details\
    detail = json.loads(e.value.body)\
    if detail['label'] == 'xxx':\
        print(detail)\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#label-list) `label` list\
\
- Request parameter or format related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_PARAM\_VALUE | Invalid parameter value |\
| INVALID\_PROTOCOL | Invalid parameter value |\
| INVALID\_ARGUMENT | Invalid argument |\
| INVALID\_REQUEST\_BODY | Invalid request body |\
| MISSING\_REQUIRED\_PARAM | Missing required parameter |\
| BAD\_REQUEST | Invalid request |\
| INVALID\_CONTENT\_TYPE | Invalid `Content-Type` header |\
| NOT\_ACCEPTABLE | Invalid `Accept-` Header |\
| METHOD\_NOT\_ALLOWED | Request method is not allowed |\
| NOT\_FOUND | Request URL not exists |\
\
- Authentication related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_CREDENTIALS | Invalid credentials provided |\
| INVALID\_KEY | Invalid API Key |\
| IP\_FORBIDDEN | Request IP not in whitelist |\
| READ\_ONLY | API key is read-only |\
| INVALID\_SIGNATURE | Invalid signature |\
| MISSING\_REQUIRED\_HEADER | Missing required authentication header |\
| REQUEST\_EXPIRED | Request `Timestamp` is far from the server time |\
| ACCOUNT\_LOCKED | Account is locked |\
| FORBIDDEN | Account has no permission to request operation |\
\
- Wallet related\
\
| `label` | Meaning |\
| --- | --- |\
| SUB\_ACCOUNT\_NOT\_FOUND | Sub account not found |\
| SUB\_ACCOUNT\_LOCKED | Sub account is locked |\
| MARGIN\_BALANCE\_EXCEPTION | Abnormal margin account |\
| MARGIN\_TRANSFER\_FAILED | Failed to transfer with margin account |\
| TOO\_MUCH\_FUTURES\_AVAILABLE | Futures balance exceeds max allowed |\
| FUTURES\_BALANCE\_NOT\_ENOUGH | Futures balance not enough |\
| ACCOUNT\_EXCEPTION | Abnormal account |\
| SUB\_ACCOUNT\_TRANSFER\_FAILED | Failed to transfer with sub account |\
| ADDRESS\_NOT\_USED | Address never being used in web console |\
| TOO\_FAST | Withdrawing request exceeds frequency limit |\
| WITHDRAWAL\_OVER\_LIMIT | Withdrawal limit exceeded |\
| API\_WITHDRAW\_DISABLED | API withdrawal operation is disabled temporarily |\
| INVALID\_WITHDRAW\_ID | Invalid withdraw ID |\
| INVALID\_WITHDRAW\_CANCEL\_STATUS | Cancelling withdrawal not allowed with current status |\
| DUPLICATE\_REQUEST | Duplicate request |\
| ORDER\_EXISTS | Order already exists, do not resubmit |\
| INVALID\_CLIENT\_ORDER\_ID | The client\_order\_id is invalid |\
\
- Spot and margin trading related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_PRECISION | Invalid precision |\
| INVALID\_CURRENCY | Invalid currency |\
| INVALID\_CURRENCY\_PAIR | Invalid currency pair |\
| POC\_FILL\_IMMEDIATELY | Order would match and take immediately so it's cancelled |\
| ORDER\_NOT\_FOUND | Order not found |\
| ORDER\_CLOSED | Order already closed |\
| ORDER\_CANCELLED | Order already cancelled |\
| QUANTITY\_NOT\_ENOUGH | Amount is not enough |\
| BALANCE\_NOT\_ENOUGH | Balance is not enough |\
| MARGIN\_NOT\_SUPPORTED | Request currency pair doesn't provide margin trading |\
| MARGIN\_BALANCE\_NOT\_ENOUGH | Margin balance is not enough |\
| AMOUNT\_TOO\_LITTLE | Amount does not reach minimum required |\
| AMOUNT\_TOO\_MUCH | Amount exceeds maximum allowed |\
| REPEATED\_CREATION | Repeated creation |\
| LOAN\_NOT\_FOUND | Margin loan is not found |\
| LOAN\_RECORD\_NOT\_FOUND | Margin loan record is not found |\
| NO\_MATCHED\_LOAN | No loan can match request borrow requirement |\
| NOT\_MERGEABLE | Request loans cannot be merged |\
| NO\_CHANGE | No change is made |\
| REPAY\_TOO\_MUCH | Repay more than required |\
| TOO\_MANY\_CURRENCY\_PAIRS | Too many currency pairs in batch orders creation |\
| TOO\_MANY\_ORDERS | Too many orders in one currency pair in batch orders creation |\
| MIXED\_ACCOUNT\_TYPE | More than one account type is used in batch orders creation |\
| AUTO\_BORROW\_TOO\_MUCH | Auto borrow exceeds maximum allowed |\
| TRADE\_RESTRICTED | Trading is restricted due to high debt ratio |\
| FOK\_NOT\_FILL | FOK order cannot be filled completely |\
| INITIAL\_MARGIN\_TOO\_LOW | User's total initial margin rate is too low |\
| NO\_MERGEABLE\_ORDERS | Orders can be merged not found |\
| ORDER\_BOOK\_NOT\_FOUND | Insufficient liquidity |\
| FAILED\_RETRIEVE\_ASSETS | Failed to retrieve account assets |\
| CANCEL\_FAIL | Order cancel failed |\
\
- Futures related\
\
| `label` | Meaning |\
| --- | --- |\
| USER\_NOT\_FOUND | User has no futures account |\
| CONTRACT\_NO\_COUNTER | No counter order found |\
| CONTRACT\_NOT\_FOUND | Contract not found |\
| RISK\_LIMIT\_EXCEEDED | Risk limit exceeded |\
| INSUFFICIENT\_AVAILABLE | Balance is not enough |\
| LIQUIDATE\_IMMEDIATELY | Operation may cause liquidation |\
| LEVERAGE\_TOO\_HIGH | leverage too high |\
| LEVERAGE\_TOO\_LOW | leverage too low |\
| ORDER\_NOT\_FOUND | Order not found |\
| ORDER\_NOT\_OWNED | Order not owned |\
| ORDER\_FINISHED | Order already finished |\
| TOO\_MANY\_ORDERS | Too many open orders |\
| POSITION\_CROSS\_MARGIN | margin updating is not allowed in cross margin |\
| POSITION\_IN\_LIQUIDATION | Position is being liquidated |\
| POSITION\_IN\_CLOSE | Position is closing |\
| POSITION\_EMPTY | Position is empty |\
| REMOVE\_TOO\_MUCH | Changed margin exceeds allowed |\
| RISK\_LIMIT\_NOT\_MULTIPLE | Risk limit is not a multiple of step |\
| RISK\_LIMIT\_TOO\_HIGH | Risk limit too high |\
| RISK\_LIMIT\_TOO\_lOW | Risk limit too low |\
| PRICE\_TOO\_DEVIATED | Order price deviates too much from mark price |\
| SIZE\_TOO\_LARGE | Order size exceeds maximum |\
| SIZE\_TOO\_SMALL | Order size does not reach minimum |\
| PRICE\_OVER\_LIQUIDATION | Price to increase position can not exceeds liquidation price |\
| PRICE\_OVER\_BANKRUPT | Price to decrease position cannot exceeds bankrupting price |\
| ORDER\_POC\_IMMEDIATE | POC order will be finished immediately |\
| INCREASE\_POSITION | POC order will increase position |\
| CONTRACT\_IN\_DELISTING | Contract is delisting, only reduce-only order or close order is allowed |\
| POSITION\_NOT\_FOUND | Position not found |\
| POSITION\_DUAL\_MODE | Operation forbidden in dual-mode |\
| ORDER\_PENDING | Operation forbidden with pending orders |\
| POSITION\_HOLDING | Operation forbidden with holding position |\
| REDUCE\_EXCEEDED | Reduce order would exceed position in dual-mode |\
| NO\_CHANGE | No change is made |\
| AMEND\_WITH\_STOP | Amend forbidden with stop order |\
| ORDER\_FOK | Killed for FOK |\
\
- Collateral Loan related\
\
| `label` | Meaning |\
| --- | --- |\
| COL\_NOT\_ENOUGH | Collateral balance not enough |\
| COL\_TOO\_MUCH | Exceed collateral currency quota |\
| INIT\_LTV\_TOO\_HIGH | Init ltv too high |\
| REDEEMED\_LTV\_TOO\_HIGH | Ltv too high after redeem |\
| BORROWABLE\_NOT\_ENOUGH | Left borrowable not enough |\
| ORDER\_TOO\_MANY\_TOTAL | Exceed platform order count one day |\
| ORDER\_TOO\_MANY\_DAILY | Exceed single user order count one day |\
| ORDER\_TOO\_MANY\_USER | Exceed single user order count total |\
| ORDER\_NOT\_EXIST | Order id not exist |\
| ORDER\_FINISHED | Order id finished |\
| ORDER\_NO\_PAY | Order unpaid amount is zero |\
| ORDER\_EXIST | Order exist |\
| ORDER\_HISTORY\_EXIST | Order history exist |\
| ORDER\_REPAYING | Order is repaying |\
| ORDER\_LIQUIDATING | Order is liquidating |\
| BORROW\_TOO\_LITTLE | Less than currency min borrow amount |\
| BORROW\_TOO\_LARGE | Greater than total max borrow amount quantity |\
| REPAY\_AMOUNT\_INVALID | Repay request amount invalid |\
| REPAY\_GREATER\_THAN\_AVAILABLE | Repay greater than available |\
| POOL\_BALANCE\_NOT\_ENOUGH | Pool balance not enough |\
| CURRENCY\_SETTLING | Currency settlement in progress |\
| RISK\_REJECT | Risk reject, please try again later |\
| LOAN\_FAILED | Loan failed, you can borrow again |\
\
- Portfolio related\
\
| `label` | Meaning |\
| --- | --- |\
| USER\_LIAB | User has liab |\
| USER\_PENDING\_ORDERS | User has pending orders |\
| MODE\_SET | already set portfolio\_margin mode |\
\
- Earn related\
\
| `label` | Meaning |\
| --- | --- |\
| ERR\_BALANCE\_NOT\_ENOUGH | balance not enough |\
| ERR\_PRODUCT\_SELL\_OUT | Target quota reached |\
| ERR\_PRODUCT\_BUY | The project is not yet open for purchase |\
| ERR\_CREATE\_ORDER | Put order fail |\
| ERR\_QUOTA\_LOWER\_LIMIT | Not meeting the minimum order amount |\
| ERR\_QUOTA\_SUPERIOR\_LIMIT | The maximum order limit has been reached |\
| ERR\_ORDER\_NUMBER\_LIMIT | The maximum order quantity has been reached |\
| ERR\_PRODUCT\_CLOSE | Project closed |\
| COPIES\_NOT\_ENOUGH | Not enough shares available to subscribe |\
| COPIES\_TOO\_SMALL | Investment share is too small |\
| COPIES\_TOO\_BIG | The number of investment shares exceeds the upper limit |\
| TOTAL\_AMOUNT\_24 | The total amount of pledge and redemption within 24 hours exceeds the limit |\
| TOTAL\_BUYCOUNT\_24 | Pledge and redemption times exceeding the limit within 24 hours |\
| REDEEM\_24\_LIMIT | Redemption are allowed 24 hours after the last staking |\
\
- Server errors\
\
| `label` | Meaning |\
| --- | --- |\
| INTERNAL | Internal server error |\
| SERVER\_ERROR | Internal server error |\
| TOO\_BUSY | Server is too busy at the moment |\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#authentication) Authentication\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#generate-api-key) Generate API key\
\
Before calling the private API interface, the API key of the account needs to be generated to verify\
the identity. You can log in on the website and generate it in\
\[account management\] - > \[APIv4 keys\], or click [here](https://www.gate.com/myaccount/apiv4keys)\
to generate API keys.\
\
Each account can create 20 API keys, and the permission configuration of each key is independent of\
each other. It is recommended to set a note name for each key to indicate its purpose.\
\
**`Key`** Access Key\
**`Secret Key`** The key used for signature authentication encryption\
\
Besides, you can attach an IP whitelist, which requires the server only accept requests from\
specified IPs. Each key can have at most 20 IPs formatted in IPv4(not supporting IP range though).\
If IP whitelist is not set, the server will skip client IP validation.\
\
Each user can create at most 5 keys with separate permissions. It is recommended to set a name for\
key denoting how the key will be used.\
\
TIP\
\
Note: If the key is named with `spot` or `futures`, then it could be the default name after\
APIv4 migration. For details refer to _About APIv4 key improvement_ section\
\
Created key can also be updated or deleted, but any modification(s) can take up to 5 minutes to take\
effect.\
\
Please note that futures TestNet trading is a separate environment from futures real trading. Real\
trading API keys cannot be used in TestNet. If you want to test futures API with TestNet, you need\
to log into the console to generate TestNet API keys(in _"Futures TestNet APIKeys"_ tab on _"_\
_APIv4Keys"_ page). Making futures requests are identical between real and TestNet trading, with the\
only exceptions are different base URLs and different API keys.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#apiv4-permissions) APIv4 Permissions\
\
When creating a Key, you can configure whether to enable spot, margin, contract, wallet, or\
withdrawal permissions for the Key, and whether to enable read-write or read-only permissions.\
\
| Products | Permissions |\
| --- | --- |\
| `spot/margin` | `Read-only` query orders `Read-write` query orders & place orders |\
| `perpetual contract` | `Read-only` query orders `Read-write` query orders & place orders |\
| `delivery contract` | `Read-only` query orders `Read-write` query orders & place orders |\
| `wallet` | `Read-only` Query for withdrawal transfer records `Read-write` Query for account records & fund transfers |\
| `withdrawal` | `Read-only` Query cash withdrawal records `Read-write` Query cash withdrawal records & withdrawals |\
\
All `GET` operations are read requests, while others are write requests. Each permission group can\
be set to disabled, read-only or read-write.\
\
Please note that even though withdrawal API has only one operation(i.e.\
`POST /withdrawals`), for general concern, it is still separated from wallet API into a standalone\
permission group, while withdrawal history retrieving API stays inside wallet operations(\
i.e., `GET /wallet/withdrawals`).\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#apiv4-signed-request-requirements) APIv4 signed request requirements\
\
1. Generate APIv4 Key pairs in web console, and make sure it has the right permissions.\
2. Set request header `KEY` to the key.\
3. Set request header `Timestamp` to current time formatted in Unix time in seconds. Pay\
attention that the gap between its value and current time cannot exceed 60 seconds.\
4. Set request header `SIGN` to encrypted request signature. Refer to next section for how signature\
string is generated. Signature generation method is\
`HexEncode(HMAC_SHA512(secret, signature_string))`, i.e., the hexadecimal digest output of\
HMAC-SHA512 with APIv4 secret as secret and signature string as message,\
5. Make sure request client's IP is in your APIv4 Key's IP whitelist.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-signature-string-generation) API Signature string generation\
\
In APIv4, signature string is concatenated as the following way:\
\
`Request Method + "\n" 	+ Request URL + "\n" 	+ Query String + "\n" 	+ HexEncode(SHA512(Request Payload)) + "\n" 	+ Timestamp`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#request-method) Request Method\
\
Request method in UPPERCASE, e.g. `POST`, `GET`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#request-url) Request URL\
\
Request url. Protocol, host and port are not included, e.g. `/api/v4/futures/orders`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-string) Query String\
\
Request query string without URL encode. query parameters order should be the\
same as how they are concatenated in the request URL, e.g. `status=finished&limit=50`. Use empty string("") if no query parameters.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#hexencode-sha512-request-payload) HexEncode(SHA512(Request Payload))\
\
Hash the request body with SHA512 and output its Hex encoded form. If no request body, use empty string's hashed result, i.e.\
`cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#timestamp) Timestamp\
\
`Timestamp` request header value.\
\
Examples\
\
Note: all example signature string are broken into multiple lines for displaying purpose only.\
Only the `\n` character in signature string is reserved in reality.\
\
Suppose the key we used is `key`, while the secret is `secret`.\
\
1. List all orders\
\
```\
	GET /api/v4/futures/orders?contract=BTC_USD&status=finished&limit=50 HTTP/1.1\
\
```\
\
Signature string：\
\
```\
	GET\n\
	/api/v4/futures/orders\n\
	contract=BTC_USD&status=finished&limit=50\n\
	cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e\n\
	1541993715\
\
```\
\
Explanation：\
\
- `/api/v4/futures/orders`: request url\
- `contract=BTC_USD&status=finished&limit=50`: keep the query string as it is in the request url\
- request body use empty string's hashed result\
- `1541993715`: Unix timestamp in seconds\
\
Signature generated\
\
`55f84ea195d6fe57ce62464daaa7c3c02fa9d1dde954e4c898289c9a2407a3d6fb3faf24deff16790d726b66ac9f74526668b13bd01029199cc4fcc522418b8a`\
\
2. Create an order\
\
```\
	POST /api/v4/futures/orders HTTP/1.1\
\
	{"contract":"BTC_USD","type":"limit","size":100,"price":6800,"time_in_force":"gtc"}\
\
```\
\
Signature string：\
\
```\
	POST\n\
	/api/v4/futures/orders\n\
	\n\
	ad3c169203dc3026558f01b4df307641fa1fa361f086b2306658886d5708767b1854797c68d9e62fef2f991645aa82673622ebf417e091d0bd22bafe5d956cca\n\
	1541993715\
\
```\
\
Explanation：\
\
- request query string is empty, use plain empty string\
- use the hashed result of the json-string-formatted request body\
\
Signature generated\
\
`eae42da914a590ddf727473aff25fc87d50b64783941061f47a3fdb92742541fc4c2c14017581b4199a1418d54471c269c03a38d788d802e2c306c37636389f0`\
\
```\
\
# example authentication implementation in Python\
\
"""\
Python SDK is recommended as it has already implemented the authentication process for every API:\
"""\
\
import time\
import hashlib\
import hmac\
import requests\
import json\
\
def gen_sign(method, url, query_string=None, payload_string=None):\
    key = ''        # api_key\
    secret = ''     # api_secret\
\
    t = time.time()\
    m = hashlib.sha512()\
    m.update((payload_string or "").encode('utf-8'))\
    hashed_payload = m.hexdigest()\
    s = '%s\n%s\n%s\n%s\n%s' % (method, url, query_string or "", hashed_payload, t)\
    sign = hmac.new(secret.encode('utf-8'), s.encode('utf-8'), hashlib.sha512).hexdigest()\
    return {'KEY': key, 'Timestamp': str(t), 'SIGN': sign}\
\
if __name__ == "__main__":\
    host = "https://api.gateio.ws"\
    prefix = "/api/v4"\
    common_headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
    url = '/futures/orders'\
    body = {"contract": "BTC_USD", "size": 100, "price": "30", "tif": "gtc"}\
    request_content = json.dumps(body)\
    sign_headers = gen_sign('POST', prefix + url, "", request_content)\
    sign_headers.update(common_headers)\
    print('signature headers: %s' % sign_headers)\
    res = requests.post(host + prefix + url, headers=sign_headers, data=request_content)\
    print(res.status_code)\
    print(res.content)\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#faq) FAQ\
\
- How to retrieve `POST /wallet/transfers` history?\
\
Records of transfers generated through `POST /wallet/transfers` has multiple methods to be\
retrieved based on account, including:\
\
  - `GET /margin/account_book` to retrieve transferals from or to margin account.\
  - `GET /futures/{settle}/account_book?type=dnw` to retrieve perpetual contract account history\
  - `GET /delivery/{settle}/account_book?type=dnw` to retrieve delivery contract account history\
- How to create margin orders?\
\
Margin order creation has been merged into spot order APIs. In `POST /spot/orders` or\
`POST /spot/batch_orders`, set `account` to `margin` to create margin orders.\
\
- Futures operation returns error `USER_NOT_FOUND`\
\
Futures account is not initialized yet. Making a deposit to your futures account will help. Note\
that each settle currency is associated with an independent futures account.\
\
- Futures operation returns error `CONTRACT_NOT_FOUND`\
\
Every settle currency has its own contract list. Make sure the contract you specified is supported\
by the settle currency. You can query the list with\
\
`GET /futures/{settle}/contracts` or `GET /delivery/{settle}/contracts`\
\
- Difference between sub account and main account\
\
  - Sub account API Key cannot operate transferals between main and sub account,\
    i.e., `POST /wallet/sub_account_transfers`\
  - Sub account API Key cannot operate withdrawal, i.e., `POST /withdrawals`\
  - If sub account does not have some business permission, even if its API key has the permission,\
    the operations will be rejected too.\
- I have other question(s) not covered above\
\
Contact support for the issue. If the problem is related to one of the SDKs, you can also open an\
issue in the corresponding GitHub repository.\
\
When submitting an issue, please include the following information to help identify the problem:\
\
  - User ID\
    - Original request URL, request parameters and request body\
    - What API key was used and where was it used, TestNet or real trading(API secret is not needed)\
    - Programming language. Providing a code snippet will be better\
    - Whether SDK was used. If so, which method caused the problem\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdrawal) Withdrawal\
\
Withdrawal API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdraw) Withdraw\
\
`POST /withdrawals`\
\
_Withdraw_\
\
If the recipient's on-chain address is also Gate, no transaction fee will be charged\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » withdraw\_order\_id | body | string | false | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » amount | body | string | true | Token amount |\
| » currency | body | string | true | Currency name |\
| » address | body | string | false | Withdrawal address. Required for withdrawals |\
| » memo | body | string | false | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | body | string | false | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | body | string | false | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand. |\
| » chain | body | string | true | Name of the chain used in withdrawals |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions) Detailed descriptions\
\
**» asset\_class**: Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.\
Valid values: SPOT, PILOT\
\
SPOT: Main area\
PILOT: Innovation area\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Withdrawal request accepted. Check withdrawal record status for processing result | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | string | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | string | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.<br>Valid values: SPOT, PILOT<br>SPOT: Main area<br>PILOT: Innovation area |\
| » status | string | Transaction status<br>\- DONE: Completed<br>\- CANCEL: Cancelled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: GateCode operation<br>\- EXTPEND: Sent, waiting for confirmation<br>\- FAIL: Failed on chain, waiting for confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: Pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals'\
query_param = ''\
body='{"withdraw_order_id":"order_123456","currency":"USDT","address":"1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs","amount":"222.61","memo":"","chain":"TRX"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/withdrawals"\
query_param=""\
body_param='{"withdraw_order_id":"order_123456","currency":"USDT","address":"1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs","amount":"222.61","memo":"","chain":"TRX"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "amount": "222.61",\
  "memo": "",\
  "chain": "TRX"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "id": "210496",\
  "timestamp": "1542000000",\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "txid": "128988928203223323290",\
  "amount": "222.61",\
  "memo": "",\
  "status": "DONE",\
  "chain": "TRX"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#uid-transfer) UID transfer\
\
`POST /withdrawals/push`\
\
_UID transfer_\
\
Transfers between main spot accounts. Both parties cannot be sub-accounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » receive\_uid | body | integer(int64) | true | Recipient UID |\
| » currency | body | string | true | Currency name |\
| » amount | body | string | true | Transfer amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request accepted. Check withdrawal record status for processing result | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals/push'\
query_param = ''\
body='{"receive_uid":12233,"currency":"USDT","amount":"1.1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/withdrawals/push"\
query_param=""\
body_param='{"receive_uid":12233,"currency":"USDT","amount":"1.1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "receive_uid": 12233,\
  "currency": "USDT",\
  "amount": "1.1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "id": 111\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-withdrawal-with-specified-id) Cancel withdrawal with specified ID\
\
`DELETE /withdrawals/{withdrawal_id}`\
\
_Cancel withdrawal with specified ID_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| withdrawal\_id | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 202 | [Accepted(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.3) | Cancellation request accepted. Check record status for cancellation result | Inline |\
\
### Response Schema\
\
Status Code **202**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | string | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | string | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.<br>Valid values: SPOT, PILOT<br>SPOT: Main area<br>PILOT: Innovation area |\
| » status | string | Transaction status<br>\- DONE: Completed<br>\- CANCEL: Cancelled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: GateCode operation<br>\- EXTPEND: Sent, waiting for confirmation<br>\- FAIL: Failed on chain, waiting for confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: Pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals/210496'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/withdrawals/210496"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 202 Response\
\
```\
{\
  "id": "210496",\
  "timestamp": "1542000000",\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "txid": "128988928203223323290",\
  "amount": "222.61",\
  "memo": "",\
  "status": "DONE",\
  "chain": "TRX"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#wallet) Wallet\
\
Wallet API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-chains-supported-for-specified-currency) Query chains supported for specified currency\
\
`GET /wallet/currency_chains`\
\
_Query chains supported for specified currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » chain | string | Chain name |\
| » name\_cn | string | Chain name in Chinese |\
| » name\_en | string | Chain name in English |\
| » contract\_address | string | Smart contract address for the currency; if no address is available, it will be an empty string |\
| » is\_disabled | integer(int32) | If it is disabled. 0 means NOT being disabled |\
| » is\_deposit\_disabled | integer(int32) | Is deposit disabled. 0 means not disabled |\
| » is\_withdraw\_disabled | integer(int32) | Is withdrawal disabled. 0 means not disabled |\
| » decimal | string | Withdrawal precision |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/currency_chains'\
query_param = 'currency=GT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "chain": "ETH",\
    "name_cn": "以太坊ERC20",\
    "name_en": "ETH/ERC20",\
    "contract_address": "",\
    "is_disabled": 0,\
    "is_deposit_disabled": 0,\
    "is_withdraw_disabled": 0\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#generate-currency-deposit-address) Generate currency deposit address\
\
`GET /wallet/deposit_address`\
\
_Generate currency deposit address_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Address successfully generated | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » address | string | Deposit address |\
| » multichain\_addresses | array | none |\
| »» MultiChainAddressItem | object | none |\
| »»» chain | string | Name of the chain |\
| »»» address | string | Deposit address |\
| »»» payment\_id | string | Notes that some currencies required(e.g., Tag, Memo) when depositing |\
| »»» payment\_name | string | Note type, `Tag` or `Memo` |\
| »»» obtain\_failed | integer | The obtain failed status- 0: address successfully obtained- 1: failed to obtain address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/deposit_address'\
query_param = 'currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/deposit_address"\
query_param="currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "USDT",\
  "address": "LPXtk1kWHioP62SzfqwKbYE3Z7Wt2ujYEc",\
  "multichain_addresses": [\
    {\
      "chain": "TRX",\
      "address": "LPXtk1kWHioP62SzfqwKbYE3Z7Wt2ujYEc",\
      "payment_id": "",\
      "payment_name": "",\
      "obtain_failed": 0\
    }\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-withdrawal-records) Get withdrawal records\
\
`GET /wallet/withdrawals`\
\
_Get withdrawal records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| withdraw\_id | query | string | false | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| asset\_class | query | string | false | Currency type of withdrawal record, empty by default. Supports querying withdrawal records in main zone and innovation zone on demand. |\
| withdraw\_order\_id | query | string | false | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-2) Detailed descriptions\
\
**asset\_class**: Currency type of withdrawal record, empty by default. Supports querying withdrawal records in main zone and innovation zone on demand.\
Value range: SPOT, PILOT\
\
SPOT: Main Zone\
PILOT: Innovation Zone\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » block\_number | string | Block Number |\
| » withdraw\_order\_id | string | Client order id, up to 32 length and can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.) |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » fee | string | Fee |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address |\
| » fail\_reason | string | Reason for withdrawal failure. Has a value when status = CANCEL, empty for all other statuses |\
| » timestamp2 | string | Withdrawal final time, i.e.: withdrawal cancellation time or withdrawal success time<br>When status = CANCEL, corresponds to cancellation time<br>When status = DONE and block\_number > 0, it is the withdrawal success time |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » status | string | Transaction status<br>\- DONE: Completed (block\_number > 0 is considered to be truly completed)<br>\- CANCEL: Canceled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: Recharge code operation<br>\- EXTPEND: Sent awaiting confirmation<br>\- FAIL: Failure on the chain awaiting confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/withdrawals'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/withdrawals"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "id": "w1879219868",\
      "currency": "USDT",\
      "address": "THISISTESTADDRESSFORGATEPAY",\
      "amount": "4.023",\
      "fee": "0",\
      "txid": "Internal transaction 260594131",\
      "chain": "BSC",\
      "timestamp": "1745220149",\
      "status": "DONE",\
      "withdraw_order_id": "202504211521368538928",\
      "block_number": "1000",\
      "fail_reason": "",\
      "type": "appbankgp",\
      "timestamp2": "1745220149",\
      "memo": ""\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-deposit-records) Get deposit records\
\
`GET /wallet/deposits`\
\
_Get deposit records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of entries returned in the list, limited to 500 transactions |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | Client order id, up to 32 length and can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.) |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » status | string | Trading Status<br>\- REVIEW: Recharge review (compliance review)<br>\- PEND: Processing<br>\- DONE: Waiting for funds to be unlocked<br>\- INVALID: Invalid data<br>\- TRACK: Track the number of confirmations, waiting to add funds to the user (spot)<br>\- BLOCKED: Rejected Recharge<br>\- DEP\_CREDITED: Recharge to account, withdrawal is not unlocked |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/deposits'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/deposits"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": "210496",\
    "timestamp": "1542000000",\
    "withdraw_order_id": "order_123456",\
    "currency": "USDT",\
    "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
    "txid": "128988928203223323290",\
    "amount": "222.61",\
    "memo": "",\
    "status": "DONE",\
    "chain": "TRX"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-trading-accounts) Transfer between trading accounts\
\
`POST /wallet/transfers`\
\
_Transfer between trading accounts_\
\
Balance transfers between personal trading accounts. Currently supports the following transfer operations:\
\
1. Spot account - Margin account\
2. Spot account - Perpetual futures account\
3. Spot account - Delivery futures account\
4. Spot account - Options account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Transfer currency name. For contract accounts, `currency` can be set to `POINT` (points) or supported settlement currencies (e.g., `BTC`, `USDT`) |\
| » from | body | string | true | Account to transfer from |\
| » to | body | string | true | Account to transfer to |\
| » amount | body | string | true | Transfer amount |\
| » currency\_pair | body | string | false | Margin trading pair. Required when transferring to or from margin account |\
| » settle | body | string | false | Contract settlement currency. Required when transferring to or from contract account |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » from | spot |\
| » from | margin |\
| » from | futures |\
| » from | delivery |\
| » from | options |\
| » to | spot |\
| » to | margin |\
| » to | futures |\
| » to | delivery |\
| » to | options |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/transfers'\
query_param = ''\
body='{"currency":"BTC","from":"spot","to":"margin","amount":"1","currency_pair":"BTC_USDT","settle":""}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/transfers"\
query_param=""\
body_param='{"currency":"BTC","from":"spot","to":"margin","amount":"1","currency_pair":"BTC_USDT","settle":""}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "BTC",\
  "from": "spot",\
  "to": "margin",\
  "amount": "1",\
  "currency_pair": "BTC_USDT",\
  "settle": ""\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-main-and-sub-accounts) Transfer between main and sub accounts\
\
`POST /wallet/sub_account_transfers`\
\
_Transfer between main and sub accounts_\
\
Supports transfers to/from sub-account's spot or futures accounts. Note that regardless of which sub-account is operated, only the main account's spot account is used\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » sub\_account | body | string | true | Sub account user ID |\
| » sub\_account\_type | body | string | false | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account, options - options account |\
| » currency | body | string | true | Transfer currency name |\
| » amount | body | string | true | Transfer amount |\
| » direction | body | string | true | Transfer direction: to - transfer into sub-account, from - transfer out from sub-account |\
| » client\_order\_id | body | string | false | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_transfers'\
query_param = ''\
body='{"sub_account":"10002","sub_account_type":"spot","currency":"BTC","amount":"1","direction":"to","client_order_id":"da3ce7a088c8b0372b741419c7829033"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/sub_account_transfers"\
query_param=""\
body_param='{"sub_account":"10002","sub_account_type":"spot","currency":"BTC","amount":"1","direction":"to","client_order_id":"da3ce7a088c8b0372b741419c7829033"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "sub_account": "10002",\
  "sub_account_type": "spot",\
  "currency": "BTC",\
  "amount": "1",\
  "direction": "to",\
  "client_order_id": "da3ce7a088c8b0372b741419c7829033"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-transfer-records-between-main-and-sub-accounts) Get transfer records between main and sub accounts\
\
`GET /wallet/sub_account_transfers`\
\
_Get transfer records between main and sub accounts_\
\
Record query time range cannot exceed 30 days\
\
> Note: Only records after 2020-04-10 can be retrieved\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » timest | string | Transfer timestamp |\
| » uid | string | Main account user ID |\
| » sub\_account | string | Sub account user ID |\
| » sub\_account\_type | string | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account, options - options account |\
| » currency | string | Transfer currency name |\
| » amount | string | Transfer amount |\
| » direction | string | Transfer direction: to - transfer into sub-account, from - transfer out from sub-account |\
| » source | string | Source of the transfer operation |\
| » client\_order\_id | string | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
| » status | string | Sub-account transfer record status, currently only 'success' |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_transfers'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_transfers"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "timest": "1592809000",\
    "uid": "10001",\
    "sub_account": "10002",\
    "sub_account_type": "spot",\
    "currency": "BTC",\
    "amount": "1",\
    "direction": "to",\
    "source": "web",\
    "client_order_id": "da3ce7a088c8b0372b741419c7829033",\
    "status": "success"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-sub-accounts) Transfer between sub-accounts\
\
`POST /wallet/sub_account_to_sub_account`\
\
_Transfer between sub-accounts_\
\
Supports balance transfers between two sub-accounts under the same main account. You can use either the main account's API Key or the source sub-account's API Key to perform the operation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Transfer currency name |\
| » sub\_account\_type | body | string | false | Transfer from account (deprecated, use `sub_account_from_type` and `sub_account_to_type` instead) |\
| » sub\_account\_from | body | string | true | Transfer from the user id of the sub-account |\
| » sub\_account\_from\_type | body | string | true | Source sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account |\
| » sub\_account\_to | body | string | true | Transfer to the user id of the sub-account |\
| » sub\_account\_to\_type | body | string | true | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account |\
| » amount | body | string | true | Transfer amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_to_sub_account'\
query_param = ''\
body='{"currency":"usdt","sub_account_from":"10001","sub_account_from_type":"spot","sub_account_to":"10002","sub_account_to_type":"spot","amount":"1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/sub_account_to_sub_account"\
query_param=""\
body_param='{"currency":"usdt","sub_account_from":"10001","sub_account_from_type":"spot","sub_account_to":"10002","sub_account_to_type":"spot","amount":"1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "usdt",\
  "sub_account_from": "10001",\
  "sub_account_from_type": "spot",\
  "sub_account_to": "10002",\
  "sub_account_to_type": "spot",\
  "amount": "1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-status-query) Transfer status query\
\
`GET /wallet/order_status`\
\
_Transfer status query_\
\
Supports querying transfer status based on user-defined client\_order\_id or tx\_id returned by the transfer interface\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| client\_order\_id | query | string | false | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
| tx\_id | query | string | false | Transfer operation number, cannot be empty at the same time as client\_order\_id |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer status retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransferOrderStatus_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | string | Order ID |\
| » status | string | Transfer status: PENDING - Processing, SUCCESS - Transfer successful, FAIL - Transfer failed, PARTIAL\_SUCCESS - Partially successful (this status appears when transferring between sub-accounts) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/order_status'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/order_status"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": "59636381286",\
  "status": "SUCCESS"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-withdrawal-status) Query withdrawal status\
\
`GET /wallet/withdraw_status`\
\
_Query withdrawal status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » name | string | Currency name |\
| » name\_cn | string | Currency Chinese name |\
| » deposit | string | Deposit fee |\
| » withdraw\_percent | string | Withdrawal fee rate percentage |\
| » withdraw\_fix | string | Fixed withdrawal fee |\
| » withdraw\_day\_limit | string | Daily allowed withdrawal amount |\
| » withdraw\_amount\_mini | string | Minimum withdrawal amount |\
| » withdraw\_day\_limit\_remain | string | Daily withdrawal amount left |\
| » withdraw\_eachtime\_limit | string | Maximum amount for each withdrawal |\
| » withdraw\_fix\_on\_chains | object | Fixed withdrawal fee on multiple chains |\
| »» **additionalProperties** | string | none |\
| » withdraw\_percent\_on\_chains | object | Percentage withdrawal fee on multiple chains |\
| »» **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/withdraw_status'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/withdraw_status"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "GT",\
    "name": "GateToken",\
    "name_cn": "GateToken",\
    "deposit": "0",\
    "withdraw_percent": "0%",\
    "withdraw_fix": "0.01",\
    "withdraw_day_limit": "20000",\
    "withdraw_day_limit_remain": "20000",\
    "withdraw_amount_mini": "0.11",\
    "withdraw_eachtime_limit": "20000",\
    "withdraw_fix_on_chains": {\
      "BTC": "20",\
      "ETH": "15",\
      "TRX": "0",\
      "EOS": "2.5"\
    },\
    "withdraw_percent_on_chains": {\
      "ETH": "0%",\
      "GTEVM": "0%"\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-balance-information) Query sub-account balance information\
\
`GET /wallet/sub_account_balances`\
\
_Query sub-account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | Available balances of currencies |\
| »» **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "10003",\
    "available": {\
      "BTC": "0.1",\
      "GT": "2000",\
      "USDT": "10"\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-isolated-margin-account-balance-information) Query sub-account isolated margin account balance information\
\
`GET /wallet/sub_account_margin_balances`\
\
_Query sub-account isolated margin account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | array | Margin account balances |\
| »» _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »»» currency\_pair | string | Trading pair |\
| »»» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »»» leverage | string | User's current market leverage multiplier |\
| »»» locked | boolean | Whether the account is locked |\
| »»» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »»» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »»» base | object | Currency account information |\
| »»»» currency | string | Currency name |\
| »»»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»»» borrowed | string | Borrowed funds |\
| »»»» interest | string | Unpaid interest |\
| »»» quote | object | Currency account information |\
| »»»» currency | string | Currency name |\
| »»»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»»» borrowed | string | Borrowed funds |\
| »»»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_margin_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_margin_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "10000",\
    "available": [\
      {\
        "locked": false,\
        "currency_pair": "BTC_USDT",\
        "risk": "9999.99",\
        "base": {\
          "available": "0.1",\
          "borrowed": "0",\
          "interest": "0",\
          "currency": "BTC",\
          "locked": "0"\
        },\
        "quote": {\
          "available": "0",\
          "borrowed": "0",\
          "interest": "0",\
          "currency": "USDT",\
          "locked": "0"\
        }\
      }\
    ]\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-perpetual-futures-account-balance-information) Query sub-account perpetual futures account balance information\
\
`GET /wallet/sub_account_futures_balances`\
\
_Query sub-account perpetual futures account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
| settle | query | string | false | Query balance of specified settlement currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | Futures account balances |\
| »» **additionalProperties** | object | none |\
| »»» total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| »»» unrealised\_pnl | string | Unrealized PNL |\
| »»» position\_margin | string | Position margin |\
| »»» order\_margin | string | Order margin of unfinished orders |\
| »»» available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| »»» point | string | Point card amount |\
| »»» currency | string | Settlement currency |\
| »»» in\_dual\_mode | boolean | Whether dual mode is enabled |\
| »»» position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| »»» enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| »»» position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| »»» maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| »»» bonus | string | Bonus |\
| »»» enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| »»» cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| »»» cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| »»» cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| »»» cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| »»» cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| »»» cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| »»» cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| »»» cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| »»» isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| »»» enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| »»» margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| »»» enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| »»» position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| »»» history | object | Statistical data |\
| »»»» dnw | string | total amount of deposit and withdraw |\
| »»»» pnl | string | total amount of trading profit and loss |\
| »»»» fee | string | total amount of fee |\
| »»»» refr | string | total amount of referrer rebates |\
| »»»» fund | string | total amount of funding costs |\
| »»»» point\_dnw | string | total amount of point deposit and withdraw |\
| »»»» point\_fee | string | total amount of point fee |\
| »»»» point\_refr | string | total amount of referrer rebates of point fee |\
| »»»» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »»»» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_futures_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_futures_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "available": {\
        "btc": {\
          "available": "0.0009",\
          "bonus": "0",\
          "cross_available": "0.0009",\
          "cross_initial_margin": "0",\
          "cross_maintenance_margin": "0",\
          "cross_order_margin": "0",\
          "cross_unrealised_pnl": "0",\
          "currency": "BTC",\
          "enable_credit": false,\
          "enable_evolved_classic": true,\
          "enable_new_dual_mode": false,\
          "history": {\
            "bonus_dnw": "0",\
            "bonus_offset": "0",\
            "cross_settle": "0",\
            "dnw": "0.0009",\
            "fee": "0",\
            "fund": "0",\
            "pnl": "0",\
            "point_dnw": "0",\
            "point_fee": "0",\
            "point_refr": "0",\
            "refr": "0"\
          },\
          "in_dual_mode": false,\
          "isolated_position_margin": "0",\
          "maintenance_margin": "0",\
          "margin_mode": 0,\
          "margin_mode_name": "classic",\
          "order_margin": "0",\
          "point": "0",\
          "position_initial_margin": "0",\
          "position_margin": "0",\
          "total": "0.0009",\
          "unrealised_pnl": "0",\
          "update_id": 11,\
          "update_time": 1741766400,\
          "user": 10003\
        },\
        "usd": {},\
        "usdt": {\
          "available": "500.7",\
          "bonus": "0",\
          "cross_available": "500.7",\
          "cross_initial_margin": "0",\
          "cross_maintenance_margin": "0",\
          "cross_order_margin": "0",\
          "cross_unrealised_pnl": "0",\
          "currency": "USDT",\
          "enable_credit": true,\
          "enable_evolved_classic": true,\
          "enable_new_dual_mode": true,\
          "history": {\
            "bonus_dnw": "0",\
            "bonus_offset": "0",\
            "cross_settle": "-1.854650083",\
            "dnw": "1.89047097",\
            "fee": "-0.141010882",\
            "fund": "0",\
            "pnl": "0.10519",\
            "point_dnw": "0",\
            "point_fee": "0",\
            "point_refr": "0",\
            "refr": "0"\
          },\
          "in_dual_mode": true,\
          "isolated_position_margin": "0",\
          "maintenance_margin": "0",\
          "margin_mode": 1,\
          "margin_mode_name": "multi_currency",\
          "order_margin": "0",\
          "point": "0",\
          "position_initial_margin": "0",\
          "position_margin": "0",\
          "total": "0.000000005",\
          "unrealised_pnl": "0",\
          "update_id": 37,\
          "update_time": 1741766400,\
          "user": 10003\
        }\
      },\
      "uid": "10003"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-cross-margin-account-balance-information) Query sub-account cross margin account balance information\
\
`GET /wallet/sub_account_cross_margin_balances`\
\
_Query sub-account cross margin account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | none |\
| »» user\_id | integer(int64) | Cross margin account user ID. 0 means this sub-account has not yet opened a cross margin account |\
| »» locked | boolean | Whether the account is locked |\
| »» balances | object | none |\
| »»» CrossMarginBalance | object | none |\
| »»»» available | string | Available balance |\
| »»»» freeze | string | Locked balance |\
| »»»» borrowed | string | Borrowed balance |\
| »»»» interest | string | Unpaid interest |\
| »»» total | string | Total account value in USDT, i.e., the sum of all currencies' `(available+freeze)*price*discount` |\
| »»» borrowed | string | Total borrowed value in USDT, i.e., the sum of all currencies' `borrowed*price*discount` |\
| »»» borrowed\_net | string | Total borrowed value in USDT \* leverage factor |\
| »»» net | string | Total net assets in USDT |\
| »»» leverage | string | Position leverage |\
| »»» interest | string | Total unpaid interest in USDT, i.e., the sum of all currencies' `interest*price*discount` |\
| »»» risk | string | Risk rate. When it falls below 110%, liquidation will be triggered. Calculation formula: `total / (borrowed+interest)` |\
| »»» total\_initial\_margin | string | Total initial margin |\
| »»» total\_margin\_balance | string | Total margin balance |\
| »»» total\_maintenance\_margin | string | Total maintenance margin |\
| »»» total\_initial\_margin\_rate | string | Total initial margin rate |\
| »»» total\_maintenance\_margin\_rate | string | Total maintenance margin rate |\
| »»» total\_available\_margin | string | Total available margin |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_cross_margin_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_cross_margin_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "100000",\
    "available": {\
      "user_id": 100003,\
      "locked": false,\
      "total": "20.000000",\
      "borrowed": "0.000000",\
      "interest": "0",\
      "borrowed_net": "0",\
      "net": "20",\
      "leverage": "3",\
      "risk": "9999.99",\
      "total_initial_margin": "0.00",\
      "total_margin_balance": "20.00",\
      "total_maintenance_margin": "0.00",\
      "total_initial_margin_rate": "9999.9900",\
      "total_maintenance_margin_rate": "9999.9900",\
      "total_available_margin": "20.00",\
      "balances": {\
        "USDT": {\
          "available": "20.000000",\
          "freeze": "0.000000",\
          "borrowed": "0.000000",\
          "interest": "0.000000"\
        }\
      }\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-withdrawal-address-whitelist) Query withdrawal address whitelist\
\
`GET /wallet/saved_address`\
\
_Query withdrawal address whitelist_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency |\
| chain | query | string | false | Chain name |\
| limit | query | string | false | Maximum number returned, up to 100 |\
| page | query | integer | false | Page number |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » chain | string | Chain name |\
| » address | string | Address |\
| » name | string | Name |\
| » tag | string | Tag |\
| » verified | string | Whether to pass the verification 0-unverified, 1-verified |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/saved_address'\
query_param = 'currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/saved_address"\
query_param="currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "usdt",\
    "chain": "TRX",\
    "address": "TWYirLzw2RARB2jfeFcfRPmeuU3rC7rakT",\
    "name": "gate",\
    "tag": "",\
    "verified": "1"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-fees) Query personal trading fees\
\
`GET /wallet/fee`\
\
_Query personal trading fees_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify currency pair to get more accurate fee settings. |\
| settle | query | string | false | Specify the settlement currency of the contract to get more accurate fee settings. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-3) Detailed descriptions\
\
**currency\_pair**: Specify currency pair to get more accurate fee settings.\
\
This field is optional. Usually fee settings are the same for all currency pairs.\
\
**settle**: Specify the settlement currency of the contract to get more accurate fee settings.\
\
This field is optional. Generally, the fee settings for all settlement currencies are the same.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-2) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | BTC |\
| settle | USDT |\
| settle | USD |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » taker\_fee | string | taker fee rate |\
| » maker\_fee | string | maker fee rate |\
| » gt\_discount | boolean | Whether GT deduction discount is enabled |\
| » gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| » gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| » loan\_fee | string | Loan fee rate of margin lending |\
| » point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| » futures\_taker\_fee | string | Perpetual contract taker fee rate |\
| » futures\_maker\_fee | string | Perpetual contract maker fee rate |\
| » delivery\_taker\_fee | string | Delivery contract taker fee rate |\
| » delivery\_maker\_fee | string | Delivery contract maker fee rate |\
| » debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 10001,\
  "taker_fee": "0.002",\
  "maker_fee": "0.002",\
  "futures_taker_fee": "-0.00025",\
  "futures_maker_fee": "0.00075",\
  "gt_discount": false,\
  "gt_taker_fee": "0",\
  "gt_maker_fee": "0",\
  "loan_fee": "0.18",\
  "point_type": "1",\
  "delivery_taker_fee": "0.00016",\
  "delivery_maker_fee": "-0.00015",\
  "debit_fee": 3\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-account-totals) Query personal account totals\
\
`GET /wallet/total_balance`\
\
_Query personal account totals_\
\
This query endpoint returns the total _estimated value_ of all currencies in each account converted to the input currency. Exchange rates and related account balance information may be cached for up to 1 minute.\
It is not recommended to use this interface data for real-time calculations.\
\
For real-time calculations, query the corresponding balance interface based on account type, such as:\
\
- `GET /spot/accounts` to query spot account\
- `GET /margin/accounts` to query margin account\
- `GET /futures/{settle}/accounts` to query futures account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Target currency type for statistical conversion. Accepts BTC, CNY, USD, and USDT. USDT is the default value |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request is valid and successfully returned | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's total balance information_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | object | Total balances calculated with specified currency unit |\
| »» amount | string | Account total balance amount |\
| »» currency | string | Currency |\
| »» unrealised\_pnl | string | Unrealised\_pnl, this field will only appear in futures, options, delivery, and total accounts |\
| »» borrowed | string | Total borrowed amount, this field will only appear in margin and cross\_margin accounts |\
| » details | object | Total balances in different accounts<br>\- cross\_margin: cross margin account<br>\- spot: spot account<br>\- finance: finance account<br>\- margin: margin account<br>\- quant: quant account<br>\- futures: perpetual contract account<br>\- delivery: delivery contract account<br>\- warrant: warrant account<br>\- cbbc: CBBC account |\
| »» **additionalProperties** | object | Total balances calculated with specified currency unit |\
| »»» amount | string | Account total balance amount |\
| »»» currency | string | Currency |\
| »»» unrealised\_pnl | string | Unrealised\_pnl, this field will only appear in futures, options, delivery, and total accounts |\
| »»» borrowed | string | Total borrowed amount, this field will only appear in margin and cross\_margin accounts |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-3) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| currency | BTC |\
| currency | CNY |\
| currency | USD |\
| currency | USDT |\
| currency | BTC |\
| currency | CNY |\
| currency | USD |\
| currency | USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/total_balance'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/total_balance"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "details": {\
    "cross_margin": {\
      "amount": "0",\
      "currency": "USDT"\
    },\
    "spot": {\
      "currency": "USDT",\
      "amount": "42264489969935775.5160259954878034182418"\
    },\
    "finance": {\
      "amount": "662714381.70310327810191647181",\
      "currency": "USDT"\
    },\
    "margin": {\
      "amount": "1259175.664137668554329559",\
      "currency": "USDT",\
      "borrowed": "0.00"\
    },\
    "quant": {\
      "amount": "591702859674467879.6488202650892478553852",\
      "currency": "USDT"\
    },\
    "futures": {\
      "amount": "2384175.5606114082065",\
      "currency": "USDT",\
      "unrealised_pnl": "0.00"\
    },\
    "delivery": {\
      "currency": "USDT",\
      "amount": "1519804.9756702",\
      "unrealised_pnl": "0.00"\
    },\
    "warrant": {\
      "amount": "0",\
      "currency": "USDT"\
    },\
    "cbbc": {\
      "currency": "USDT",\
      "amount": "0"\
    }\
  },\
  "total": {\
    "currency": "USDT",\
    "amount": "633967350312281193.068368815439797304437",\
    "unrealised_pnl": "0.00",\
    "borrowed": "0.00"\
  }\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-list-of-convertible-small-balance-currencies) Get list of convertible small balance currencies\
\
`GET /wallet/small_balance`\
\
_Get list of convertible small balance currencies_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Small Balance Conversion |\
| »» currency | string | Currency |\
| »» available\_balance | string | Available balance |\
| »» estimated\_as\_btc | string | Estimated as BTC |\
| »» convertible\_to\_gt | string | Estimated conversion to GT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/small_balance"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "currency": "FLOKI",\
      "available_balance": "182.29400000",\
      "estimated_as_btc": "0.00000012",\
      "convertible_to_gt": "0.001080"\
    },\
    {\
      "currency": "MBLK",\
      "available_balance": "0.91723337",\
      "estimated_as_btc": "0.00000102",\
      "convertible_to_gt": "0.009188"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#convert-small-balance-currency) Convert small balance currency\
\
`POST /wallet/small_balance`\
\
_Convert small balance currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | array | false | Currency to be converted |\
| » is\_all | body | boolean | false | Whether to convert all |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance'\
query_param = ''\
body='{"currency":["FLOKI","MBLK"],"is_all":true}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/small_balance"\
query_param=""\
body_param='{"currency":["FLOKI","MBLK"],"is_all":true}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": [\
    "FLOKI",\
    "MBLK"\
  ],\
  "is_all": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-convertible-small-balance-currency-history) Get convertible small balance currency history\
\
`GET /wallet/small_balance_history`\
\
_Get convertible small balance currency history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency to convert |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Small Balance Conversion |\
| »» id | string | Order ID |\
| »» currency | string | Currency |\
| »» amount | string | Swap Amount |\
| »» gt\_amount | string | GT amount |\
| »» create\_time | integer(int64) | Exchange time (in seconds) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/small_balance_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "id": "28583810",\
      "create_time": 1706670777,\
      "currency": "FLOKI",\
      "amount": "182.29400000",\
      "gt_amount": "0.001079"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-uid-transfer-history) Get UID transfer history\
\
`GET /wallet/push`\
\
_Get UID transfer history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| id | query | integer(int32) | false | Order ID |\
| from | query | integer(int32) | false | Start time for querying records. If not specified, defaults to 7 days before the current time. Unix timestamp in seconds |\
| to | query | integer(int32) | false | End time for querying records. If not specified, defaults to the current time. Unix timestamp in seconds |\
| limit | query | integer(int32) | false | Maximum number of items returned in the list, default value is 100 |\
| offset | query | integer(int32) | false | List offset, starting from 0 |\
| transaction\_type | query | string | false | Order type returned in the list: `withdraw`, `deposit`. Default is `withdraw`. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order ID |\
| » push\_uid | integer(int64) | Initiator User ID |\
| » receive\_uid | integer(int64) | Recipient User ID |\
| » currency | string | Currency name |\
| » amount | string | Transfer amount |\
| » create\_time | integer(int64) | Creation time |\
| » status | string | Withdrawal status:<br>\- CREATING: Creating<br>\- PENDING: Waiting for recipient (Please contact the recipient to accept the transfer on Gate official website)<br>\- CANCELLING: Cancelling<br>\- CANCELLED: Cancelled<br>\- REFUSING: Refusing<br>\- REFUSED: Refused<br>\- RECEIVING: Receiving<br>\- RECEIVED: Success |\
| » message | string | PENDING reason tips |\
| » transaction\_type | string | Order Type |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/push'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/push"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": 111,\
    "push_uid": 1132,\
    "receive_uid": 12324,\
    "currency": "BTC",\
    "amount": "1.2",\
    "status": "PENDING",\
    "create_time": 1706670777,\
    "message": "The other party has not completed KYC,There is a security risk in your account, please contact customer service",\
    "transaction_type": "withdraw"\
  }\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#subaccount) SubAccount\
\
Sub-account management\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-a-new-sub-account) Create a new sub-account\
\
`POST /sub_accounts`\
\
_Create a new sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » remark | body | string | false | Note |\
| » login\_name | body | string | true | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | body | string | false | The sub-account's password. (Default: the same as main account's password) |\
| » email | body | string | false | The sub-account's email address. (Default: the same as main account's email address) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts'\
query_param = ''\
body='{"remark":"remark","login_name":"sub_account_for_trades"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts"\
query_param=""\
body_param='{"remark":"remark","login_name":"sub_account_for_trades"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades",\
  "user_id": 10001,\
  "state": 1,\
  "create_time": 168888888\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-sub-accounts) List sub-accounts\
\
`GET /sub_accounts`\
\
_List sub-accounts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Enter `0` to list all types of sub-accounts (currently supporting cross-margin sub-accounts and regular sub-accounts). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-4) Detailed descriptions\
\
**type**: Enter `0` to list all types of sub-accounts (currently supporting cross-margin sub-accounts and regular sub-accounts).\
Enter `1` to query regular sub-accounts only. If no parameter is passed, only regular sub-accounts will be queried by default.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "remark": "remark",\
    "login_name": "sub_account_for_trades",\
    "user_id": 10001,\
    "state": 1,\
    "create_time": 168888888\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-sub-account) Get sub-account\
\
`GET /sub_accounts/{user_id}`\
\
_Get sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades",\
  "user_id": 10001,\
  "state": 1,\
  "create_time": 168888888\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-new-sub-account-api-key-pair) Create new sub-account API key pair\
\
`POST /sub_accounts/{user_id}/keys`\
\
_Create new sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
| body | body | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) | true | none |\
| » mode | body | integer(int32) | false | Mode: 1 - classic 2 - portfolio account |\
| » name | body | string | false | API Key Name |\
| » perms | body | array | false | none |\
| »» name | body | string | false | Permission function name (no value will be cleared) |\
| »» read\_only | body | boolean | false | Read Only |\
| » ip\_whitelist | body | array | false | IP whitelist (list will be cleared if no value is passed) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-5) Detailed descriptions\
\
**»» name**: Permission function name (no value will be cleared)\
\
- wallet: wallet\
- spot: spot/margin\
- futures: perpetual contract\
- delivery: delivery contract\
- earn: earn\
- custody: custody\
- options: options\
- account: account information\
- loan: lending\
- margin: margin\
- unified: unified account\
- copy: copy trading\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Created successfully | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys'\
query_param = ''\
body='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/keys"\
query_param=""\
body_param='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "mode": 1,\
  "name": "spot",\
  "perms": [\
    {\
      "read_only": false,\
      "name": "options"\
    },\
    {\
      "read_only": false,\
      "name": "spot"\
    },\
    {\
      "read_only": false,\
      "name": "delivery"\
    },\
    {\
      "read_only": false,\
      "name": "wallet"\
    },\
    {\
      "read_only": false,\
      "name": "futures"\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "state": 1,\
  "name": "spot",\
  "user_id": 100000,\
  "perms": [\
    {\
      "name": "options",\
      "read_only": false\
    },\
    {\
      "name": "spot",\
      "read_only": false\
    },\
    {\
      "name": "delivery",\
      "read_only": false\
    },\
    {\
      "name": "wallet",\
      "read_only": false\
    },\
    {\
      "name": "futures",\
      "read_only": false\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ],\
  "mode": 1,\
  "secret": "cddcc6e5e78060e013860bdbe5e737830b96821c027664586fb38b411808f4fd",\
  "key": "eb8815bf99d7bb5f8ad6497bdc4774a8",\
  "created_at": 1663683330,\
  "updated_at": 1663683330\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-api-key-pairs-of-the-sub-account) List all API key pairs of the sub-account\
\
`GET /sub_accounts/{user_id}/keys`\
\
_List all API key pairs of the sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0/keys"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "state": 1,\
    "name": "spot",\
    "user_id": 1000000,\
    "perms": [\
      {\
        "name": "futures",\
        "read_only": false\
      },\
      {\
        "name": "wallet",\
        "read_only": false\
      },\
      {\
        "name": "delivery",\
        "read_only": false\
      },\
      {\
        "name": "options",\
        "read_only": false\
      },\
      {\
        "name": "spot",\
        "read_only": false\
      }\
    ],\
    "mode": 1,\
    "ip_whitelist": [\
      "127.0.0.1",\
      "127.0.0.2"\
    ],\
    "key": "75c3264105b74693d8cb5c7f1a8e2420",\
    "created_at": 1663642892,\
    "last_access": 1663642892,\
    "update_at": 1663642892\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-sub-account-api-key-pair) Update sub-account API key pair\
\
`PUT /sub_accounts/{user_id}/keys/{key}`\
\
_Update sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
| body | body | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) | true | none |\
| » mode | body | integer(int32) | false | Mode: 1 - classic 2 - portfolio account |\
| » name | body | string | false | API Key Name |\
| » perms | body | array | false | none |\
| »» name | body | string | false | Permission function name (no value will be cleared) |\
| »» read\_only | body | boolean | false | Read Only |\
| » ip\_whitelist | body | array | false | IP whitelist (list will be cleared if no value is passed) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-6) Detailed descriptions\
\
**»» name**: Permission function name (no value will be cleared)\
\
- wallet: wallet\
- spot: spot/margin\
- futures: perpetual contract\
- delivery: delivery contract\
- earn: earn\
- custody: custody\
- options: options\
- account: account information\
- loan: lending\
- margin: margin\
- unified: unified account\
- copy: copy trading\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Updated successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
body='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "mode": 1,\
  "name": "spot",\
  "perms": [\
    {\
      "read_only": false,\
      "name": "options"\
    },\
    {\
      "read_only": false,\
      "name": "spot"\
    },\
    {\
      "read_only": false,\
      "name": "delivery"\
    },\
    {\
      "read_only": false,\
      "name": "wallet"\
    },\
    {\
      "read_only": false,\
      "name": "futures"\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#delete-sub-account-api-key-pair) Delete sub-account API key pair\
\
`DELETE /sub_accounts/{user_id}/keys/{key}`\
\
_Delete sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Deleted successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specific-api-key-pair-of-the-sub-account) Get specific API key pair of the sub-account\
\
`GET /sub_accounts/{user_id}/keys/{key}`\
\
_Get specific API key pair of the sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "state": 1,\
  "name": "spot",\
  "user_id": 1000000,\
  "perms": [\
    {\
      "name": "futures",\
      "read_only": false\
    },\
    {\
      "name": "wallet",\
      "read_only": false\
    },\
    {\
      "name": "delivery",\
      "read_only": false\
    },\
    {\
      "name": "options",\
      "read_only": false\
    },\
    {\
      "name": "spot",\
      "read_only": false\
    }\
  ],\
  "mode": 1,\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ],\
  "key": "75c3264105b74693d8cb5c7f1a8e2420",\
  "created_at": 1663642892,\
  "last_access": 1663642892,\
  "update_at": 1663642892\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#lock-sub-account) Lock sub-account\
\
`POST /sub_accounts/{user_id}/lock`\
\
_Lock sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Locked successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/lock'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/lock"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#unlock-sub-account) Unlock sub-account\
\
`POST /sub_accounts/{user_id}/unlock`\
\
_Unlock sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Unlocked successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/unlock'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/unlock"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-sub-account-mode) Get sub-account mode\
\
`GET /sub_accounts/unified_mode`\
\
_Get sub-account mode_\
\
Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Multi-currency margin mode\
- `portfolio`: Portfolio margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » is\_unified | boolean | Whether it is a unified account |\
| » mode | string | Unified account mode:<br>\- `classic`: Classic account mode<br>\- `multi_currency`: Multi-currency margin mode<br>\- `portfolio`: Portfolio margin mode |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/unified_mode'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/unified_mode"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "user_id": 110285555,\
    "is_unified": true,\
    "mode": "multi_currency"\
  }\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#unified) Unified\
\
Unified account\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-unified-account-information) Get unified account information\
\
`GET /unified/accounts`\
\
_Get unified account information_\
\
The assets of each currency in the account will be adjusted according to their liquidity, defined by corresponding adjustment coefficients, and then uniformly converted to USD to calculate the total asset value and position value of the account.\
\
For specific formulas, please refer to [Margin Formula](https://www.gate.com/docs/developers/apiv4/en/#margin-formula)\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| sub\_uid | query | string | false | Sub account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » refresh\_time | integer(int64) | Last refresh time |\
| » locked | boolean | Whether the account is locked, valid in cross-currency margin/combined margin mode, false in other modes such as single-currency margin mode |\
| » balances | object | none |\
| »» UnifiedBalance | object | none |\
| »»» available | string | Available balance, valid in single currency margin/cross-currency margin/combined margin mode, calculation varies by mode |\
| »»» freeze | string | Locked balance, valid in single currency margin/cross-currency margin/combined margin mode |\
| »»» borrowed | string | Borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» negative\_liab | string | Negative balance borrowing, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» futures\_pos\_liab | string | Contract opening position borrowing currency (abandoned, to be offline field) |\
| »»» equity | string | Equity, valid in single currency margin/cross currency margin/combined margin mode |\
| »»» total\_freeze | string | Total frozen (deprecated, to be removed) |\
| »»» total\_liab | string | Total borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» spot\_in\_use | string | The amount of spot hedging is valid in the combined margin mode, and is 0 in other margin modes such as single currency and cross-currency margin modes |\
| »»» funding | string | Uniloan financial management amount, effective when turned on as a unified account margin switch |\
| »»» funding\_version | string | Funding version |\
| »»» cross\_balance | string | Full margin balance is valid in single currency margin mode, and is 0 in other modes such as cross currency margin/combined margin mode |\
| »»» iso\_balance | string | Isolated margin balance is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» im | string | Full-position initial margin is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» mm | string | Cross margin maintenance margin, valid in single-currency margin mode, 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» imr | string | Full-position initial margin rate is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» mmr | string | Full-position maintenance margin rate is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» margin\_balance | string | Full margin balance is valid in single currency margin mode and is 0 in other modes such as cross currency margin/combined margin mode |\
| »»» available\_margin | string | Cross margin available balance, valid in single currency margin mode, 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» enabled\_collateral | boolean | Currency enabled as margin: true - Enabled, false - Disabled |\
| »» total | string | Total account assets converted to USD, i.e. the sum of `(available + freeze) * price` in all currencies (deprecated, to be removed, replaced by unified\_account\_total) |\
| »» borrowed | string | Total borrowed amount converted to USD, i.e. the sum of `borrowed * price` of all currencies (excluding point cards), valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_initial\_margin | string | Total initial margin, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_margin\_balance | string | Total margin balance, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_maintenance\_margin | string | Total maintenance margin is valid in cross-currency margin/combined margin mode, and is 0 in other modes such as single-currency margin mode |\
| »» total\_initial\_margin\_rate | string | Total initial margin rate, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_maintenance\_margin\_rate | string | Total maintenance margin rate, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_available\_margin | string | Available margin amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» unified\_account\_total | string | Total unified account assets, valid in single currency margin/cross-currency margin/combined margin mode |\
| »» unified\_account\_total\_liab | string | Total unified account borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» unified\_account\_total\_equity | string | Total unified account equity, valid in single currency margin/cross-currency margin/combined margin mode |\
| »» leverage | string | Actual leverage ratio, valid in cross-currency margin/combined margin mode |\
| »» spot\_order\_loss | string | Total pending order loss, in USDT, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» spot\_hedge | boolean | Spot hedging status: true - enabled, false - disabled |\
| »» use\_funding | boolean | Whether to use Earn funds as margin |\
| »» is\_all\_collateral | boolean | Whether all currencies are used as margin: true - all currencies as margin, false - no |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 10001,\
  "locked": false,\
  "balances": {\
    "ETH": {\
      "available": "0",\
      "freeze": "0",\
      "borrowed": "0.075393666654",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "1016.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "1.111"\
    },\
    "POINT": {\
      "available": "9999999999.017023138734",\
      "freeze": "0",\
      "borrowed": "0",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "12016.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "12"\
    },\
    "USDT": {\
      "available": "0.00000062023",\
      "freeze": "0",\
      "borrowed": "0",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "16.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "12"\
    }\
  },\
  "total": "230.94621713",\
  "borrowed": "161.66395521",\
  "total_initial_margin": "1025.0524665088",\
  "total_margin_balance": "3382495.944473949183",\
  "total_maintenance_margin": "205.01049330176",\
  "total_initial_margin_rate": "3299.827135672679",\
  "total_maintenance_margin_rate": "16499.135678363399",\
  "total_available_margin": "3381470.892007440383",\
  "unified_account_total": "3381470.892007440383",\
  "unified_account_total_liab": "0",\
  "unified_account_total_equity": "100016.1",\
  "leverage": "2",\
  "spot_order_loss": "12",\
  "spot_hedge": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-borrowable-amount-for-unified-account) Query maximum borrowable amount for unified account\
\
`GET /unified/borrowable`\
\
_Query maximum borrowable amount for unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UnifiedBorrowable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » amount | string | Max borrowable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/borrowable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/borrowable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "ETH",\
  "amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-transferable-amount-for-unified-account) Query maximum transferable amount for unified account\
\
`GET /unified/transferable`\
\
_Query maximum transferable amount for unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UnifiedTransferable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » amount | string | Maximum transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/transferable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/transferable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "ETH",\
  "amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-maximum-transferable-amount-for-unified-accounts-each-currency-shows-the-maximum-value-after-user-withdrawal-the-transferable-amount-for-all-currencies-will-change) Batch query maximum transferable amount for unified accounts. Each currency shows the maximum value. After user withdrawal, the transferable amount for all currencies will change\
\
`GET /unified/transferables`\
\
_Batch query maximum transferable amount for unified accounts. Each currency shows the maximum value. After user withdrawal, the transferable amount for all currencies will change_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | string | true | Specify the currency name to query in batches, and support up to 100 pass parameters at a time |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » TransferablesResult | object | Batch query unified account maximum transferable results |\
| »» currency | string | Currency detail |\
| »» amount | string | Maximum transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/transferables'\
query_param = 'currencies=BTC,ETH'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/transferables"\
query_param="currencies=BTC,ETH"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "BTC",\
    "amount": "123456"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-unified-account-maximum-borrowable-amount) Batch query unified account maximum borrowable amount\
\
`GET /unified/batch_borrowable`\
\
_Batch query unified account maximum borrowable amount_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency names for querying in an array, separated by commas, maximum 10 currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » UnifiedBorrowable | object | Batch query unified account maximum borrowable results |\
| »» currency | string | Currency detail |\
| »» amount | string | Maximum borrowable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/batch_borrowable'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/batch_borrowable"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "BTC",\
    "amount": "123456"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#borrow-or-repay) Borrow or repay\
\
`POST /unified/loans`\
\
_Borrow or repay_\
\
When borrowing, ensure the borrowed amount is not below the minimum borrowing threshold for the specific cryptocurrency and does not exceed the maximum borrowing limit set by the platform and user.\
\
Loan interest will be automatically deducted from the account at regular intervals. Users are responsible for managing repayment of borrowed amounts.\
\
For repayment, use `repaid_all=true` to repay all available amounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency |\
| » type | body | string | true | Type: `borrow` \- borrow, `repay` \- repay |\
| » amount | body | string | true | Borrow or repayment amount |\
| » repaid\_all | body | boolean | false | Full repayment, only used for repayment operations. When set to `true`, overrides `amount` and directly repays the full amount |\
| » text | body | string | false | User defined custom ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-4) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | borrow |\
| » type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Unified account borrowing and repayment response result_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tran\_id | integer(int64) | Transaction ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loans'\
query_param = ''\
body='{"currency":"BTC","amount":"0.1","type":"borrow","repaid_all":false,"text":"t-test"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/loans"\
query_param=""\
body_param='{"currency":"BTC","amount":"0.1","type":"borrow","repaid_all":false,"text":"t-test"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "BTC",\
  "amount": "0.1",\
  "type": "borrow",\
  "repaid_all": false,\
  "text": "t-test"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tran_id": 9527\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loans) Query loans\
\
`GET /unified/loans`\
\
_Query loans_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| type | query | string | false | Loan type: platform borrowing - platform, margin borrowing - margin |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Borrowing\] |\
| » _None_ | object | Borrowing |\
| »» currency | string | Currency |\
| »» currency\_pair | string | Trading pair |\
| »» amount | string | Amount to Repay |\
| »» type | string | Loan type: platform borrowing - platform, margin borrowing - margin |\
| »» create\_time | integer(int64) | Created time |\
| »» update\_time | integer(int64) | Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loans'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/loans"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "USDT",\
    "currency_pari": "GT_USDT",\
    "amount": "1",\
    "type": "margin",\
    "change_time": 1673247054000,\
    "create_time": 1673247054000\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loan-records) Query loan records\
\
`GET /unified/loan_records`\
\
_Query loan records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Loan record type: borrow - borrowing, repay - repayment |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Borrowing Records |\
| »» id | integer(int64) | id |\
| »» type | string | Type: `borrow` \- borrow, `repay` \- repay |\
| »» repayment\_type | string | Repayment type: none - No repayment type, manual\_repay - Manual repayment, auto\_repay - Automatic repayment, cancel\_auto\_repay - Automatic repayment after order cancellation, different\_currencies\_repayment - Cross-currency repayment |\
| »» borrow\_type | string | Borrowing type, returned when querying loan records: manual\_borrow - Manual borrowing, auto\_borrow - Automatic borrowing |\
| »» currency\_pair | string | Trading pair |\
| »» currency | string | Currency |\
| »» amount | string | Borrow or repayment amount |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loan_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/loan_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": 16442,\
    "type": "borrow",\
    "margin_mode": "cross",\
    "currency_pair": "AE_USDT",\
    "currency": "USDT",\
    "amount": "1000",\
    "create_time": 1673247054000,\
    "repayment_type": "auto_repay"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-interest-deduction-records) Query interest deduction records\
\
`GET /unified/interest_records`\
\
_Query interest deduction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| type | query | string | false | Loan type: platform borrowing - platform, margin borrowing - margin. Defaults to margin if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Interest Deduction Record\] |\
| » _None_ | object | Interest Deduction Record |\
| »» currency | string | Currency name |\
| »» currency\_pair | string | Trading pair |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» type | string | Type: platform - Platform borrowing, margin - Margin borrowing |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "status": 1,\
    "currency_pair": "BTC_USDT",\
    "currency": "USDT",\
    "actual_rate": "0.00000236",\
    "interest": "0.00006136",\
    "type": "platform",\
    "create_time": 1673247054000\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-risk-unit-details) Get user risk unit details\
\
`GET /unified/risk_units`\
\
_Get user risk unit details_\
\
Get user risk unit details, only valid in portfolio margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » spot\_hedge | boolean | Spot hedging status: true - enabled, false - disabled |\
| » risk\_units | array | Risk unit |\
| »» RiskUnits | object | none |\
| »»» symbol | string | Risk unit flag |\
| »»» spot\_in\_use | string | Spot hedging occupied amount |\
| »»» maintain\_margin | string | Maintenance margin for risk unit |\
| »»» initial\_margin | string | Initial margin for risk unit |\
| »»» delta | string | Total Delta of risk unit |\
| »»» gamma | string | Total Gamma of risk unit |\
| »»» theta | string | Total Theta of risk unit |\
| »»» vega | string | Total Vega of risk unit |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/risk_units'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/risk_units"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 0,\
  "spot_hedge": true,\
  "risk_units": [\
    {\
      "symbol": "BTC",\
      "spot_in_use": "-13500.000001223",\
      "maintain_margin": "2334.002",\
      "initial_margin": "2334.002",\
      "delta": "0.22",\
      "gamma": "0.42",\
      "theta": "0.29",\
      "vega": "0.22"\
    }\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-unified-account-mode) Set unified account mode\
\
`PUT /unified/unified_mode`\
\
_Set unified account mode_\
\
Each account mode switch only requires passing the corresponding account mode parameter, and also supports turning on or off the configuration switches under the corresponding account mode during the switch.\
\
- When enabling the classic account mode, mode=classic\
\
```\
 PUT /unified/unified_mode\
 {\
 "mode": "classic"\
 }\
\
```\
\
- When enabling the cross-currency margin "multi\_currency",\
"settings": {\
"usdt\_futures": true\
}\
}\
\
```\
- When enabling the portfolio margin mode, mode=portfolio\
\
```\
\
PUT /unified/unified\_mode\
{\
"mode": "portfolio",\
"settings": {\
"spot\_hedge": true\
}\
}\
\
```\
- When enabling the single-currency margin mode, mode=single_currency\
\
```\
\
PUT /unified/unified\_mode\
{\
"mode": "single\_currency"\
}\
\
````\
\
<Example>\
\
> Body parameter\
\
```json\
{\
"mode": "portfolio",\
"settings": {\
    "spot_hedge": true,\
    "usdt_futures": true,\
    "options": true\
}\
}\
\
````\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » mode | body | string | true | Unified account mode: |\
| » settings | body | object | false | none |\
| »» usdt\_futures | body | boolean | false | USDT futures switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
| »» spot\_hedge | body | boolean | false | Spot hedging switch |\
| »» use\_funding | body | boolean | false | Earn switch, when mode is cross-currency margin mode, whether to use Earn funds as margin |\
| »» options | body | boolean | false | Options switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-7) Detailed descriptions\
\
**» mode**: Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Cross-currency margin mode\
- `portfolio`: Portfolio margin mode\
- `single_currency`: Single-currency margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/unified_mode'\
query_param = ''\
body='{"mode":"portfolio","settings":{"spot_hedge":true,"usdt_futures":true,"options":true}}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/unified/unified_mode"\
query_param=""\
body_param='{"mode":"portfolio","settings":{"spot_hedge":true,"usdt_futures":true,"options":true}}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-mode-of-the-unified-account) Query mode of the unified account\
\
`GET /unified/unified_mode`\
\
_Query mode of the unified account_\
\
Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Cross-currency margin mode\
- `portfolio`: Portfolio margin mode\
- `single_currency`: Single-currency margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » mode | string | Unified account mode: <br>\- `classic`: Classic account mode<br>\- `multi_currency`: Cross-currency margin mode<br>\- `portfolio`: Portfolio margin mode<br>\- `single_currency`: Single-currency margin mode |\
| » settings | object | none |\
| »» usdt\_futures | boolean | USDT futures switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
| »» spot\_hedge | boolean | Spot hedging switch |\
| »» use\_funding | boolean | Earn switch, when mode is cross-currency margin mode, whether to use Earn funds as margin |\
| »» options | boolean | Options switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/unified_mode'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/unified_mode"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"mode": "portfolio",\
"settings": {\
    "spot_hedge": true,\
    "usdt_futures": true,\
    "options": true\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-estimated-interest-rate) Query unified account estimated interest rate\
\
`GET /unified/estimate_rate`\
\
_Query unified account estimated interest rate_\
\
Interest rates fluctuate hourly based on lending depth, so exact rates cannot be provided. When a currency is not supported, the interest rate returned will be an empty string\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency names for querying in an array, separated by commas, maximum 10 currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Estimate current hourly lending rates, returned by currency_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/estimate_rate'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/estimate_rate"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC": "0.000002",\
"GT": "0.000001",\
"ETH": ""\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-tiered) Query unified account tiered\
\
`GET /unified/currency_discount_tiers`\
\
_Query unified account tiered_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Unified account tiered discount |\
| »» currency | string | Currency name |\
| »» discount\_tiers | array | Tiered discount |\
| »»» tier | string | Tier |\
| »»» discount | string | Discount |\
| »»» lower\_limit | string | Lower limit |\
| »»» upper\_limit | string | Upper limit, + indicates positive infinity |\
| »»» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/currency_discount_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/currency_discount_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
[\
    {\
      "currency": "USDT",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "1",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "USDC",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "1",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "10000000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.98",\
          "lower_limit": "10000000",\
          "leverage": "10",\
          "upper_limit": "15000000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.95",\
          "lower_limit": "15000000",\
          "leverage": "10",\
          "upper_limit": "20000000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.925",\
          "lower_limit": "20000000",\
          "leverage": "10",\
          "upper_limit": "50000000"\
        },\
        {\
          "tier": "5",\
          "discount": "0.9",\
          "lower_limit": "50000000",\
          "leverage": "10",\
          "upper_limit": "100000000"\
        },\
        {\
          "tier": "6",\
          "discount": "0",\
          "lower_limit": "100000000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "BTC",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "0.98",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "1000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.95",\
          "lower_limit": "1000",\
          "leverage": "10",\
          "upper_limit": "10000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.9",\
          "lower_limit": "10000",\
          "leverage": "10",\
          "upper_limit": "50000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.85",\
          "lower_limit": "50000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "ETH",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "0.98",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "1000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.95",\
          "lower_limit": "1000",\
          "leverage": "10",\
          "upper_limit": "10000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.9",\
          "lower_limit": "10000",\
          "leverage": "10",\
          "upper_limit": "50000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.85",\
          "lower_limit": "50000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    }\
]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-tiered-loan-margin) Query unified account tiered loan margin\
\
`GET /unified/loan_margin_tiers`\
\
_Query unified account tiered loan margin_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Unified account borrowing margin tiers |\
| »» currency | string | Currency name |\
| »» margin\_tiers | array | Tiered margin |\
| »»» MarginTiers | object | none |\
| »»»» tier | string | Tier |\
| »»»» margin\_rate | string | Discount |\
| »»»» lower\_limit | string | Lower limit |\
| »»»» upper\_limit | string | Upper limit, "" indicates greater than (the last tier) |\
| »»»» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loan_margin_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/loan_margin_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "margin_tiers": [\
      {\
        "tier": "1",\
        "margin_rate": "0.02",\
        "lower_limit": "200000",\
        "upper_limit": "400000",\
        "leverage": "3"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#portfolio-margin-calculator) Portfolio margin calculator\
\
`POST /unified/portfolio_calculator`\
\
_Portfolio margin calculator_\
\
Portfolio Margin Calculator\
\
When inputting simulated position portfolios, each position includes the position name and quantity held, supporting markets within the range of BTC and ETH perpetual contracts, options, and spot markets.\
When inputting simulated orders, each order includes the market identifier, order price, and order quantity, supporting markets within the range of BTC and ETH perpetual contracts, options, and spot markets. Market orders are not included.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » spot\_balances | body | array | false | Spot |\
| »» _None_ | body | object | false | Spot |\
| »»» currency | body | string | true | Currency name |\
| »»» equity | body | string | true | Currency equity, where equity = balance - borrowed, represents the net delta exposure of your spot positions, which can be negative. Currently only supports BTC and ETH |\
| »» spot\_orders | body | array | false | Spot orders |\
| »»» _None_ | body | object | false | Spot orders |\
| »»»» currency\_pairs | body | string | true | Market |\
| »»»» order\_price | body | string | true | Price |\
| »»»» count | body | string | false | Initial order quantity for spot trading pairs, not involved in actual calculation. Currently only supports BTC and ETH Currently only supports three currencies: BTC, ETH |\
| »»»» left | body | string | true | Unfilled quantity, involved in actual calculation |\
| »»»» type | body | string | true | Order type, sell - sell order, buy - buy order |\
| »»» futures\_positions | body | array | false | Futures positions |\
| »»»» _None_ | body | object | false | Futures positions |\
| »»»»» contract | body | string | true | Futures name, currently only supports USDT perpetual contracts for BTC and ETH |\
| »»»»» size | body | string | true | Position size, measured in contract quantity |\
| »»»» futures\_orders | body | array | false | Futures order |\
| »»»»» _None_ | body | object | false | Futures order |\
| »»»»»» contract | body | string | true | Futures name, currently only supports USDT perpetual contracts for BTC and ETH |\
| »»»»»» size | body | string | true | Contract quantity, representing the initial order quantity, not involved in actual settlement |\
| »»»»»» left | body | string | true | Unfilled contract quantity, involved in actual calculation |\
| »»»»» options\_positions | body | array | false | Options positions |\
| »»»»»» _None_ | body | object | false | Options positions |\
| »»»»»»» options\_name | body | string | true | Option name, currently only supports USDT options for BTC and ETH |\
| »»»»»»» size | body | string | true | Position size, measured in contract quantity |\
| »»»»»» options\_orders | body | array | false | Option orders |\
| »»»»»»» _None_ | body | object | false | Option orders |\
| »»»»»»»» options\_name | body | string | true | Option name, currently only supports USDT options for BTC and ETH |\
| »»»»»»»» size | body | string | true | Initial order quantity, not involved in actual calculation |\
| »»»»»»»» left | body | string | true | Unfilled contract quantity, involved in actual calculation |\
| »»»»»»» spot\_hedge | body | boolean | false | Whether to enable spot hedging |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Portfolio margin calculator output_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » maintain\_margin\_total | string | Total maintenance margin, including only portfolio margin calculation results for positions in risk units, excluding borrowing margin. If borrowing exists, conventional borrowing margin requirements will still apply |\
| » initial\_margin\_total | string | Total initial margin, calculated as the maximum of the following three combinations: position, position + positive delta orders, position + negative delta orders |\
| » calculate\_time | integer(int64) | Calculation time |\
| » risk\_unit | array | Risk unit |\
| »» _None_ | object | Risk unit |\
| »»» symbol | string | Risk unit name |\
| »»» spot\_in\_use | string | Spot hedge usage |\
| »»» maintain\_margin | string | Maintenance margin |\
| »»» initial\_margin | string | Initial margin |\
| »»» margin\_result | array | Margin result |\
| »»»» _None_ | object | Margin result |\
| »»»»» type | string | Position combination type<br>`original_position` \- Original position<br>`long_delta_original_position` \- Positive delta + Original position<br>`short_delta_original_position` \- Negative delta + Original position |\
| »»»»» profit\_loss\_ranges | array | Results of 33 stress scenarios for MR1 |\
| »»»»»» _None_ | object | Profit and loss range |\
| »»»»»»» price\_percentage | string | Percentage change in price |\
| »»»»»»» implied\_volatility\_percentage | string | Percentage change in implied volatility |\
| »»»»»»» profit\_loss | string | PnL |\
| »»»»»» max\_loss | object | Profit and loss range |\
| »»»»»»» price\_percentage | string | Percentage change in price |\
| »»»»»»» implied\_volatility\_percentage | string | Percentage change in implied volatility |\
| »»»»»»» profit\_loss | string | PnL |\
| »»»»»» mr1 | string | Stress testing |\
| »»»»»» mr2 | string | Basis spread risk |\
| »»»»»» mr3 | string | Volatility spread risk |\
| »»»»»» mr4 | string | Option short risk |\
| »»»»» delta | string | Total Delta of risk unit |\
| »»»»» gamma | string | Total Gamma of risk unit |\
| »»»»» theta | string | Total Theta of risk unit |\
| »»»»» vega | string | Total Vega of risk unit |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/portfolio_calculator'\
query_param = ''\
body='{"spot_balances":[{"currency":"BTC","equity":"-1","freeze":"10"}],"spot_orders":[{"currency_pairs":"BTC_USDT","order_price":"344","size":"100","left":"100","type":"sell"}],"futures_positions":[{"contract":"BTC_USDT","size":"100"}],"futures_orders":[{"contract":"BTC_USDT","size":"10","left":"8"}],"options_positions":[{"options_name":"BTC_USDT-20240329-32000-C","size":"10"}],"options_orders":[{"options_name":"BTC_USDT-20240329-32000-C","size":"100","left":"80"}],"spot_hedge":false}'\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
\
curl -X POST https://api.gateio.ws/api/v4/unified/portfolio_calculator \\
  -H 'Content-Type: application/json' \\
  -H 'Accept: application/json'\
\
```\
\
> Body parameter\
\
```\
{\
"spot_balances": [\
    {\
      "currency": "BTC",\
      "equity": "-1",\
      "freeze": "10"\
    }\
],\
"spot_orders": [\
    {\
      "currency_pairs": "BTC_USDT",\
      "order_price": "344",\
      "size": "100",\
      "left": "100",\
      "type": "sell"\
    }\
],\
"futures_positions": [\
    {\
      "contract": "BTC_USDT",\
      "size": "100"\
    }\
],\
"futures_orders": [\
    {\
      "contract": "BTC_USDT",\
      "size": "10",\
      "left": "8"\
    }\
],\
"options_positions": [\
    {\
      "options_name": "BTC_USDT-20240329-32000-C",\
      "size": "10"\
    }\
],\
"options_orders": [\
    {\
      "options_name": "BTC_USDT-20240329-32000-C",\
      "size": "100",\
      "left": "80"\
    }\
],\
"spot_hedge": false\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"maintain_margin_total": "0.000000000000",\
"initial_margin_total": "0.000000000000",\
"calculate_time": "1709014486",\
"risk_unit": [\
    {\
      "symbol": "BTC",\
      "margin_result": [\
        {\
          "type": "original_position",\
          "profit_loss_ranges": [\
            {\
              "price_percentage": "-0.200000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.160000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.120000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.080000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.040000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.000000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.040000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.080000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.120000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.160000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.200000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            }\
          ],\
          "max_loss": {\
            "price_percentage": "-0.200000000000",\
            "implied_volatility_percentage": "-0.300000000000",\
            "profit_loss": "0.000000000000"\
          },\
          "mr1": "0.000000000000",\
          "mr2": "0.000000000000",\
          "mr3": "0.000000000000",\
          "mr4": "0.000000000000"\
        }\
      ],\
      "maintain_margin": "0.000000000000",\
      "initial_margin": "0.000000000000"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#maximum-and-minimum-currency-leverage-that-can-be-set) Maximum and minimum currency leverage that can be set\
\
`GET /unified/leverage/user_currency_config`\
\
_Maximum and minimum currency leverage that can be set_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » current\_leverage | string | Current leverage ratio |\
| » min\_leverage | string | Minimum adjustable leverage ratio |\
| » max\_leverage | string | Maximum adjustable leverage ratio |\
| » debit | string | Current liabilities |\
| » available\_margin | string | Available Margin |\
| » borrowable | string | Maximum borrowable amount at current leverage |\
| » except\_leverage\_borrowable | string | Maximum borrowable from margin and maximum borrowable from Earn, whichever is smaller |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_config'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/leverage/user_currency_config"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"current_leverage": "2",\
"min_leverage": "0",\
"max_leverage": "0",\
"debit": "0",\
"available_margin": "0",\
"borrowable": "0",\
"except_leverage_borrowable": "0"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-currency-leverage) Get user currency leverage\
\
`GET /unified/leverage/user_currency_setting`\
\
_Get user currency leverage_\
\
Get user currency leverage. If currency is not specified, query all currencies\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Leverage multiplier for borrowing currency\] |\
| » _None_ | object | Leverage multiplier for borrowing currency |\
| »» currency | string | Currency name |\
| »» leverage | string | Multiplier |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_setting'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/leverage/user_currency_setting"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "leverage": "3"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-loan-currency-leverage) Set loan currency leverage\
\
`POST /unified/leverage/user_currency_setting`\
\
_Set loan currency leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency name |\
| » leverage | body | string | true | Multiplier |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_setting'\
query_param = ''\
body='{"currency":"BTC","leverage":"3"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/leverage/user_currency_setting"\
query_param=""\
body_param='{"currency":"BTC","leverage":"3"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "BTC",\
"leverage": "3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-of-loan-currencies-supported-by-unified-account) List of loan currencies supported by unified account\
\
`GET /unified/currencies`\
\
_List of loan currencies supported by unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Currency name |\
| » prec | string | Currency precision |\
| » min\_borrow\_amount | string | Minimum borrowable limit, in currency units |\
| » user\_max\_borrow\_amount | string | User's maximum borrowable limit, in USDT |\
| » total\_max\_borrow\_amount | string | Platform's maximum borrowable limit, in USDT |\
| » loan\_status | string | Lending status<br> \- `disable` : Lending prohibited<br> \- `enable` : Lending supported |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC",\
    "prec": "0.000001",\
    "min_borrow_amount": "0.01",\
    "user_max_borrow_amount": "1000000",\
    "total_max_borrow_amount": "1000000",\
    "loan_status": "enable"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-historical-lending-rates) Get historical lending rates\
\
`GET /unified/history_loan_rate`\
\
_Get historical lending rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| tier | query | string | false | VIP level for the floating rate to be queried |\
| currency | query | string | true | Currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » tier | string | VIP level for the floating rate to be retrieved |\
| » tier\_up\_rate | string | Floating rate corresponding to VIP level |\
| » rates | array | Historical interest rate information, one data point per hour, array size determined by page and limit parameters from the API request, sorted by time from recent to distant |\
| »» time | integer(int64) | Hourly timestamp corresponding to this interest rate, in milliseconds |\
| »» rate | string | Historical interest rate for this hour |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/history_loan_rate'\
query_param = 'currency=USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/history_loan_rate?currency=USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "USDT",\
"tier": "1",\
"tier_up_rate": "1.18",\
"rates": [\
    {\
      "time": 1729047616000,\
      "rate": "0.00010287"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-collateral-currency) Set collateral currency\
\
`POST /unified/collateral_currencies`\
\
_Set collateral currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » collateral\_type | body | integer | false | User-set collateral mode: 0(all)-All currencies as collateral, 1(custom)-Custom currencies as collateral. When collateral\_type is 0(all), enable\_list and disable\_list parameters are invalid |\
| » enable\_list | body | array | false | Currency list, where collateral\_type=1(custom) indicates the addition logic |\
| » disable\_list | body | array | false | Disable list, indicating the disable logic |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-5) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » collateral\_type | 0 |\
| » collateral\_type | 1 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Unified account collateral mode settings response_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » is\_success | boolean | Whether the setting was successful |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/collateral_currencies'\
query_param = ''\
body='{"collateral_type":1,"enable_list":["BTC","ETH"],"disable_list":["SOL","GT"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/collateral_currencies"\
query_param=""\
body_param='{"collateral_type":1,"enable_list":["BTC","ETH"],"disable_list":["SOL","GT"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_type": 1,\
"enable_list": [\
    "BTC",\
    "ETH"\
],\
"disable_list": [\
    "SOL",\
    "GT"\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"is_success": true\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#isolated-margin) Isolated-Margin\
\
Isolated Margin\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#margin-account-list) Margin account list\
\
`GET /margin/accounts`\
\
_Margin account list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information\] |\
| » _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »» currency\_pair | string | Trading pair |\
| »» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »» leverage | string | User's current market leverage multiplier |\
| »» locked | boolean | Whether the account is locked |\
| »» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »» base | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
| »» quote | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "account_type": "mmr",\
    "leverage": "20",\
    "locked": false,\
    "risk": "1.3318",\
    "mmr": "16.5949188975473644",\
    "base": {\
      "currency": "BTC",\
      "available": "0.047060413211",\
      "locked": "0",\
      "borrowed": "0.047233",\
      "interest": "0"\
    },\
    "quote": {\
      "currency": "USDT",\
      "available": "1234",\
      "locked": "0",\
      "borrowed": "0",\
      "interest": "0"\
    }\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-margin-account-balance-change-history) Query margin account balance change history\
\
`GET /margin/account_book`\
\
_Query margin account balance change history_\
\
Currently only provides transfer history to and from margin accounts. Query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query history for specified currency. If `currency` is specified, `currency_pair` must also be specified. |\
| currency\_pair | query | string | false | Specify margin account currency pair. Used in combination with `currency`. Ignored if `currency` is not specified |\
| type | query | string | false | Query by specified account change type. If not specified, all change types will be included. |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-8) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Balance change record ID |\
| » time | string | Account change timestamp |\
| » time\_ms | integer(int64) | The timestamp of the change (in milliseconds) |\
| » currency | string | Currency changed |\
| » currency\_pair | string | Account trading pair |\
| » change | string | Amount changed. Positive value means transferring in, while negative out |\
| » balance | string | Balance after change |\
| » type | string | Account book type. Please refer to [account book type](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type) for more detail |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "123456",\
    "time": "1547633726",\
    "time_ms": 1547633726123,\
    "currency": "BTC",\
    "currency_pair": "BTC_USDT",\
    "change": "1.03",\
    "balance": "4.59316525194"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#funding-account-list) Funding account list\
\
`GET /margin/funding_accounts`\
\
_Funding account list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » available | string | Available assets to lend, which is identical to spot account `available` |\
| » locked | string | Locked amount. i.e. amount in `open` loans |\
| » lent | string | Outstanding loan amount yet to be repaid |\
| » total\_lent | string | Amount used for lending. total\_lent = lent + locked |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/funding_accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/funding_accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "available": "1.238",\
    "locked": "0",\
    "lent": "3.32",\
    "total_lent": "3.32"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-user-auto-repayment-settings) Update user auto repayment settings\
\
`POST /margin/auto_repay`\
\
_Update user auto repayment settings_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Whether to enable auto repayment: `on` \- enabled, `off` \- disabled |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User's current auto repayment settings | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AutoRepaySetting_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » status | string | Auto repayment status: `on` \- enabled, `off` \- disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-6) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | on |\
| status | off |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/auto_repay'\
query_param = 'status=on'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/auto_repay"\
query_param="status=on"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "on"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-auto-repayment-settings) Query user auto repayment settings\
\
`GET /margin/auto_repay`\
\
_Query user auto repayment settings_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User's current auto repayment settings | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AutoRepaySetting_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » status | string | Auto repayment status: `on` \- enabled, `off` \- disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-7) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | on |\
| status | off |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/auto_repay'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/auto_repay"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "on"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-maximum-transferable-amount-for-isolated-margin) Get maximum transferable amount for isolated margin\
\
`GET /margin/transferable`\
\
_Get maximum transferable amount for isolated margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MarginTransferable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » currency\_pair | string | Trading pair |\
| » amount | string | Max transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/transferable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/transferable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "ETH",\
"currency_pair": "ETH_USDT",\
"amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-lending-markets) List lending markets\
\
`GET /margin/uni/currency_pairs`\
\
_List lending markets_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Currency pair of the loan\] |\
| » _None_ | object | Currency pair of the loan |\
| »» currency\_pair | string | Trading pair |\
| »» base\_min\_borrow\_amount | string | Minimum borrow amount of base currency |\
| »» quote\_min\_borrow\_amount | string | Minimum borrow amount of quote currency |\
| »» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/uni/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "AE_USDT",\
    "base_min_borrow_amount": "100",\
    "quote_min_borrow_amount": "100",\
    "leverage": "3"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-lending-market-details) Get lending market details\
\
`GET /margin/uni/currency_pairs/{currency_pair}`\
\
_Get lending market details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | path | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Currency pair of the loan_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » base\_min\_borrow\_amount | string | Minimum borrow amount of base currency |\
| » quote\_min\_borrow\_amount | string | Minimum borrow amount of quote currency |\
| » leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/currency_pairs/AE_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/uni/currency_pairs/AE_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency_pair": "AE_USDT",\
"base_min_borrow_amount": "100",\
"quote_min_borrow_amount": "100",\
"leverage": "3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#estimate-interest-rate-for-isolated-margin-currencies) Estimate interest rate for isolated margin currencies\
\
`GET /margin/uni/estimate_rate`\
\
_Estimate interest rate for isolated margin currencies_\
\
Interest rates change hourly based on lending depth, so completely accurate rates cannot be provided.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Array of currency names to query, maximum 10 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Estimate current hourly lending rates, returned by currency_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/estimate_rate'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/estimate_rate"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC": "0.000002",\
"GT": "0.000001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#borrow-or-repay-2) Borrow or repay\
\
`POST /margin/uni/loans`\
\
_Borrow or repay_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency |\
| » type | body | string | true | Type: `borrow` \- borrow, `repay` \- repay |\
| » amount | body | string | true | Borrow or repayment amount |\
| » repaid\_all | body | boolean | false | Full repayment. For repayment operations only. When `true`, overrides `amount` and repays the full amount |\
| » currency\_pair | body | string | true | Trading pair |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-8) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | borrow |\
| » type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loans'\
query_param = ''\
body='{"currency":"BTC","amount":"0.1","type":"borrow","currency_pair":"BTC_USDT","repaid_all":false}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/uni/loans"\
query_param=""\
body_param='{"currency":"BTC","amount":"0.1","type":"borrow","currency_pair":"BTC_USDT","repaid_all":false}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "BTC",\
"amount": "0.1",\
"type": "borrow",\
"currency_pair": "BTC_USDT",\
"repaid_all": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loans-2) Query loans\
\
`GET /margin/uni/loans`\
\
_Query loans_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Borrowing\] |\
| » _None_ | object | Borrowing |\
| »» currency | string | Currency |\
| »» currency\_pair | string | Trading pair |\
| »» amount | string | Amount to Repay |\
| »» type | string | Loan type: platform borrowing - platform, margin borrowing - margin |\
| »» create\_time | integer(int64) | Created time |\
| »» update\_time | integer(int64) | Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loans'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/loans"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "currency_pari": "GT_USDT",\
    "amount": "1",\
    "type": "margin",\
    "change_time": 1673247054000,\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loan-records-2) Query loan records\
\
`GET /margin/uni/loan_records`\
\
_Query loan records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Type: `borrow` \- borrow, `repay` \- repay |\
| currency | query | string | false | Query by specified currency name |\
| currency\_pair | query | string | false | Trading pair |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-9) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | borrow |\
| type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Borrowing Records |\
| »» type | string | Type: `borrow` \- borrow, `repay` \- repay |\
| »» currency\_pair | string | Trading pair |\
| »» currency | string | Currency |\
| »» amount | string | Borrow or repayment amount |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loan_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/loan_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "borrow",\
    "currency_pair": "AE_USDT",\
    "currency": "USDT",\
    "amount": "1000",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-interest-deduction-records-2) Query interest deduction records\
\
`GET /margin/uni/interest_records`\
\
_Query interest deduction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-9) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Interest Deduction Record\] |\
| » _None_ | object | Interest Deduction Record |\
| »» currency | string | Currency name |\
| »» currency\_pair | string | Trading pair |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» type | string | Type: platform - Platform borrowing, margin - Margin borrowing |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": 1,\
    "currency_pair": "BTC_USDT",\
    "currency": "USDT",\
    "actual_rate": "0.00000236",\
    "interest": "0.00006136",\
    "type": "platform",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-borrowable-amount-by-currency) Query maximum borrowable amount by currency\
\
`GET /margin/uni/borrowable`\
\
_Query maximum borrowable amount by currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MaxUniBorrowable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » currency\_pair | string | Trading pair |\
| » borrowable | string | Maximum borrowable |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/borrowable'\
query_param = 'currency=BTC&currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/borrowable"\
query_param="currency=BTC&currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"borrowable": "1123.344",\
"currency_pair": "AE_USDT"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-own-leverage-lending-tiers-in-current-market) Query user's own leverage lending tiers in current market\
\
`GET /margin/user/loan_margin_tiers`\
\
_Query user's own leverage lending tiers in current market_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Market gradient information\] |\
| » _None_ | object | Market gradient information |\
| »» upper\_limit | string | Maximum loan limit |\
| »» mmr | string | Maintenance margin rate |\
| »» leverage | string | Maximum leverage multiple |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/user/loan_margin_tiers'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/user/loan_margin_tiers"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier_amount": "100",\
    "mmr": "0.9",\
    "leverage": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-current-market-leverage-lending-tiers) Query current market leverage lending tiers\
\
`GET /margin/loan_margin_tiers`\
\
_Query current market leverage lending tiers_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Market gradient information\] |\
| » _None_ | object | Market gradient information |\
| »» upper\_limit | string | Maximum loan limit |\
| »» mmr | string | Maintenance margin rate |\
| »» leverage | string | Maximum leverage multiple |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/loan_margin_tiers'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/loan_margin_tiers?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier_amount": "100",\
    "mmr": "0.9",\
    "leverage": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-user-market-leverage-multiplier) Set user market leverage multiplier\
\
`POST /margin/leverage/user_market_setting`\
\
_Set user market leverage multiplier_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency\_pair | body | string | false | Market |\
| » leverage | body | string | true | Position leverage |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/leverage/user_market_setting'\
query_param = ''\
body='{"currency_pair":"BTC_USDT","leverage":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/leverage/user_market_setting"\
query_param=""\
body_param='{"currency_pair":"BTC_USDT","leverage":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "BTC_USDT",\
"leverage": "10"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-isolated-margin-account-list) Query user's isolated margin account list\
\
`GET /margin/user/account`\
\
_Query user's isolated margin account list_\
\
Supports querying risk ratio isolated accounts and margin ratio isolated accounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information\] |\
| » _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »» currency\_pair | string | Trading pair |\
| »» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »» leverage | string | User's current market leverage multiplier |\
| »» locked | boolean | Whether the account is locked |\
| »» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »» base | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
| »» quote | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/user/account'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/user/account"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "account_type": "mmr",\
    "leverage": "20",\
    "locked": false,\
    "risk": "1.3318",\
    "mmr": "16.5949188975473644",\
    "base": {\
      "currency": "BTC",\
      "available": "0.047060413211",\
      "locked": "0",\
      "borrowed": "0.047233",\
      "interest": "0"\
    },\
    "quote": {\
      "currency": "USDT",\
      "available": "1234",\
      "locked": "0",\
      "borrowed": "0",\
      "interest": "0"\
    }\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot) Spot\
\
Spot trading\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-currency-information) Query all currency information\
\
`GET /spot/currencies`\
\
_Query all currency information_\
\
When a currency corresponds to multiple chains, you can query the information of multiple chains through the `chains` field, such as the charging and recharge status, identification, etc. of the chain\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » currency | string | Currency symbol |\
| » name | string | Currency name |\
| » delisted | boolean | Whether currency is de-listed |\
| » withdraw\_disabled | boolean | Whether withdrawal is suspended (deprecated) |\
| » withdraw\_delayed | boolean | Whether withdrawal has delay (deprecated) |\
| » deposit\_disabled | boolean | Whether deposit is suspended (deprecated) |\
| » trade\_disabled | boolean | Whether currency's trading is disabled |\
| » fixed\_rate | string | Fixed fee rate. Only for fixed rate currencies, not valid for normal currencies |\
| » chain | string | The main chain corresponding to the coin |\
| » is\_private | boolean | Is it a privacy currency? |\
| » chains | array | All links corresponding to coins |\
| »» SpotCurrencyChain | object | none |\
| »»» name | string | Blockchain name |\
| »»» addr | string | token address |\
| »»» withdraw\_disabled | boolean | Whether currency's withdrawal is disabled |\
| »»» withdraw\_delayed | boolean | Whether currency's withdrawal is delayed |\
| »»» deposit\_disabled | boolean | Whether currency's deposit is disabled |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "GT",\
    "name": "GateToken",\
    "delisted": false,\
    "withdraw_disabled": false,\
    "withdraw_delayed": false,\
    "deposit_disabled": false,\
    "trade_disabled": false,\
    "chain": "GT",\
    "chains": [\
      {\
        "name": "GT",\
        "addr": "",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false\
      },\
      {\
        "name": "ETH",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false,\
        "addr": "0xE66747a101bFF2dBA3697199DCcE5b743b454759"\
      },\
      {\
        "name": "GTEVM",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false,\
        "addr": ""\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-currency-information) Query single currency information\
\
`GET /spot/currencies/{currency}`\
\
_Query single currency information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency symbol |\
| » name | string | Currency name |\
| » delisted | boolean | Whether currency is de-listed |\
| » withdraw\_disabled | boolean | Whether withdrawal is suspended (deprecated) |\
| » withdraw\_delayed | boolean | Whether withdrawal has delay (deprecated) |\
| » deposit\_disabled | boolean | Whether deposit is suspended (deprecated) |\
| » trade\_disabled | boolean | Whether currency's trading is disabled |\
| » fixed\_rate | string | Fixed fee rate. Only for fixed rate currencies, not valid for normal currencies |\
| » chain | string | The main chain corresponding to the coin |\
| » is\_private | boolean | Is it a privacy currency? |\
| » chains | array | All links corresponding to coins |\
| »» SpotCurrencyChain | object | none |\
| »»» name | string | Blockchain name |\
| »»» addr | string | token address |\
| »»» withdraw\_disabled | boolean | Whether currency's withdrawal is disabled |\
| »»» withdraw\_delayed | boolean | Whether currency's withdrawal is delayed |\
| »»» deposit\_disabled | boolean | Whether currency's deposit is disabled |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currencies/GT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currencies/GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "GT",\
"name": "GateToken",\
"delisted": false,\
"withdraw_disabled": false,\
"withdraw_delayed": false,\
"deposit_disabled": false,\
"trade_disabled": false,\
"chain": "GT",\
"chains": [\
    {\
      "name": "GT",\
      "addr": "",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false\
    },\
    {\
      "name": "ETH",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false,\
      "addr": "0xE66747a101bFF2dBA3697199DCcE5b743b454759"\
    },\
    {\
      "name": "GTEVM",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false,\
      "addr": ""\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-supported-currency-pairs) Query all supported currency pairs\
\
`GET /spot/currency_pairs`\
\
_Query all supported currency pairs_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | All currency pairs retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Spot currency pair\] |\
| » _None_ | object | Spot currency pair |\
| »» id | string | Trading pair |\
| »» base | string | Base currency |\
| »» base\_name | string | Base currency name |\
| »» quote | string | Quote currency |\
| »» quote\_name | string | Quote currency name |\
| »» fee | string | Trading fee rate |\
| »» min\_base\_amount | string | Minimum amount of base currency to trade, `null` means no limit |\
| »» min\_quote\_amount | string | Minimum amount of quote currency to trade, `null` means no limit |\
| »» max\_base\_amount | string | Maximum amount of base currency to trade, `null` means no limit |\
| »» max\_quote\_amount | string | Maximum amount of quote currency to trade, `null` means no limit |\
| »» amount\_precision | integer | Amount scale |\
| »» precision | integer | Price scale |\
| »» trade\_status | string | Trading status<br>\- untradable: cannot be traded<br>\- buyable: can be bought<br>\- sellable: can be sold<br>\- tradable: can be bought and sold |\
| »» sell\_start | integer(int64) | Sell start unix timestamp in seconds |\
| »» buy\_start | integer(int64) | Buy start unix timestamp in seconds |\
| »» delisting\_time | integer(int64) | Expected time to remove the shelves, Unix timestamp in seconds |\
| »» type | string | Trading pair type, normal: normal, premarket: pre-market |\
| »» trade\_url | string | Transaction link |\
| »» st\_tag | boolean | Whether the trading pair is in ST risk assessment, false - No, true - Yes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-10) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| trade\_status | untradable |\
| trade\_status | buyable |\
| trade\_status | sellable |\
| trade\_status | tradable |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "ETH_USDT",\
    "base": "ETH",\
    "base_name": "Ethereum",\
    "quote": "USDT",\
    "quote_name": "Tether",\
    "fee": "0.2",\
    "min_base_amount": "0.001",\
    "min_quote_amount": "1.0",\
    "max_base_amount": "10000",\
    "max_quote_amount": "10000000",\
    "amount_precision": 3,\
    "precision": 6,\
    "trade_status": "tradable",\
    "sell_start": 1516378650,\
    "buy_start": 1516378650,\
    "delisting_time": 0,\
    "trade_url": "https://www.gate.io/trade/ETH_USDT",\
    "st_tag": false\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-currency-pair-details) Query single currency pair details\
\
`GET /spot/currency_pairs/{currency_pair}`\
\
_Query single currency pair details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | path | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot currency pair_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Trading pair |\
| » base | string | Base currency |\
| » base\_name | string | Base currency name |\
| » quote | string | Quote currency |\
| » quote\_name | string | Quote currency name |\
| » fee | string | Trading fee rate |\
| » min\_base\_amount | string | Minimum amount of base currency to trade, `null` means no limit |\
| » min\_quote\_amount | string | Minimum amount of quote currency to trade, `null` means no limit |\
| » max\_base\_amount | string | Maximum amount of base currency to trade, `null` means no limit |\
| » max\_quote\_amount | string | Maximum amount of quote currency to trade, `null` means no limit |\
| » amount\_precision | integer | Amount scale |\
| » precision | integer | Price scale |\
| » trade\_status | string | Trading status<br>\- untradable: cannot be traded<br>\- buyable: can be bought<br>\- sellable: can be sold<br>\- tradable: can be bought and sold |\
| » sell\_start | integer(int64) | Sell start unix timestamp in seconds |\
| » buy\_start | integer(int64) | Buy start unix timestamp in seconds |\
| » delisting\_time | integer(int64) | Expected time to remove the shelves, Unix timestamp in seconds |\
| » type | string | Trading pair type, normal: normal, premarket: pre-market |\
| » trade\_url | string | Transaction link |\
| » st\_tag | boolean | Whether the trading pair is in ST risk assessment, false - No, true - Yes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-11) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| trade\_status | untradable |\
| trade\_status | buyable |\
| trade\_status | sellable |\
| trade\_status | tradable |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currency_pairs/ETH_BTC'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currency_pairs/ETH_BTC \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "ETH_USDT",\
"base": "ETH",\
"base_name": "Ethereum",\
"quote": "USDT",\
"quote_name": "Tether",\
"fee": "0.2",\
"min_base_amount": "0.001",\
"min_quote_amount": "1.0",\
"max_base_amount": "10000",\
"max_quote_amount": "10000000",\
"amount_precision": 3,\
"precision": 6,\
"trade_status": "tradable",\
"sell_start": 1516378650,\
"buy_start": 1516378650,\
"delisting_time": 0,\
"trade_url": "https://www.gate.io/trade/ETH_USDT",\
"st_tag": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-currency-pair-ticker-information) Get currency pair ticker information\
\
`GET /spot/tickers`\
\
_Get currency pair ticker information_\
\
If `currency_pair` is specified, only query that currency pair; otherwise return all information\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| timezone | query | string | false | Timezone |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-12) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| timezone | utc0 |\
| timezone | utc8 |\
| timezone | all |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » last | string | Last trading price |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | Latest seller's lowest price quantity; not available for batch queries; available for single queries, empty if no data |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | Latest buyer's highest price quantity; not available for batch queries; available for single queries, empty if no data |\
| » change\_percentage | string | 24h price change percentage (negative for decrease, e.g., -7.45) |\
| » change\_utc0 | string | UTC+0 timezone, 24h price change percentage, negative for decline (e.g., -7.45) |\
| » change\_utc8 | string | UTC+8 timezone, 24h price change percentage, negative for decline (e.g., -7.45) |\
| » base\_volume | string | Base currency trading volume in the last 24h |\
| » quote\_volume | string | Quote currency trading volume in the last 24h |\
| » high\_24h | string | 24h High |\
| » low\_24h | string | 24h Low |\
| » etf\_net\_value | string | ETF net value |\
| » etf\_pre\_net\_value | string\|null | ETF net value at previous rebalancing point |\
| » etf\_pre\_timestamp | integer(int64)\|null | ETF previous rebalancing time |\
| » etf\_leverage | string\|null | ETF current leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC3L_USDT",\
    "last": "2.46140352",\
    "lowest_ask": "2.477",\
    "highest_bid": "2.4606821",\
    "change_percentage": "-8.91",\
    "change_utc0": "-8.91",\
    "change_utc8": "-8.91",\
    "base_volume": "656614.0845820589",\
    "quote_volume": "1602221.66468375534639404191",\
    "high_24h": "2.7431",\
    "low_24h": "1.9863",\
    "etf_net_value": "2.46316141",\
    "etf_pre_net_value": "2.43201848",\
    "etf_pre_timestamp": 1611244800,\
    "etf_leverage": "2.2803019447281203"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-market-depth-information) Get market depth information\
\
`GET /spot/order_book`\
\
_Get market depth information_\
\
Market depth buy orders are sorted by price from high to low, sell orders are sorted from low to high\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Return order book update ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order book ID, which is updated whenever the order book is changed. Valid only when `with_id` is set to `true` |\
| » current | integer(int64) | The timestamp of the response data being generated (in milliseconds) |\
| » update | integer(int64) | The timestamp of when the orderbook last changed (in milliseconds) |\
| » asks | array | Ask Depth |\
| »» _None_ | array | Price and Quantity Pair |\
| » bids | array | Bid Depth |\
| »» _None_ | array | Price and Quantity Pair |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/order_book'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993123,\
"update": 1623898993121,\
"asks": [\
    [\
      "1.52",\
      "1.151"\
    ],\
    [\
      "1.53",\
      "1.218"\
    ]\
],\
"bids": [\
    [\
      "1.17",\
      "201.863"\
    ],\
    [\
      "1.16",\
      "725.464"\
    ]\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-market-transaction-records) Query market transaction records\
\
`GET /spot/trades`\
\
_Query market transaction records_\
\
Supports querying by time range using `from` and `to` parameters or pagination based on `last_id`. By default, queries the last 30 days.\
\
Pagination based on `last_id` is no longer recommended. If `last_id` is specified, the time range query parameters will be ignored.\
\
When using limit&page pagination to retrieve data, the maximum number of pages is 100,000, that is, limit \* (page - 1) <= 100,000.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| limit | query | integer(int32) | false | Maximum number of items returned in list. Default: 100, minimum: 1, maximum: 1000 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| reverse | query | boolean | false | Whether to retrieve data less than `last_id`. Default returns records greater than `last_id`. |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| page | query | integer(int32) | false | Page number |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-10) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
**reverse**: Whether to retrieve data less than `last_id`. Default returns records greater than `last_id`.\
\
Set to `true` to trace back market trade records, `false` to get latest trades.\
\
No effect when `last_id` is not set.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | string | Fill ID |\
| » create\_time | string | Fill Time |\
| » create\_time\_ms | string | Trading time, with millisecond precision |\
| » currency\_pair | string | Currency pair |\
| » side | string | Buy or sell order |\
| » role | string | Trade role, not returned in public endpoints |\
| » amount | string | Trade amount |\
| » price | string | Order price |\
| » order\_id | string | Related order ID, not returned in public endpoints |\
| » fee | string | Fee deducted, not returned in public endpoints |\
| » fee\_currency | string | Fee currency unit, not returned in public endpoints |\
| » point\_fee | string | Points used to deduct fee, not returned in public endpoints |\
| » gt\_fee | string | GT used to deduct fee, not returned in public endpoints |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » sequence\_id | string | Consecutive trade ID within a single market.<br>Used to track and identify trades in the specific market |\
| » text | string | User-defined information, not returned in public endpoints |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-13) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | buy |\
| side | sell |\
| role | taker |\
| role | maker |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/trades'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/trades?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1232893232",\
    "create_time": "1548000000",\
    "create_time_ms": "1548000000123.456",\
    "order_id": "4128442423",\
    "side": "buy",\
    "role": "maker",\
    "amount": "0.15",\
    "price": "0.03",\
    "fee": "0.0005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "sequence_id": "588018",\
    "text": "t-test"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#market-k-line-chart) Market K-line chart\
\
`GET /spot/candlesticks`\
\
_Market K-line chart_\
\
Maximum of 1000 points can be returned in a query. Be sure not to exceed the limit when specifying from, to and interval\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| interval | query | string | false | Time interval between data points. Note that `30d` represents a calendar month, not aligned to 30 days |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-14) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1s |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
| interval | 30d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[\[string\]\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | array | Candlestick data for each time granularity, from left to right:<br>\- Unix timestamp with second precision<br>\- Trading volume in quote currency<br>\- Closing price<br>\- Highest price<br>\- Lowest price<br>\- Opening price<br>\- Trading volume in base currency<br>\- Whether window is closed; true means this candlestick data segment is complete, false means not yet complete |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/candlesticks'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/candlesticks?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
[\
    "1539852480",\
    "971519.677",\
    "0.0021724",\
    "0.0021922",\
    "0.0021724",\
    "0.0021737",\
    "true"\
]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-fee-rates) Query account fee rates\
\
`GET /spot/fee`\
\
_Query account fee rates_\
\
This API is deprecated. The new fee query API is `/wallet/fee`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify currency pair to get more accurate fee settings. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-11) Detailed descriptions\
\
**currency\_pair**: Specify currency pair to get more accurate fee settings.\
\
This field is optional. Usually fee settings are the same for all currency pairs.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » taker\_fee | string | taker fee rate |\
| » maker\_fee | string | maker fee rate |\
| » gt\_discount | boolean | Whether GT deduction discount is enabled |\
| » gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| » gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| » loan\_fee | string | Loan fee rate of margin lending |\
| » point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| » currency\_pair | string | Trading pair |\
| » debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user_id": 10001,\
"taker_fee": "0.002",\
"maker_fee": "0.002",\
"gt_discount": false,\
"gt_taker_fee": "0",\
"gt_maker_fee": "0",\
"loan_fee": "0.18",\
"point_type": "1",\
"currency_pair": "BTC_USDT",\
"debit_fee": 3\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-account-fee-rates) Batch query account fee rates\
\
`GET /spot/batch_fee`\
\
_Batch query account fee rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pairs | query | string | true | Maximum 50 currency pairs per request |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | object | none |\
| »» user\_id | integer(int64) | User ID |\
| »» taker\_fee | string | taker fee rate |\
| »» maker\_fee | string | maker fee rate |\
| »» gt\_discount | boolean | Whether GT deduction discount is enabled |\
| »» gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| »» gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| »» loan\_fee | string | Loan fee rate of margin lending |\
| »» point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| »» currency\_pair | string | Trading pair |\
| »» debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/batch_fee'\
query_param = 'currency_pairs=BTC_USDT,ETH_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/batch_fee"\
query_param="currency_pairs=BTC_USDT,ETH_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "BTC_USDT",\
    "debit_fee": 3\
},\
"GT_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "GT_USDT",\
    "debit_fee": 3\
},\
"ETH_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "ETH_USDT",\
    "debit_fee": 3\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-spot-trading-accounts) List spot trading accounts\
\
`GET /spot/accounts`\
\
_List spot trading accounts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » available | string | Available amount |\
| » locked | string | Locked amount, used in trading |\
| » update\_id | integer(int64) | Version number |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "ETH",\
    "available": "968.8",\
    "locked": "0",\
    "update_id": 98\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-spot-account-transaction-history) Query spot account transaction history\
\
`GET /spot/account_book`\
\
_Query spot account transaction history_\
\
Record query time range cannot exceed 30 days.\
\
When using limit&page pagination to retrieve data, the maximum number of pages is 100,000, that is, limit \* (page - 1) <= 100,000.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| type | query | string | false | Query by specified account change type. If not specified, all change types will be included. |\
| code | query | string | false | Specify account change code for query. If not specified, all change types are included. This parameter has higher priority than `type` |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Balance change record ID |\
| » time | integer(int64) | The timestamp of the change (in milliseconds) |\
| » currency | string | Currency changed |\
| » change | string | Amount changed. Positive value means transferring in, while negative out |\
| » balance | string | Balance after change |\
| » type | string | Account book type. Please refer to [account book type](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type) for more detail |\
| » code | string | Account change code, see \[Asset Record Code\] (Asset Record Code) |\
| » text | string | Additional information |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "123456",\
    "time": 1547633726123,\
    "currency": "BTC",\
    "change": "1.03",\
    "balance": "4.59316525194",\
    "type": "margin_in",\
    "text": "3815099"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-place-orders) Batch place orders\
\
`POST /spot/batch_orders`\
\
_Batch place orders_\
\
Batch order requirements:\
\
1. Custom order field `text` is required\
2. At most 4 trading pairs, maximum 10 orders each, are allowed in one request\
3. No mixture of spot orders and margin orders, i.e. `account` must be identical for all orders\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Batch order details\] |\
| » _None_ | object | Batch order details |\
| »» order\_id | string | Order ID |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» text | string | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:<br>1\. Must start with `t-`<br>2\. Excluding `t-`, length cannot exceed 28 bytes<br>3\. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.) |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» id | string | Order ID |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trade amount |\
| »» price | string | Order price |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevetion strategies<br>1\. After users join the `STP Group`, he can pass `stp_act` to limit the user's self-trade prevetion strategy. If `stp_act` is not passed, the default is `cn` strategy。<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter。<br>3\. If the user did not use 'stp\_act' when placing the order, 'stp\_act' will return '-'<br>\- cn: Cancel newest, Cancel new orders and keep old ones<br>\- co: Cancel oldest, new ones<br>\- cb: Cancel both, Both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-15) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| account | spot |\
| account | margin |\
| account | cross\_margin |\
| account | unified |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/batch_orders'\
query_param = ''\
body='[{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/batch_orders"\
query_param=""\
body_param='[{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "text": "t-abc123",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "12332324",\
    "amend_text": "t-123456",\
    "text": "t-123456",\
    "succeeded": true,\
    "label": "",\
    "message": "",\
    "id": "12332324",\
    "create_time": "1548000000",\
    "update_time": "1548000100",\
    "create_time_ms": 1548000000123,\
    "update_time_ms": 1548000100123,\
    "currency_pair": "ETC_BTC",\
    "status": "cancelled",\
    "type": "limit",\
    "account": "spot",\
    "side": "buy",\
    "amount": "1",\
    "price": "5.00032",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0.5",\
    "filled_amount": "1.242",\
    "filled_total": "2.50016",\
    "avg_deal_price": "5.00032",\
    "fee": "0.005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "BTC",\
    "stp_act": "cn",\
    "finish_as": "stp",\
    "stp_id": 10240\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-open-orders) List all open orders\
\
`GET /spot/open_orders`\
\
_List all open orders_\
\
Query the current order list of all trading pairs.\
Please note that the paging parameter controls the number of pending orders in each trading pair. There is no paging control trading pairs. All trading pairs with pending orders will be returned.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in one page in each currency pair |\
| account | query | string | false | Specify query account |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer | Total number of open orders for this trading pair on the current page |\
| » orders | array | none |\
| »» _None_ | object | Spot order details |\
| »»» id | string | Order ID |\
| »»» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »»» amend\_text | string | The custom data that the user remarked when amending the order |\
| »»» create\_time | string | Creation time of order |\
| »»» update\_time | string | Last modification time of order |\
| »»» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »»» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »»» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »»» currency\_pair | string | Currency pair |\
| »»» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »»» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »»» side | string | Buy or sell order |\
| »»» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »»» price | string | Trading price, required when `type` = `limit` |\
| »»» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »»» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »»» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »»» left | string | Amount left to fill |\
| »»» filled\_amount | string | Amount filled |\
| »»» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »»» filled\_total | string | Total filled in quote currency |\
| »»» avg\_deal\_price | string | Average fill price |\
| »»» fee | string | Fee deducted |\
| »»» fee\_currency | string | Fee currency unit |\
| »»» point\_fee | string | Points used to deduct fee |\
| »»» gt\_fee | string | GT used to deduct fee |\
| »»» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »»» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »»» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »»» rebated\_fee | string | Rebated fee |\
| »»» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »»» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »»» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »»» finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| »»» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-16) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/open_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/open_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "ETH_BTC",\
    "total": 1,\
    "orders": [\
      {\
        "id": "12332324",\
        "text": "t-123456",\
        "create_time": "1548000000",\
        "update_time": "1548000100",\
        "currency_pair": "ETH_BTC",\
        "status": "open",\
        "type": "limit",\
        "account": "spot",\
        "side": "buy",\
        "amount": "1",\
        "price": "5.00032",\
        "time_in_force": "gtc",\
        "left": "0.5",\
        "filled_total": "2.50016",\
        "fee": "0.005",\
        "fee_currency": "ETH",\
        "point_fee": "0",\
        "gt_fee": "0",\
        "gt_discount": false,\
        "rebated_fee": "0",\
        "rebated_fee_currency": "BTC"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#close-position-when-cross-currency-is-disabled) Close position when cross-currency is disabled\
\
`POST /spot/cross_liquidate_orders`\
\
_Close position when cross-currency is disabled_\
\
Currently, only cross-margin accounts are supported to place buy orders for disabled currencies.\
Maximum buy quantity = (unpaid principal and interest - currency balance - the amount of the currency in pending orders) / 0.998\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » text | body | string | false | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions: |\
| » currency\_pair | body | string | true | Currency pair |\
| » amount | body | string | true | Trade amount |\
| » price | body | string | true | Order price |\
| » action\_mode | body | string | false | Processing mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-12) Detailed descriptions\
\
**» text**: Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:\
\
1. Must start with `t-`\
2. Excluding `t-`, length cannot exceed 28 bytes\
3. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.)\
\
**» action\_mode**: Processing mode:\
\
Different fields are returned when placing an order based on action\_mode. This field is only valid during the request and is not included in the response\
`ACK`: Asynchronous mode, only returns key order fields\
`RESULT`: No liquidation information\
`FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-17) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/cross_liquidate_orders'\
query_param = ''\
body='{"currency_pair":"GT_USDT","amount":"12","price":"10.15","text":"t-34535"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/cross_liquidate_orders"\
query_param=""\
body_param='{"currency_pair":"GT_USDT","amount":"12","price":"10.15","text":"t-34535"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "GT_USDT",\
"amount": "12",\
"price": "10.15",\
"text": "t-34535"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-an-order) Create an order\
\
`POST /spot/orders`\
\
_Create an order_\
\
Supports spot, margin, leverage, and cross-margin leverage orders. Use different accounts through the `account` field. Default is `spot`, which means using the spot account to place orders. If the user has a `unified` account, the default is to place orders with the unified account.\
\
When using leveraged account trading (i.e., when `account` is set to `margin`), you can set `auto_borrow` to `true`.\
In case of insufficient account balance, the system will automatically execute `POST /margin/uni/loans` to borrow the insufficient amount.\
Whether assets obtained after leveraged order execution are automatically used to repay borrowing orders of the isolated margin account depends on the automatic repayment settings of the user's isolated margin account.\
Account automatic repayment settings can be queried and set through `/margin/auto_repay`.\
\
When using unified account trading (i.e., when `account` is set to `unified`), `auto_borrow` can also be enabled to realize automatic borrowing of insufficient amounts. However, unlike the isolated margin account, whether unified account orders are automatically repaid depends on the `auto_repay` setting when placing the order. This setting only applies to the current order, meaning only assets obtained after order execution will be used to repay borrowing orders of the cross-margin account.\
Unified account ordering currently supports enabling both `auto_borrow` and `auto_repay` simultaneously.\
\
Auto repayment will be triggered when the order ends, i.e., when `status` is `cancelled` or `closed`.\
\
**Order Status**\
\
The order status in pending orders is `open`, which remains `open` until all quantity is filled. If fully filled, the order ends and status becomes `closed`.\
If the order is cancelled before all transactions are completed, regardless of partial fills, the status will become `cancelled`.\
\
**Iceberg Orders**\
\
`iceberg` is used to set the displayed quantity of iceberg orders and does not support complete hiding. Note that hidden portions are charged according to the taker's fee rate.\
\
**Self-Trade Prevention**\
\
Set `stp_act` to determine the self-trade prevention strategy to use\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » text | body | string | false | User defined information. If not empty, must follow the rules below: |\
| » currency\_pair | body | string | true | Currency pair |\
| » type | body | string | false | Order Type |\
| » account | body | string | false | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | body | string | true | Buy or sell order |\
| » amount | body | string | true | Trading quantity |\
| » price | body | string | false | Trading price, required when `type` = `limit` |\
| » time\_in\_force | body | string | false | Time in force |\
| » iceberg | body | string | false | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_borrow | body | boolean | false | Used in margin or cross margin trading to allow automatic loan of insufficient amount if balance is not enough |\
| » auto\_repay | body | boolean | false | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that: |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
| » fee\_discount | body | string | false | Fee rate discount |\
| » action\_mode | body | string | false | Processing Mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-13) Detailed descriptions\
\
**» text**: User defined information. If not empty, must follow the rules below:\
\
1. prefixed with `t-`\
2. no longer than 28 bytes without `t-` prefix\
3. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
Besides user defined information, reserved contents are listed below, denoting how the order is created:\
\
- 101: from android\
- 102: from IOS\
- 103: from IPAD\
- 104: from webapp\
- 3: from web\
- 2: from apiv2\
- apiv4: from apiv4\
\
**» type**: Order Type\
\
- limit : Limit Order\
- market : Market Order\
\
**» amount**: Trading quantity\
When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`\
When `type` is `market`, it refers to different currencies based on the side:\
\
- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`\
- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC`\
\
**» time\_in\_force**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
Only `ioc` and `fok` are supported when `type` = `market`\
\
**» auto\_repay**: Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:\
\
1. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.\
2. `auto_borrow` and `auto_repay` can be both set to true in one order\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
**» action\_mode**: Processing Mode:\
When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result\
ACK: Asynchronous mode, only returns key order fields\
RESULT: No clearing information\
FULL: Full mode (default)\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-18) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | limit |\
| » type | market |\
| » side | buy |\
| » side | sell |\
| » time\_in\_force | gtc |\
| » time\_in\_force | ioc |\
| » time\_in\_force | poc |\
| » time\_in\_force | fok |\
| » stp\_act | cn |\
| » stp\_act | co |\
| » stp\_act | cb |\
| » stp\_act | - |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_borrow | boolean | Used in margin or cross margin trading to allow automatic loan of insufficient amount if balance is not enough |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
| » action\_mode | string | Processing Mode:<br>When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result<br>ACK: Asynchronous mode, only returns key order fields<br>RESULT: No clearing information<br>FULL: Full mode (default) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-19) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = ''\
body='{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/orders"\
query_param=""\
body_param='{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"text": "t-abc123",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0"\
}\
\
```\
\
> Example responses\
\
> ACK response body example\
\
```\
{\
"id": "12332324",\
"text": "t-123456",\
"amend_text": "test2"\
}\
\
```\
\
> RESULT response body example\
\
```\
{\
"id": "12332324",\
"text": "t-123456",\
"create_time": "1548000000",\
"update_time": "1548000100",\
"create_time_ms": 1548000000123,\
"update_time_ms": 1548000100123,\
"currency_pair": "ETH_BTC",\
"status": "cancelled",\
"type": "limit",\
"account": "spot",\
"side": "buy",\
"iceberg": "0",\
"amount": "1",\
"price": "5.00032",\
"time_in_force": "gtc",\
"auto_borrow": false,\
"left": "0.5",\
"filled_total": "2.50016",\
"avg_deal_price": "5.00032",\
"stp_act": "cn",\
"finish_as": "stp",\
"stp_id": 10240\
}\
\
```\
\
> FULL response body example\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-orders) List orders\
\
`GET /spot/orders`\
\
_List orders_\
\
`status` is set to `open`, that is, when querying the pending order list, only `page` and `limit` paging control are supported. `limit` The maximum setting is only 100.\
Does not support `side` and `from`, `to` parameters for querying by time range.\
\
`status` when querying historical orders, in addition to paging query, it also supports `from` and `to` query by time range.\
In addition, it also supports setting the `side` parameter to filter unilateral history.\
\
The parameters for time range filtering are all processed according to the **end** time of the order.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Query by specified currency pair. Required for open orders, optional for filled orders |\
| status | query | string | true | List orders based on status |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records to be returned. If `status` is `open`, maximum of `limit` is 100 |\
| account | query | string | false | Specify query account |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-14) Detailed descriptions\
\
**status**: List orders based on status\
\
`open` \- order is waiting to be filled\
`finished` \- order has been filled or cancelled\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Spot order details\] |\
| » _None_ | object | Spot order details |\
| »» id | string | Order ID |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »» price | string | Trading price, required when `type` = `limit` |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| »» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-20) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = 'currency_pair=BTC_USDT&status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/orders"\
query_param="currency_pair=BTC_USDT&status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1852454420",\
    "text": "t-abc123",\
    "amend_text": "-",\
    "create_time": "1710488334",\
    "update_time": "1710488334",\
    "create_time_ms": 1710488334073,\
    "update_time_ms": 1710488334074,\
    "status": "closed",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0",\
    "filled_amount": "0.001",\
    "fill_price": "63.4693",\
    "filled_total": "63.4693",\
    "avg_deal_price": "63469.3",\
    "fee": "0.00000022",\
    "fee_currency": "BTC",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_maker_fee": "0",\
    "gt_taker_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "USDT",\
    "finish_as": "filled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-open-orders-in-specified-currency-pair) Cancel all `open` orders in specified currency pair\
\
`DELETE /spot/orders`\
\
_Cancel all `open` orders in specified currency pair_\
\
When the `account` parameter is not specified, all pending orders including spot, unified account, and isolated margin will be cancelled.\
When `currency_pair` is not specified, all trading pair pending orders will be cancelled.\
You can specify a particular account to cancel all pending orders under that account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
| account | query | string | false | Specify account type |\
| action\_mode | query | string | false | Processing Mode |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-15) Detailed descriptions\
\
**account**: Specify account type\
\
Classic account: All are included if not specified\
Unified account: Specify `unified`\
\
**action\_mode**: Processing Mode\
\
When placing an order, different fields are returned based on the action\_mode\
\
- `ACK`: Asynchronous mode, returns only key order fields\
- `RESULT`: No clearing information\
- `FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Spot order details |\
| »» id | string | Order ID |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »» price | string | Trading price, required when `type` = `limit` |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
| »» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-21) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1852454420",\
    "text": "t-abc123",\
    "amend_text": "-",\
    "succeeded": true,\
    "create_time": "1710488334",\
    "update_time": "1710488334",\
    "create_time_ms": 1710488334073,\
    "update_time_ms": 1710488334074,\
    "status": "closed",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0",\
    "filled_amount": "0.001",\
    "fill_price": "63.4693",\
    "filled_total": "63.4693",\
    "avg_deal_price": "63469.3",\
    "fee": "0.00000022",\
    "fee_currency": "BTC",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_maker_fee": "0",\
    "gt_taker_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "USDT",\
    "finish_as": "filled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-batch-orders-by-specified-id-list) Cancel batch orders by specified ID list\
\
`POST /spot/cancel_batch_orders`\
\
_Cancel batch orders by specified ID list_\
\
Multiple currency pairs can be specified, but maximum 20 orders are allowed per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[object\] | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » CancelOrderResult | object | Order cancellation result |\
| »» currency\_pair | string | Order currency pair |\
| »» id | string | Order ID |\
| »» text | string | Custom order information |\
| »» succeeded | boolean | Whether cancellation succeeded |\
| »» label | string | Error label when failed to cancel the order; emtpy if succeeded |\
| »» message | string | Error description when cancellation fails, empty if successful |\
| »» account | string | Default is empty (deprecated) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/cancel_batch_orders'\
query_param = ''\
body='[{"currency_pair":"BTC_USDT","id":"123456"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/cancel_batch_orders"\
query_param=""\
body_param='[{"currency_pair":"BTC_USDT","id":"123456"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "id": "123456"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "id": "123456",\
    "text": "123456",\
    "succeeded": true,\
    "label": null,\
    "message": null\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details) Query single order details\
\
`GET /spot/orders/{order_id}`\
\
_Query single order details_\
\
By default, queries orders for spot, unified account, and isolated margin accounts.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | true | Specify the trading pair to query. This field is required when querying pending order records. This field can be omitted when querying filled order records. |\
| account | query | string | false | Specify query account |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-16) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Detail retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-22) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/orders/12345"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-single-order) Amend single order\
\
`PATCH /spot/orders/{order_id}`\
\
_Amend single order_\
\
Modify orders in spot, unified account and isolated margin account by default.\
\
Currently both request body and query support currency\_pair and account parameters, but request body has higher priority.\
\
currency\_pair must be filled in one of the request body or query parameters.\
\
About rate limit: Order modification and order creation share the same rate limit rules.\
\
About matching priority: Only reducing the quantity does not affect the matching priority. Modifying the price or increasing the quantity will adjust the priority to the end of the new price level.\
\
Note: Modifying the quantity to be less than the filled quantity will trigger a cancellation and isolated margin account by default.\
\
Currently both request body and query support currency\_pair and account parameters, but request body has higher priority.\
\
currency\_pair must be filled in one of the request body or query parameters.\
\
About rate limit: Order modification and order creation share the same rate limit rules.\
\
About matching priority: Only reducing the quantity does not affect the matching priority. Modifying the price or increasing the quantity will adjust the priority to the end of the new price level.\
\
Note: Modifying the quantity to be less than the filled quantity will trigger a cancellation operation.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | false | Trading pair |\
| account | query | string | false | Specify query account |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » currency\_pair | body | string | false | Trading pair |\
| » account | body | string | false | Specify query account |\
| » amount | body | string | false | Trading quantity. Either `amount` or `price` must be specified |\
| » price | body | string | false | Trading price. Either `amount` or `price` must be specified |\
| » amend\_text | body | string | false | Custom info during order amendment |\
| » action\_mode | body | string | false | Processing Mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-17) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
**» action\_mode**: Processing Mode:\
When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result\
ACK: Asynchronous mode, only returns key order fields\
RESULT: No clearing information\
FULL: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-23) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = ''\
body='{"currency_pair":"BTC_USDT","account":"spot","amount":"1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PATCH', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PATCH', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PATCH"\
url="/spot/orders/12345"\
query_param=""\
body_param='{"currency_pair":"BTC_USDT","account":"spot","amount":"1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "BTC_USDT",\
"account": "spot",\
"amount": "1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order) Cancel single order\
\
`DELETE /spot/orders/{order_id}`\
\
_Cancel single order_\
\
By default, orders for spot, unified accounts and leveraged accounts are revoked.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | true | Trading pair |\
| account | query | string | false | Specify query account |\
| action\_mode | query | string | false | Processing Mode |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-18) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
**action\_mode**: Processing Mode\
\
When placing an order, different fields are returned based on the action\_mode\
\
- `ACK`: Asynchronous mode, returns only key order fields\
- `RESULT`: No clearing information\
- `FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order cancelled | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-24) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/orders/12345"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records) Query personal trading records\
\
`GET /spot/my_trades`\
\
_Query personal trading records_\
\
By default query of transaction records for spot, unified account and warehouse-by-site leverage accounts.\
\
The history within a specified time range can be queried by specifying `from` or (and) `to`.\
\
- If no time parameters are specified, only data for the last 7 days can be obtained.\
- If only any parameter of `from` or `to` is specified, only 7-day data from the start (or end) of the specified time is returned.\
- The range not allowed to exceed 30 days.\
\
The parameters of the time range filter are processed according to the order end time.\
\
The maximum number of pages when searching data using limit&page paging function is 100,0, that is, limit \* (page - 1) <= 100,0.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Retrieve results with specified currency pair |\
| limit | query | integer | false | Maximum number of items returned in list. Default: 100, minimum: 1, maximum: 1000 |\
| page | query | integer(int32) | false | Page number |\
| order\_id | query | string | false | Filter trades with specified order ID. `currency_pair` is also required if this field is present |\
| account | query | string | false | The accountparameter has been deprecated. The interface supports querying all transaction records of the account. |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | string | Fill ID |\
| » create\_time | string | Fill Time |\
| » create\_time\_ms | string | Trading time, with millisecond precision |\
| » currency\_pair | string | Currency pair |\
| » side | string | Buy or sell order |\
| » role | string | Trade role, not returned in public endpoints |\
| » amount | string | Trade amount |\
| » price | string | Order price |\
| » order\_id | string | Related order ID, not returned in public endpoints |\
| » fee | string | Fee deducted, not returned in public endpoints |\
| » fee\_currency | string | Fee currency unit, not returned in public endpoints |\
| » point\_fee | string | Points used to deduct fee, not returned in public endpoints |\
| » gt\_fee | string | GT used to deduct fee, not returned in public endpoints |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » sequence\_id | string | Consecutive trade ID within a single market.<br>Used to track and identify trades in the specific market |\
| » text | string | User-defined information, not returned in public endpoints |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-25) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | buy |\
| side | sell |\
| role | taker |\
| role | maker |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1232893232",\
    "create_time": "1548000000",\
    "create_time_ms": "1548000000123.456",\
    "order_id": "4128442423",\
    "side": "buy",\
    "role": "maker",\
    "amount": "0.15",\
    "price": "0.03",\
    "fee": "0.0005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "sequence_id": "588018",\
    "text": "t-test"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-server-current-time) Get server current time\
\
`GET /spot/time`\
\
_Get server current time_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_SystemTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » server\_time | integer(int64) | Server current time(ms) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/time'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/time \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"server_time": 1597026383085\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders) Countdown cancel orders\
\
`POST /spot/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Spot order heartbeat detection. If there is no "cancel existing countdown" or "set new countdown" when the user-set `timeout` time is reached, the related `spot pending orders` will be automatically cancelled.\
This interface can be called repeatedly to set a new countdown or cancel the countdown.\
Usage example: Repeat this interface at 30s intervals, setting the countdown `timeout` to `30 (seconds)` each time.\
If this interface is not called again within 30 seconds, all pending orders on the `market` you specified will be automatically cancelled. If no `market` is specified, all market cancelled.\
If the `timeout` is set to 0 within 30 seconds, the countdown timer will be terminated and the automatic order cancellation function will be cancelled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » currency\_pair | body | string | false | Currency pair |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-19) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"currency_pair":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"currency_pair":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"currency_pair": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-modification-of-orders) Batch modification of orders\
\
`POST /spot/amend_batch_orders`\
\
_Batch modification of orders_\
\
Modify orders in spot, unified account and isolated margin account by default.\
Modify uncompleted orders, up to 5 orders can be modified at a time. Request parameters should be passed in array format.\
If there are order modification failures during the batch modification process, the modification of the next order will continue to be executed, and the execution will return with the corresponding order failure information.\
The call order of batch modification orders is consistent with the order list order.\
The return content order of batch modification orders is consistent with the order list order.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[object\] | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order modification executed successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Batch order details\] |\
| » _None_ | object | Batch order details |\
| »» order\_id | string | Order ID |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» text | string | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:<br>1\. Must start with `t-`<br>2\. Excluding `t-`, length cannot exceed 28 bytes<br>3\. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.) |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» id | string | Order ID |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trade amount |\
| »» price | string | Order price |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevetion strategies<br>1\. After users join the `STP Group`, he can pass `stp_act` to limit the user's self-trade prevetion strategy. If `stp_act` is not passed, the default is `cn` strategy。<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter。<br>3\. If the user did not use 'stp\_act' when placing the order, 'stp\_act' will return '-'<br>\- cn: Cancel newest, Cancel new orders and keep old ones<br>\- co: Cancel oldest, new ones<br>\- cb: Cancel both, Both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-26) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| account | spot |\
| account | margin |\
| account | cross\_margin |\
| account | unified |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/amend_batch_orders'\
query_param = ''\
body='[{"order_id":"121212","currency_pair":"BTC_USDT","account":"spot","amount":"1","amend_text":"test"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/amend_batch_orders"\
query_param=""\
body_param='[{"order_id":"121212","currency_pair":"BTC_USDT","account":"spot","amount":"1","amend_text":"test"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "order_id": "121212",\
    "currency_pair": "BTC_USDT",\
    "account": "spot",\
    "amount": "1",\
    "amend_text": "test"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "12332324",\
    "amend_text": "t-123456",\
    "text": "t-123456",\
    "succeeded": true,\
    "label": "",\
    "message": "",\
    "id": "12332324",\
    "create_time": "1548000000",\
    "update_time": "1548000100",\
    "create_time_ms": 1548000000123,\
    "update_time_ms": 1548000100123,\
    "currency_pair": "ETC_BTC",\
    "status": "cancelled",\
    "type": "limit",\
    "account": "spot",\
    "side": "buy",\
    "amount": "1",\
    "price": "5.00032",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0.5",\
    "filled_amount": "1.242",\
    "filled_total": "2.50016",\
    "avg_deal_price": "5.00032",\
    "fee": "0.005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "BTC",\
    "stp_act": "cn",\
    "finish_as": "stp",\
    "stp_id": 10240\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-spot-insurance-fund-historical-data) Query spot insurance fund historical data\
\
`GET /spot/insurance_history`\
\
_Query spot insurance fund historical data_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| business | query | string | true | Leverage business, margin - position by position; unified - unified account |\
| currency | query | string | true | Currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | The maximum number of items returned in the list, the default value is 30 |\
| from | query | integer(int64) | true | Start timestamp in seconds |\
| to | query | integer(int64) | true | End timestamp in seconds |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » balance | string | Balance |\
| » time | integer(int64) | Creation time, timestamp, milliseconds |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/insurance_history'\
query_param = 'business=margin&currency=BTC&from=1547706332&to=1547706332'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/insurance_history?business=margin&currency=BTC&from=1547706332&to=1547706332 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "balance": "1021.21",\
    "time": 1727054547\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order) Create price-triggered order\
\
`POST /spot/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) | true | none |\
| » trigger | body | object | true | none |\
| »» price | body | string | true | Trigger price |\
| »» rule | body | string | true | Price trigger condition |\
| »» expiration | body | integer | true | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » put | body | object | true | none |\
| »» type | body | string | false | Order type，default to `limit` |\
| »» side | body | string | true | Order side |\
| »» price | body | string | true | Order price |\
| »» amount | body | string | true | Trading quantity, refers to the trading quantity of the trading currency, i.e., the currency that needs to be traded, for example, the quantity of BTC in BTC\_USDT. |\
| »» account | body | string | true | Trading account type. Unified account must be set to `unified` |\
| »» time\_in\_force | body | string | false | time\_in\_force |\
| »» auto\_borrow | body | boolean | false | Whether to borrow coins automatically |\
| »» auto\_repay | body | boolean | false | Whether to repay the loan automatically |\
| »» text | body | string | false | The source of the order, including: |\
| » market | body | string | true | Market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-20) Detailed descriptions\
\
**»» rule**: Price trigger condition\
\
- `>=`: triggered when market price is greater than or equal to `price`\
- `<=`: triggered when market price is less than or equal to `price`\
\
**»» type**: Order type，default to `limit`\
\
- limit : Limit Order\
- market : Market Order\
\
**»» side**: Order side\
\
- buy: buy side\
- sell: sell side\
\
**»» account**: Trading account type. Unified account must be set to `unified`\
\
- normal: spot trading\
- margin: margin trading\
- unified: unified account\
\
**»» time\_in\_force**: time\_in\_force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-27) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» rule | >= |\
| »» rule | <= |\
| »» type | limit |\
| »» type | market |\
| »» side | buy |\
| »» side | sell |\
| »» account | normal |\
| »» account | margin |\
| »» account | unified |\
| »» time\_in\_force | gtc |\
| »» time\_in\_force | ioc |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = ''\
body='{"trigger":{"price":"100","rule":">=","expiration":3600},"put":{"type":"limit","side":"buy","price":"2.15","amount":"2.00000000","account":"normal","time_in_force":"gtc","text":"api"},"market":"GT_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/price_orders"\
query_param=""\
body_param='{"trigger":{"price":"100","rule":">=","expiration":3600},"put":{"type":"limit","side":"buy","price":"2.15","amount":"2.00000000","account":"normal","time_in_force":"gtc","text":"api"},"market":"GT_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"market": "GT_USDT"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-running-auto-order-list) Query running auto order list\
\
`GET /spot/price_orders`\
\
_Query running auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| market | query | string | false | Trading market |\
| account | query | string | false | Trading account type. Unified account must be set to `unified` |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-28) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| account | normal |\
| account | margin |\
| account | unified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trigger": {\
      "price": "100",\
      "rule": ">=",\
      "expiration": 3600\
    },\
    "put": {\
      "type": "limit",\
      "side": "buy",\
      "price": "2.15",\
      "amount": "2.00000000",\
      "account": "normal",\
      "time_in_force": "gtc",\
      "text": "api"\
    },\
    "id": 1283293,\
    "user": 1234,\
    "market": "GT_USDT",\
    "ctime": 1616397800,\
    "ftime": 1616397801,\
    "fired_order_id": 0,\
    "status": "",\
    "reason": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders) Cancel all auto orders\
\
`DELETE /spot/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| market | query | string | false | Trading market |\
| account | query | string | false | Trading account type. Unified account must be set to `unified` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-29) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| account | normal |\
| account | margin |\
| account | unified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/price_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trigger": {\
      "price": "100",\
      "rule": ">=",\
      "expiration": 3600\
    },\
    "put": {\
      "type": "limit",\
      "side": "buy",\
      "price": "2.15",\
      "amount": "2.00000000",\
      "account": "normal",\
      "time_in_force": "gtc",\
      "text": "api"\
    },\
    "id": 1283293,\
    "user": 1234,\
    "market": "GT_USDT",\
    "ctime": 1616397800,\
    "ftime": 1616397801,\
    "fired_order_id": 0,\
    "status": "",\
    "reason": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details) Query single auto order details\
\
`GET /spot/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"id": 1283293,\
"user": 1234,\
"market": "GT_USDT",\
"ctime": 1616397800,\
"ftime": 1616397801,\
"fired_order_id": 0,\
"status": "",\
"reason": ""\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order) Cancel single auto order\
\
`DELETE /spot/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"id": 1283293,\
"user": 1234,\
"market": "GT_USDT",\
"ctime": 1616397800,\
"ftime": 1616397801,\
"fired_order_id": 0,\
"status": "",\
"reason": ""\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#flash-swap) Flash\_swap\
\
Flash exchange\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-supported-currency-pairs-in-flash-swap) List All Supported Currency Pairs In Flash Swap\
\
`GET /flash_swap/currency_pairs`\
\
_List All Supported Currency Pairs In Flash Swap_\
\
`BTC_GT` represents selling BTC and buying GT. The limits for each currency may vary across different currency pairs.\
\
It is not necessary that two currencies that can be swapped instantaneously can be exchanged with each other. For example, it is possible to sell BTC and buy GT, but it does not necessarily mean that GT can be sold to buy BTC.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 1000, minimum: 1, maximum: 1000 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | List all supported currencies in flash swap |\
| »» currency\_pair | string | Currency pair, `BTC_USDT` represents selling `BTC` and buying `USDT` |\
| »» sell\_currency | string | Currency to sell |\
| »» buy\_currency | string | Currency to buy |\
| »» sell\_min\_amount | string | Minimum sell quantity |\
| »» sell\_max\_amount | string | Maximum sell quantity |\
| »» buy\_min\_amount | string | Minimum buy quantity |\
| »» buy\_max\_amount | string | Maximum buy quantity |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/flash_swap/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "sell_currency": "BTC",\
    "buy_currency": "USDT",\
    "sell_min_amount": "0.00001",\
    "sell_max_amount": "100",\
    "buy_min_amount": "10",\
    "buy_max_amount": "10000000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-a-flash-swap-order) Create a flash swap order\
\
`POST /flash_swap/orders`\
\
_Create a flash swap order_\
\
Initiate a flash swap preview in advance because order creation requires a preview result\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » preview\_id | body | string | true | Preview result ID |\
| » sell\_currency | body | string | true | Name of the asset to be sold, obtained from the interface GET /flash\_swap/currency\_pairs: Query the list of all trading pairs supporting flash swap |\
| » sell\_amount | body | string | true | Amount to sell (based on the preview result) |\
| » buy\_currency | body | string | true | Name of the asset to be bought, obtained from the interface GET /flash\_swap/currency\_pairs: Query the list of all trading pairs supporting flash swap |\
| » buy\_amount | body | string | true | Amount to buy (based on the preview result) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Flash swap order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Flash swap order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Flash swap order ID |\
| » create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| » user\_id | integer(int64) | User ID |\
| » sell\_currency | string | Currency to sell |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Currency to buy |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
| » status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders'\
query_param = ''\
body='{"preview_id":"4564564","sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT","buy_amount":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/flash_swap/orders"\
query_param=""\
body_param='{"preview_id":"4564564","sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT","buy_amount":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"preview_id": "4564564",\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT",\
"buy_amount": "10"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 54646,\
"create_time": 1651116876378,\
"update_time": 1651116876378,\
"user_id": 11135567,\
"sell_currency": "BTC",\
"sell_amount": "0.01",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100",\
"status": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-flash-swap-order-list) Query flash swap order list\
\
`GET /flash_swap/orders`\
\
_Query flash swap order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | integer | false | Flash swap order status |\
| sell\_currency | query | string | false | Asset name to sell |\
| buy\_currency | query | string | false | Asset name to buy |\
| reverse | query | boolean | false | Sort by ID in ascending or descending order, default `true` |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| page | query | integer(int32) | false | Page number |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-21) Detailed descriptions\
\
**status**: Flash swap order status\
\
`1` \- success\
`2` \- failed\
\
**sell\_currency**: Asset name to sell\
\
- Retrieved from API `GET /flash_swap/currencies` for supported flash swap currencies\
\
**buy\_currency**: Asset name to buy\
\
- Retrieved from API `GET /flash_swap/currencies` for supported flash swap currencies\
\
**reverse**: Sort by ID in ascending or descending order, default `true`\
\
- `true`: ID descending order (most recent data first)\
- `false`: ID ascending order (oldest data first)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Flash swap order\] |\
| » _None_ | object | Flash swap order |\
| »» id | integer(int64) | Flash swap order ID |\
| »» create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| »» user\_id | integer(int64) | User ID |\
| »» sell\_currency | string | Currency to sell |\
| »» sell\_amount | string | Amount to sell |\
| »» buy\_currency | string | Currency to buy |\
| »» buy\_amount | string | Amount to buy |\
| »» price | string | Price |\
| »» status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/flash_swap/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 54646,\
    "create_time": 1651116876378,\
    "update_time": 1651116876378,\
    "user_id": 11135567,\
    "sell_currency": "BTC",\
    "sell_amount": "0.01",\
    "buy_currency": "USDT",\
    "buy_amount": "10",\
    "price": "100",\
    "status": 1\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-flash-swap-order) Query single flash swap order\
\
`GET /flash_swap/orders/{order_id}`\
\
_Query single flash swap order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer | true | Flash swap order ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Flash swap order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Flash swap order ID |\
| » create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| » user\_id | integer(int64) | User ID |\
| » sell\_currency | string | Currency to sell |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Currency to buy |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
| » status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders/1'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/flash_swap/orders/1"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 54646,\
"create_time": 1651116876378,\
"update_time": 1651116876378,\
"user_id": 11135567,\
"sell_currency": "BTC",\
"sell_amount": "0.01",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100",\
"status": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#flash-swap-order-preview) Flash swap order preview\
\
`POST /flash_swap/orders/preview`\
\
_Flash swap order preview_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » sell\_currency | body | string | true | The name of the asset being sold, as obtained from the "GET /flash\_swap/currency\_pairs" API, which retrieves a list of supported flash swap currency pairs |\
| » sell\_amount | body | string | false | Amount to sell. |\
| » buy\_currency | body | string | true | The name of the asset being purchased, as obtained from the "GET /flash\_swap/currency\_pairs" API, which provides a list of supported flash swap currency pairs |\
| » buy\_amount | body | string | false | Amount to buy. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-22) Detailed descriptions\
\
**» sell\_amount**: Amount to sell.\
It is required to choose one parameter between `sell_amount` and `buy_amount`\
\
**» buy\_amount**: Amount to buy.\
It is required to choose one parameter between `sell_amount` and `buy_amount`\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Flash swap order preview successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Flash swap order preview_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » preview\_id | string | Preview result ID |\
| » sell\_currency | string | Name of the sold asset,<br> Refer to the interface Query the list of currencies supported for flash swap GET /flash\_swap/currenciesto obtain |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Name of the purchased asset,<br> Refer to the interface Query the list of currencies supported for flash swap GET /flash\_swap/currenciesto obtain |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders/preview'\
query_param = ''\
body='{"sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/flash_swap/orders/preview"\
query_param=""\
body_param='{"sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"preview_id": "3453434",\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures) Futures\
\
Perpetual futures\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-futures-contracts) Query all futures contracts\
\
`GET /futures/{settle}/contracts`\
\
_Query all futures contracts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-30) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Contract](https://www.gate.com/docs/developers/apiv4/en/#schemacontract)\] |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contracts'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contracts \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT",\
    "type": "direct",\
    "quanto_multiplier": "0.0001",\
    "ref_discount_rate": "0",\
    "order_price_deviate": "0.5",\
    "maintenance_rate": "0.005",\
    "mark_type": "index",\
    "last_price": "38026",\
    "mark_price": "37985.6",\
    "index_price": "37954.92",\
    "funding_rate_indicative": "0.000219",\
    "mark_price_round": "0.01",\
    "funding_offset": 0,\
    "in_delisting": false,\
    "risk_limit_base": "1000000",\
    "interest_rate": "0.0003",\
    "order_price_round": "0.1",\
    "order_size_min": 1,\
    "ref_rebate_rate": "0.2",\
    "funding_interval": 28800,\
    "risk_limit_step": "1000000",\
    "leverage_min": "1",\
    "leverage_max": "100",\
    "risk_limit_max": "8000000",\
    "maker_fee_rate": "-0.00025",\
    "taker_fee_rate": "0.00075",\
    "funding_rate": "0.002053",\
    "order_size_max": 1000000,\
    "funding_next_apply": 1610035200,\
    "short_users": 977,\
    "config_change_time": 1609899548,\
    "trade_size": 28530850594,\
    "position_size": 5223816,\
    "long_users": 455,\
    "funding_impact_value": "60000",\
    "orders_limit": 50,\
    "trade_id": 10851092,\
    "orderbook_id": 2129638396,\
    "enable_bonus": true,\
    "enable_credit": true,\
    "create_time": 1669688556,\
    "funding_cap_ratio": "0.75",\
    "status": "trading",\
    "launch_time": 1609899548,\
    "delisting_time": 1609899548,\
    "delisted_time": 1609899548\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-contract-information) Query single contract information\
\
`GET /futures/{settle}/contracts/{contract}`\
\
_Query single contract information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-31) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Contract information | [Contract](https://www.gate.com/docs/developers/apiv4/en/#schemacontract) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contracts/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contracts/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT",\
"type": "direct",\
"quanto_multiplier": "0.0001",\
"ref_discount_rate": "0",\
"order_price_deviate": "0.5",\
"maintenance_rate": "0.005",\
"mark_type": "index",\
"last_price": "38026",\
"mark_price": "37985.6",\
"index_price": "37954.92",\
"funding_rate_indicative": "0.000219",\
"mark_price_round": "0.01",\
"funding_offset": 0,\
"in_delisting": false,\
"risk_limit_base": "1000000",\
"interest_rate": "0.0003",\
"order_price_round": "0.1",\
"order_size_min": 1,\
"ref_rebate_rate": "0.2",\
"funding_interval": 28800,\
"risk_limit_step": "1000000",\
"leverage_min": "1",\
"leverage_max": "100",\
"risk_limit_max": "8000000",\
"maker_fee_rate": "-0.00025",\
"taker_fee_rate": "0.00075",\
"funding_rate": "0.002053",\
"order_size_max": 1000000,\
"funding_next_apply": 1610035200,\
"short_users": 977,\
"config_change_time": 1609899548,\
"trade_size": 28530850594,\
"position_size": 5223816,\
"long_users": 455,\
"funding_impact_value": "60000",\
"orders_limit": 50,\
"trade_id": 10851092,\
"orderbook_id": 2129638396,\
"enable_bonus": true,\
"enable_credit": true,\
"create_time": 1669688556,\
"funding_cap_ratio": "0.75",\
"status": "trading",\
"launch_time": 1609899548,\
"delisting_time": 1609899548,\
"delisted_time": 1609899548\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-depth-information) Query futures market depth information\
\
`GET /futures/{settle}/order_book`\
\
_Query futures market depth information_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-32) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/order_book'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/order_book?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-transaction-records) Futures market transaction records\
\
`GET /futures/{settle}/trades`\
\
_Futures market transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list.This field is no longer supported. For new requests, please use the fromand tofields to specify the time rang |\
| from | query | integer(int64) | false | Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items. |\
| to | query | integer(int64) | false | Specify end time in Unix seconds, default to current time. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-23) Detailed descriptions\
\
**from**: Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items.\
If items between `from` and `to` are more than `limit`, only `limit` number will be returned.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-33) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/trades'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/trades?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-k-line-chart) Futures market K-line chart\
\
`GET /futures/{settle}/candlesticks`\
\
_Futures market K-line chart_\
\
Return specified contract candlesticks.\
If prefix `contract` with `mark_`, the contract's mark price candlesticks are returned;\
if prefix with `index_`, index price candlesticks will be returned.\
\
Maximum of 2000 points are returned in one query. Be sure not to exceed the limit when specifying `from`, `to` and `interval`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Interval time between data points. Note that `1w` means natural week(Mon-Sun), while `7d` means every 7d since unix 0. 30d represents a natural month, not 30 days |\
| timezone | query | string | false | Time zone: all/utc0/utc8, default utc0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-34) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[data point in every timestamp\] |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
| »» sum | string | Trading volume (unit: Quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/candlesticks'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/candlesticks?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032",\
    "sum": "3580"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#premium-index-k-line-chart) Premium Index K-line chart\
\
`GET /futures/{settle}/premium_index`\
\
_Premium Index K-line chart_\
\
Maximum of 1000 points can be returned in a query. Be sure not to exceed the limit when specifying from, to and interval\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-35) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» c | string | Close price |\
| »» h | string | Highest price |\
| »» l | string | Lowest price |\
| »» o | string | Open price |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/premium_index'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/premium_index?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "c": "0",\
    "h": "0.00023",\
    "l": "0",\
    "o": "0"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-all-futures-trading-statistics) Get all futures trading statistics\
\
`GET /futures/{settle}/tickers`\
\
_Get all futures trading statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-36) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » contract | string | Futures contract |\
| » last | string | Last trading price |\
| » change\_percentage | string | Price change percentage. Negative values indicate price decrease, e.g. -7.45 |\
| » total\_size | string | Contract total size |\
| » low\_24h | string | 24-hour lowest price |\
| » high\_24h | string | 24-hour highest price |\
| » volume\_24h | string | 24-hour trading volume |\
| » volume\_24h\_btc | string | 24-hour trading volume in BTC (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_usd | string | 24-hour trading volume in USD (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_base | string | 24-hour trading volume in base currency |\
| » volume\_24h\_quote | string | 24-hour trading volume in quote currency |\
| » volume\_24h\_settle | string | 24-hour trading volume in settle currency |\
| » mark\_price | string | Recent mark price |\
| » funding\_rate | string | Funding rate |\
| » funding\_rate\_indicative | string | Indicative Funding rate in next period. (deprecated. use `funding_rate`) |\
| » index\_price | string | Index price |\
| » quanto\_base\_rate | string | Exchange rate of base currency and settlement currency in Quanto contract. Does not exists in contracts of other types |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | The latest seller's lowest price order quantity |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | The latest buyer's highest price order volume |\
| » change\_utc0 | string | Percentage change at utc0. Negative values indicate a drop, e.g., -7.45% |\
| » change\_utc8 | string | Percentage change at utc8. Negative values indicate a drop, e.g., -7.45% |\
| » change\_price | string | 24h change amount. Negative values indicate a drop, e.g., -7.45 |\
| » change\_utc0\_price | string | Change amount at utc0. Negative values indicate a drop, e.g., -7.45 |\
| » change\_utc8\_price | string | Change amount at utc8. Negative values indicate a drop, e.g., -7.45 |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "last": "6432",\
    "low_24h": "6278",\
    "high_24h": "6790",\
    "change_percentage": "4.43",\
    "total_size": "32323904",\
    "volume_24h": "184040233284",\
    "volume_24h_btc": "28613220",\
    "volume_24h_usd": "184040233284",\
    "volume_24h_base": "28613220",\
    "volume_24h_quote": "184040233284",\
    "volume_24h_settle": "28613220",\
    "mark_price": "6534",\
    "funding_rate": "0.0001",\
    "funding_rate_indicative": "0.0001",\
    "index_price": "6531",\
    "highest_bid": "34089.7",\
    "highest_size": "100",\
    "lowest_ask": "34217.9",\
    "lowest_size": "1000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-historical-funding-rate) Futures market historical funding rate\
\
`GET /futures/{settle}/funding_rate`\
\
_Futures market historical funding rate_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-24) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-37) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | History query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » r | string | Funding rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/funding_rate'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/funding_rate?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "r": "0.000157"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-insurance-fund-history) Futures market insurance fund history\
\
`GET /futures/{settle}/insurance`\
\
_Futures market insurance fund history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-38) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » b | string | Insurance balance |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/insurance'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/insurance \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "b": "83.0031"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-statistics) Futures statistics\
\
`GET /futures/{settle}/contract_stats`\
\
_Futures statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start timestamp |\
| interval | query | string | false | none |\
| limit | query | integer | false | none |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-39) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Stat timestamp |\
| » lsr\_taker | number | Long/short taker ratio |\
| » lsr\_account | number | Long/short position user ratio |\
| » long\_liq\_size | integer(int64) | Long liquidation size (contracts) |\
| » long\_liq\_amount | number(double) | Long liquidation amount (base currency) |\
| » long\_liq\_usd | number(double) | Long liquidation volume (quote currency) |\
| » short\_liq\_size | integer(int64) | Short liquidation size (contracts) |\
| » short\_liq\_amount | number(double) | Short liquidation amount (base currency) |\
| » short\_liq\_usd | number(double) | Short liquidation volume (quote currency) |\
| » open\_interest | integer(int64) | Total open interest size (contracts) |\
| » open\_interest\_usd | number(double) | Total open interest volume (quote currency) |\
| » top\_lsr\_account | number(double) | Top trader long/short account ratio |\
| » top\_lsr\_size | number(double) | Top trader long/short position ratio |\
| » mark\_price | number(double) | Mark price |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contract_stats'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contract_stats?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1603865400,\
    "lsr_taker": 100,\
    "lsr_account": 0.5,\
    "long_liq_size": 0,\
    "short_liq_size": 0,\
    "open_interest": 124724,\
    "short_liq_usd": 0,\
    "mark_price": "8865",\
    "top_lsr_size": 1.02,\
    "short_liq_amount": 0,\
    "long_liq_amount": 0,\
    "open_interest_usd": 1511,\
    "top_lsr_account": 1.5,\
    "long_liq_usd": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-index-constituents) Query index constituents\
\
`GET /futures/{settle}/index_constituents/{index}`\
\
_Query index constituents_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| index | path | string | true | Index name |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-40) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » index | string | Index name |\
| » constituents | array | Constituents |\
| »» IndexConstituent | object | none |\
| »»» exchange | string | Exchange |\
| »»» symbols | array | Symbol list |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/index_constituents/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/index_constituents/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"index": "BTC_USDT",\
"constituents": [\
    {\
      "exchange": "Binance",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    },\
    {\
      "exchange": "Gate.com",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    },\
    {\
      "exchange": "Huobi",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-order-history) Query liquidation order history\
\
`GET /futures/{settle}/liq_orders`\
\
_Query liquidation order history_\
\
The time interval between from and to is maximum 3600. Some private fields are not returned by public interfaces, refer to field descriptions for details\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-25) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-41) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » size | integer(int64) | User position size |\
| » order\_size | integer(int64) | Number of forced liquidation orders |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | System liquidation order maker size |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/liq_orders'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/liq_orders \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "order_size": -600,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-tiers) Query risk limit tiers\
\
`GET /futures/{settle}/risk_limit_tiers`\
\
_Query risk limit tiers_\
\
When the 'contract' parameter is not passed, the default is to query the risk limits for the top 100 markets. 'Limit' and 'offset' correspond to pagination queries at the market level, not to the length of the returned array. This only takes effect when the contract parameter is empty.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-42) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Retrieve risk limit configurations for different tiers under a specified contract\] |\
| » _None_ | object | Retrieve risk limit configurations for different tiers under a specified contract |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» contract | string | Market, only visible when market pagination is requested |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/risk_limit_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/risk_limit_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "maintenance_rate": "0.01",\
    "tier": 1,\
    "initial_rate": "0.02",\
    "leverage_max": "50",\
    "risk_limit": "20000",\
    "contract": "ZTX_USDT",\
    "deduction": "0"\
},\
{\
    "maintenance_rate": "0.013",\
    "tier": 2,\
    "initial_rate": "0.025",\
    "leverage_max": "40",\
    "risk_limit": "30000",\
    "contract": "ZTX_USDT",\
    "deduction": "60"\
},\
{\
    "maintenance_rate": "0.015",\
    "tier": 3,\
    "initial_rate": "0.02857",\
    "leverage_max": "35",\
    "risk_limit": "50000",\
    "contract": "ZTX_USDT",\
    "deduction": "120"\
},\
{\
    "maintenance_rate": "0.02",\
    "tier": 4,\
    "initial_rate": "0.03333",\
    "leverage_max": "30",\
    "risk_limit": "70000",\
    "contract": "ZTX_USDT",\
    "deduction": "370"\
},\
{\
    "maintenance_rate": "0.025",\
    "tier": 5,\
    "initial_rate": "0.04",\
    "leverage_max": "25",\
    "risk_limit": "100000",\
    "contract": "ZTX_USDT",\
    "deduction": "720"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-futures-account) Get futures account\
\
`GET /futures/{settle}/accounts`\
\
_Get futures account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-43) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-account-change-history) Query futures account change history\
\
`GET /futures/{settle}/account_book`\
\
_Query futures account change history_\
\
If the contract field is passed, only records containing this field after 2023-10-30 can be filtered.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-26) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit and withdrawal\
- pnl: Profit and loss from position reduction\
- fee: Trading fees\
- refr: Referrer rebates\
- fund: Funding fees\
- point\_dnw: Point card deposit and withdrawal\
- point\_fee: Point card trading fees\
- point\_refr: Point card referrer rebates\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-44) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Change time |\
| » change | string | Change amount |\
| » balance | string | Balance after change |\
| » type | string | Change types:<br>\- dnw: Deposit and withdrawal<br>\- pnl: Profit and loss from position reduction<br>\- fee: Trading fees<br>\- refr: Referrer rebates<br>\- fund: Funding fees<br>\- point\_dnw: Point card deposit and withdrawal<br>\- point\_fee: Point card trading fees<br>\- point\_refr: Point card referrer rebates<br>\- bonus\_offset: Trial fund deduction |\
| » text | string | Comment |\
| » contract | string | Futures contract, the field is only available for data after 2023-10-30 |\
| » trade\_id | string | trade id |\
| » id | string | Account change record ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-45) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
| type | bonus\_offset |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1682294400.123456,\
    "change": "0.000010152188",\
    "balance": "4.59316525194",\
    "text": "ETH_USD:6086261",\
    "type": "fee",\
    "contract": "ETH_USD",\
    "trade_id": "1",\
    "id": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-position-list) Get user position list\
\
`GET /futures/{settle}/positions`\
\
_Get user position list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| holding | query | boolean | false | Return only real positions - true, return all - false |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-46) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-single-position-information) Get single position information\
\
`GET /futures/{settle}/positions/{contract}`\
\
_Get single position information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-47) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/positions/BTC_USDT"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin) Update position margin\
\
`POST /futures/{settle}/positions/{contract}/margin`\
\
_Update position margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-48) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/margin'\
query_param = 'change=0.01'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/margin"\
query_param="change=0.01"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage) Update position leverage\
\
`POST /futures/{settle}/positions/{contract}/leverage`\
\
_Update position leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
| cross\_leverage\_limit | query | string | false | Cross margin leverage (valid only when `leverage` is 0) |\
| pid | query | integer(int32) | false | Product ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-49) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#switch-position-margin-mode) Switch Position Margin Mode\
\
`POST /futures/{settle}/positions/cross_mode`\
\
_Switch Position Margin Mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| body | body | object | true | none |\
| » mode | body | string | true | Cross margin or isolated margin mode. ISOLATED - isolated margin mode, CROSS - cross margin mode |\
| » contract | body | string | true | Futures market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-50) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/cross_mode'\
query_param = ''\
body='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/cross_mode"\
query_param=""\
body_param='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"mode": "ISOLATED",\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#switch-between-cross-and-isolated-margin-modes-under-hedge-mode) Switch Between Cross and Isolated Margin Modes Under Hedge Mode\
\
`POST /futures/{settle}/dual_comp/positions/cross_mode`\
\
_Switch Between Cross and Isolated Margin Modes Under Hedge Mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| body | body | object | true | none |\
| » mode | body | string | true | Cross margin or isolated margin mode. ISOLATED - isolated margin mode, CROSS - cross margin mode |\
| » contract | body | string | true | Futures market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-51) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/cross_mode'\
query_param = ''\
body='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/cross_mode"\
query_param=""\
body_param='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"mode": "ISOLATED",\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit) Update position risk limit\
\
`POST /futures/{settle}/positions/{contract}/risk_limit`\
\
_Update position risk limit_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New risk limit value |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-52) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/risk_limit'\
query_param = 'risk_limit=1000000'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/risk_limit"\
query_param="risk_limit=1000000"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-position-mode) Set position mode\
\
`POST /futures/{settle}/dual_mode`\
\
_Set position mode_\
\
The prerequisite for changing mode is that all positions have no holdings and no pending orders\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| dual\_mode | query | boolean | true | Whether to enable dual mode |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-53) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_mode'\
query_param = 'dual_mode=true'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_mode"\
query_param="dual_mode=true"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-position-information-in-dual-mode) Get position information in dual mode\
\
`GET /futures/{settle}/dual_comp/positions/{contract}`\
\
_Get position information in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-54) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/dual_comp/positions/BTC_USDT"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin-in-dual-mode) Update position margin in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/margin`\
\
_Update position margin in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
| dual\_side | query | string | true | Long or short position |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-55) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/margin'\
query_param = 'change=0.01&dual_side=dual_long'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/margin"\
query_param="change=0.01&dual_side=dual_long"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage-in-dual-mode) Update position leverage in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/leverage`\
\
_Update position leverage in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
| cross\_leverage\_limit | query | string | false | Cross margin leverage (valid only when `leverage` is 0) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-56) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit-in-dual-mode) Update position risk limit in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/risk_limit`\
\
_Update position risk limit in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New risk limit value |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-57) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/risk_limit'\
query_param = 'risk_limit=1000000'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/risk_limit"\
query_param="risk_limit=1000000"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-futures-order) Place futures order\
\
`POST /futures/{settle}/orders`\
\
_Place futures order_\
\
- When placing an order, the number of contracts is specified `size`, not the number of coins. The number of coins corresponding to each contract is returned in the contract details interface\
`quanto_multiplier`\
- 0 The order that was completed cannot be obtained after 10 minutes of withdrawal, and the order will be mentioned that the order does not exist\
- Setting `reduce_only` to `true` can prevent the position from being penetrated when reducing the position\
- In single-position mode, if you need to close the position, you need to set `size` to 0 and `close` to `true`\
- In dual warehouse mode,\
- Reduce position: reduce\_only=true, size is a positive number that indicates short position, negative number that indicates long position\
- Add number that indicates adding long positions, and negative numbers indicate adding short positions\
- Close position: size=0, set the direction of closing position according to auto\_size, and set `reduce_only` to true\
at the same time - reduce\_only: Make sure to only perform position reduction operations to prevent increased positions\
- Set `stp_act` to determine the use of a strategy that restricts user transactions. For detailed usage, refer to the body parameter `stp_act`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) | true | none |\
| » contract | body | string | true | Futures contract |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » tif | body | string | false | Time in force |\
| » text | body | string | false | Custom order information. If not empty, must follow the rules below: |\
| » auto\_size | body | string | false | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
\
\|» limit\_vip\|body\|integer(int64)\|false\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|» pid\|body\|integer(int64)\|false\|Position ID\|\
\|settle\|path\|string\|true\|Settle currency\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-27) Detailed descriptions\
\
**» tif**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
\
**» text**: Custom order information. If not empty, must follow the rules below:\
\
1. Prefixed with `t-`\
2. No longer than 28 bytes without `t-` prefix\
3. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
In addition to user-defined information, the following are internal reserved fields that identify the order source:\
\
- web: Web\
- api: API call\
- app: Mobile app\
- auto\_deleveraging: Automatic deleveraging\
- liquidation: Forced liquidation of positions under the old classic mode\
- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode\
- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions\
- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode\
- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode\
- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode\
- insurance: Insurance\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-58) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
| » tif | fok |\
| » auto\_size | close\_long |\
| » auto\_size | close\_short |\
| » stp\_act | co |\
| » stp\_act | cn |\
| » stp\_act | cb |\
| » stp\_act | - |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = ''\
body='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/orders"\
query_param=""\
body_param='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"contract": "BTC_USDT",\
"size": 6024,\
"iceberg": 0,\
"price": "3765",\
"tif": "gtc",\
"text": "t-my-custom-id",\
"stp_act": "-"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list) Query futures order list\
\
`GET /futures/{settle}/orders`\
\
_Query futures order list_\
\
- Zero-fill order cannot be retrieved for 10 minutes after cancellation\
- Historical orders, by default, only data within the past 6 months is supported.\
If you need to query data for a longer period, please use `GET /futures/{settle}/orders_timerange`.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-28) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-59) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status) Cancel all orders with 'open' status\
\
`DELETE /futures/{settle}/orders`\
\
_Cancel all orders with 'open' status_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| contract | query | string | true | Futures contract |\
| side | query | string | false | Specify all buy orders or all sell orders, both are included if not specified. Set to bid to cancel all buy orders, set to ask to cancel all sell orders |\
| exclude\_reduce\_only | query | boolean | false | Whether to exclude reduce-only orders |\
| text | query | string | false | Remark for order cancellation |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-60) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = 'contract=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/orders"\
query_param="contract=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list-by-time-range) Query futures order list by time range\
\
`GET /futures/{settle}/orders_timerange`\
\
_Query futures order list by time range_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-29) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-61) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-2) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders_timerange'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders_timerange"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-batch-futures-orders) Place batch futures orders\
\
`POST /futures/{settle}/batch_orders`\
\
_Place batch futures orders_\
\
- Up to 10 orders per request\
- If any of the order's parameters are missing or in the wrong format, all of them will not be executed, and a http status 400 error will be returned directly\
- If the parameters are checked and passed, all are executed. Even if there is a business logic error in the middle (such as insufficient funds), it will not affect other execution orders\
- The returned result is in array format, and the order corresponds to the orders in the request body\
- In the returned result, the `succeeded` field of type bool indicates whether the execution was successful or not\
- If the execution is successful, the normal order content is included; if the execution fails, the `label` field is included to indicate the cause of the error\
- In the rate limiting, each order is counted individually\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-62) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Futures order details\] |\
| » _None_ | object | Futures order details |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, only exists if execution fails |\
| »» detail | string | Error detail, only present if execution failed and details need to be given |\
| »» id | integer(int64) | Futures order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Futures contract |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» tif | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-63) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_orders'\
query_param = ''\
body='[{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_orders"\
query_param=""\
body_param='[{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "size": 6024,\
    "iceberg": 0,\
    "price": "3765",\
    "tif": "gtc",\
    "text": "t-my-custom-id",\
    "stp_act": "-"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "succeeded": true,\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-2) Query single order details\
\
`GET /futures/{settle}/orders/{order_id}`\
\
_Query single order details_\
\
- Zero-fill order cannot be retrieved for 10 minutes after cancellation\
- Historical orders, by default, only data within the past 6 months is supported.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-30) Detailed descriptions\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-64) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-2) Cancel single order\
\
`DELETE /futures/{settle}/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-31) Detailed descriptions\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-65) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-single-order-2) Amend single order\
\
`PUT /futures/{settle}/orders/{order_id}`\
\
_Amend single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » size | body | integer(int64) | false | New order size, including filled part. |\
| » price | body | string | false | New order price |\
| » amend\_text | body | string | false | Custom info during order amendment |\
| » text | body | string | false | Internal users can modify information in the text field. |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-32) Detailed descriptions\
\
**» size**: New order size, including filled part.\
\
- If new size is less than or equal to filled size, the order will be cancelled.\
- Order side must be identical to the original one.\
- Close order size cannot be changed.\
- For reduce only orders, increasing size may leads to other reduce only orders being cancelled.\
- If price is not changed, decreasing size will not change its precedence in order book, while increasing will move it to the last at current price.\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-66) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
body='{"size":100,"price":"54321"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param='{"size":100,"price":"54321"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"size": 100,\
"price": "54321"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-2) Query personal trading records\
\
`GET /futures/{settle}/my_trades`\
\
_Query personal trading records_\
\
By default, only data within the past 6 months is supported.\
If you need to query data for a longer period, please use `GET /futures/{settle}/my_trades_timerange`.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| order | query | integer(int64) | false | Futures order ID, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Specify the starting point for this list based on a previously retrieved id |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-33) Detailed descriptions\
\
**last\_id**: Specify the starting point for this list based on a previously retrieved id\
\
This parameter is deprecated. If you need to iterate through and retrieve more records, we recommend using 'GET /futures/{settle}/my\_trades\_timerange'.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-67) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-68) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-3) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-by-time-range) Query personal trading records by time range\
\
`GET /futures/{settle}/my_trades_timerange`\
\
_Query personal trading records by time range_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| role | query | string | false | Query role, maker or taker |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-34) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-69) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » trade\_id | string | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-70) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-4) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/my_trades_timerange'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/my_trades_timerange"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trade_id": "121234231",\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-position-close-history) Query position close history\
\
`GET /futures/{settle}/position_close`\
\
_Query position close history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| side | query | string | false | Query side. long or shot |\
| pnl | query | string | false | Query profit or loss |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-35) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-71) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Position close time |\
| » contract | string | Futures contract |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » pnl\_pnl | string | PNL - Position P/L |\
| » pnl\_fund | string | PNL - Funding Fees |\
| » pnl\_fee | string | PNL - Transaction Fees |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » max\_size | string | Max Trade Size |\
| » accum\_size | string | Cumulative closed position volume |\
| » first\_open\_time | integer(int64) | First Open Time |\
| » long\_price | string | When side is 'long', it indicates the opening average price; when side is 'short', it indicates the closing average price |\
| » short\_price | string | When side is 'long', it indicates the closing average price; when side is 'short', it indicates the opening average price |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-72) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/position_close'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/position_close"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1546487347,\
    "pnl": "0.00013",\
    "pnl_pnl": "0.00011",\
    "pnl_fund": "0.00001",\
    "pnl_fee": "0.00001",\
    "side": "long",\
    "contract": "BTC_USDT",\
    "text": "web",\
    "max_size": "100",\
    "accum_size": "100",\
    "first_open_time": 1546487347,\
    "long_price": "2026.87",\
    "short_price": "2544.4"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-history) Query liquidation history\
\
`GET /futures/{settle}/liquidates`\
\
_Query liquidation history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| at | query | integer | false | Specify liquidation timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-36) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-73) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage. Not returned in public endpoints |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin. Not returned in public endpoints |\
| » entry\_price | string | Average entry price. Not returned in public endpoints |\
| » liq\_price | string | Liquidation price. Not returned in public endpoints |\
| » mark\_price | string | Mark price. Not returned in public endpoints |\
| » order\_id | integer(int64) | Liquidation order ID. Not returned in public endpoints |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | Liquidation order maker size |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/liquidates'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/liquidates"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "liq_price": "3421.54",\
    "mark_price": "3420.27",\
    "order_id": 317393847,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-adl-auto-deleveraging-order-information) Query ADL auto-deleveraging order information\
\
`GET /futures/{settle}/auto_deleverages`\
\
_Query ADL auto-deleveraging order information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| at | query | integer | false | Specify auto-deleveraging timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-37) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-74) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Automatic deleveraging time |\
| » user | integer(int64) | User ID |\
| » order\_id | integer(int64) | Order ID. Order IDs before 2023-02-20 are null |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage |\
| » cross\_leverage\_limit | string | Cross margin leverage (valid only when `leverage` is 0) |\
| » entry\_price | string | Average entry price |\
| » fill\_price | string | Average fill price |\
| » trade\_size | integer(int64) | Trading size |\
| » position\_size | integer(int64) | Positions after auto-deleveraging |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/auto_deleverages'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/auto_deleverages"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1675841679,\
    "contract": "ACH_USDT",\
    "order_id": 73873128,\
    "user": 1666,\
    "cross_leverage_limit": "0",\
    "leverage": "0",\
    "entry_price": "2649.648633636364",\
    "fill_price": "2790.8082",\
    "position_size": 1,\
    "trade_size": -10\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders-2) Countdown cancel orders\
\
`POST /futures/{settle}/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Heartbeat detection for contract orders: When the user-set `timeout` time is reached, if neither the existing countdown is canceled nor a new countdown is set, the relevant contract orders will be automatically canceled.\
This API can be called repeatedly to or cancel the countdown.\
Usage example: Repeatedly call this API at 30-second intervals, setting the `timeout` to 30 (seconds) each time.\
If this API is not called again within 30 seconds, all open orders on your specified `market` will be automatically canceled.\
If the `timeout` is set to 0 within 30 seconds, the countdown timer will terminate, and the automatic order cancellation function will be disabled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » contract | body | string | false | Futures contract |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-38) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-75) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-trading-fee-rates) Query futures market trading fee rates\
\
`GET /futures/{settle}/fee`\
\
_Query futures market trading fee rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-76) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_FuturesFee_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | object | The returned result is a map type, where the key represents the market and taker and maker fee rates |\
| »» taker\_fee | string | Taker fee |\
| »» maker\_fee | string | maker fee |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"1INCH_USDT": {\
    "taker_fee": "0.00025",\
    "maker_fee": "-0.00010"\
},\
"AAVE_USDT": {\
    "taker_fee": "0.00025",\
    "maker_fee": "-0.00010"\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-batch-orders-by-specified-id-list-2) Cancel batch orders by specified ID list\
\
`POST /futures/{settle}/batch_cancel_orders`\
\
_Cancel batch orders by specified ID list_\
\
Multiple different order IDs can be specified, maximum 20 records per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[string\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-77) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order cancellation operation completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » FutureCancelOrderResult | object | Order cancellation result |\
| »» id | string | Order ID |\
| »» user\_id | integer(int64) | User ID |\
| »» succeeded | boolean | Whether cancellation succeeded |\
| »» message | string | Error description when cancellation fails, empty if successful |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_cancel_orders'\
query_param = ''\
body='["1","2","3"]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_cancel_orders"\
query_param=""\
body_param='["1","2","3"]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
"1",\
"2",\
"3"\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 111,\
    "id": "123456",\
    "succeeded": true,\
    "message": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-modify-orders-by-specified-ids) Batch modify orders by specified IDs\
\
`POST /futures/{settle}/batch_amend_orders`\
\
_Batch modify orders by specified IDs_\
\
Multiple different order IDs can be specified, maximum 10 orders per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[ [BatchAmendOrderReq](https://www.gate.com/docs/developers/apiv4/en/#schemabatchamendorderreq)\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-78) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Futures order details\] |\
| » _None_ | object | Futures order details |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, only exists if execution fails |\
| »» detail | string | Error detail, only present if execution failed and details need to be given |\
| »» id | integer(int64) | Futures order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Futures contract |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» tif | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-79) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_amend_orders'\
query_param = ''\
body='[{"order_id":121212,"amend_text":"batch amend text","size":100,"price":"54321"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_amend_orders"\
query_param=""\
body_param='[{"order_id":121212,"amend_text":"batch amend text","size":100,"price":"54321"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "order_id": 121212,\
    "amend_text": "batch amend text",\
    "size": 100,\
    "price": "54321"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "succeeded": true,\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-table-by-table-id) Query risk limit table by table\_id\
\
`GET /futures/{settle}/risk_limit_table`\
\
_Query risk limit table by table\_id_\
\
Just pass table\_id\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| table\_id | query | string | true | Risk limit table ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-80) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Information for each tier of the gradient risk limit table |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/risk_limit_table'\
query_param = 'table_id=CYBER_USDT_20241122'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/risk_limit_table?table_id=CYBER_USDT_20241122 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier": 1,\
    "risk_limit": "10000",\
    "initial_rate": "0.025",\
    "maintenance_rate": "0.015",\
    "leverage_max": "40",\
    "deduction": "0"\
},\
{\
    "tier": 2,\
    "risk_limit": "30000",\
    "initial_rate": "0.03333",\
    "maintenance_rate": "0.02",\
    "leverage_max": "30",\
    "deduction": "50"\
},\
{\
    "tier": 3,\
    "risk_limit": "50000",\
    "initial_rate": "0.04545",\
    "maintenance_rate": "0.03",\
    "leverage_max": "22",\
    "deduction": "350"\
},\
{\
    "tier": 4,\
    "risk_limit": "70000",\
    "initial_rate": "0.05555",\
    "maintenance_rate": "0.04",\
    "leverage_max": "18",\
    "deduction": "850"\
},\
{\
    "tier": 5,\
    "risk_limit": "100000",\
    "initial_rate": "0.1",\
    "maintenance_rate": "0.085",\
    "leverage_max": "10",\
    "deduction": "4000"\
},\
{\
    "tier": 6,\
    "risk_limit": "150000",\
    "initial_rate": "0.333",\
    "maintenance_rate": "0.3",\
    "leverage_max": "3",\
    "deduction": "25500"\
},\
{\
    "tier": 7,\
    "risk_limit": "200000",\
    "initial_rate": "0.5",\
    "maintenance_rate": "0.45",\
    "leverage_max": "2",\
    "deduction": "48000"\
},\
{\
    "tier": 8,\
    "risk_limit": "300000",\
    "initial_rate": "1",\
    "maintenance_rate": "0.95",\
    "leverage_max": "1",\
    "deduction": "148000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order-2) Create price-triggered order\
\
`POST /futures/{settle}/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) | true | none |\
| » initial | body | object | true | none |\
| »» contract | body | string | true | Futures contract |\
| »» size | body | integer(int64) | false | Represents the number of contracts that need to be closed, full closing: size=0 |\
| »» price | body | string | true | Order price. Set to 0 to use market price |\
| »» close | body | boolean | false | When all positions are closed in a single position mode, it must be set to true to perform the closing operation |\
| »» tif | body | string | false | Time in force strategy, default is gtc, market orders currently only support ioc mode |\
| »» text | body | string | false | The source of the order, including: |\
| »» reduce\_only | body | boolean | false | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| »» auto\_size | body | string | false | Single position mode: auto\_size is not required |\
| » trigger | body | object | true | none |\
| »» strategy\_type | body | integer(int32) | false | Trigger Strategy |\
| »» price\_type | body | integer(int32) | false | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| »» price | body | string | false | Price value for price trigger, or spread value for spread trigger |\
| »» rule | body | integer(int32) | false | Price Condition Type |\
| »» expiration | body | integer | false | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » order\_type | body | string | false | Types of take-profit and stop-loss orders, including: |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-39) Detailed descriptions\
\
**»» size**: Represents the number of contracts that need to be closed, full closing: size=0\
Partial closing: plan-close-short-position size>0\
Partial closing: plan-close-long-position size<0\
\
**»» close**: When all positions are closed in a single position mode, it must be set to true to perform the closing operation\
When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false\
\
**»» tif**: Time in force strategy, default is gtc, market orders currently only support ioc mode\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
**»» auto\_size**: Single position mode: auto\_size is not required\
Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions\
Dual position mode partial closing (size≠0): auto\_size is not required\
\
**»» strategy\_type**: Trigger Strategy\
\
- 0: Price trigger, triggered when price meets conditions\
- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price\
Currently only supports 0 (latest transaction price)\
\
**»» rule**: Price Condition Type\
\
- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price\
- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price\
\
**» order\_type**: Types of take-profit and stop-loss orders, including:\
\
- `close-long-order`: Order take-profit/stop-loss, close long position\
- `close-short-order`: Order take-profit/stop-loss, close short position\
- `close-long-position`: Position take-profit/stop-loss, used to close all long positions\
- `close-short-position`: Position take-profit/stop-loss, used to close all short positions\
- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions\
- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions\
\
The two types of order take-profit/stop-loss are read-only and cannot be passed in requests\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-81) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» tif | gtc |\
| »» tif | ioc |\
| »» strategy\_type | 0 |\
| »» strategy\_type | 1 |\
| »» price\_type | 0 |\
| »» price\_type | 1 |\
| »» price\_type | 2 |\
| »» rule | 1 |\
| »» rule | 2 |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = ''\
body='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/price_orders"\
query_param=""\
body_param='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"order_type": "close-long-order"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-auto-order-list) Query auto order list\
\
`GET /futures/{settle}/price_orders`\
\
_Query auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-82) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders-2) Cancel all auto orders\
\
`DELETE /futures/{settle}/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-83) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/price_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details-2) Query single auto order details\
\
`GET /futures/{settle}/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-84) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order-2) Cancel single auto order\
\
`DELETE /futures/{settle}/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-85) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#delivery) Delivery\
\
Delivery contract\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-futures-contracts-2) Query all futures contracts\
\
`GET /delivery/{settle}/contracts`\
\
_Query all futures contracts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-86) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [DeliveryContract](https://www.gate.com/docs/developers/apiv4/en/#schemadeliverycontract)\] |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/contracts'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/contracts \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT_20200814",\
    "underlying": "BTC_USDT",\
    "cycle": "WEEKLY",\
    "type": "direct",\
    "quanto_multiplier": "0.0001",\
    "mark_type": "index",\
    "last_price": "9017",\
    "mark_price": "9019",\
    "index_price": "9005.3",\
    "basis_rate": "0.185095",\
    "basis_value": "13.7",\
    "basis_impact_value": "100000",\
    "settle_price": "0",\
    "settle_price_interval": 60,\
    "settle_price_duration": 1800,\
    "settle_fee_rate": "0.0015",\
    "expire_time": 1593763200,\
    "order_price_round": "0.1",\
    "mark_price_round": "0.1",\
    "leverage_min": "1",\
    "leverage_max": "100",\
    "maintenance_rate": "1000000",\
    "risk_limit_base": "140.726652109199",\
    "risk_limit_step": "1000000",\
    "risk_limit_max": "8000000",\
    "maker_fee_rate": "-0.00025",\
    "taker_fee_rate": "0.00075",\
    "ref_discount_rate": "0",\
    "ref_rebate_rate": "0.2",\
    "order_price_deviate": "0.5",\
    "order_size_min": 1,\
    "order_size_max": 1000000,\
    "orders_limit": 50,\
    "orderbook_id": 63,\
    "trade_id": 26,\
    "trade_size": 435,\
    "position_size": 130,\
    "config_change_time": 1593158867,\
    "in_delisting": false\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-contract-information-2) Query single contract information\
\
`GET /delivery/{settle}/contracts/{contract}`\
\
_Query single contract information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-87) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Contract information | [DeliveryContract](https://www.gate.com/docs/developers/apiv4/en/#schemadeliverycontract) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/contracts/BTC_USDT_20200814'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/contracts/BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT_20200814",\
"underlying": "BTC_USDT",\
"cycle": "WEEKLY",\
"type": "direct",\
"quanto_multiplier": "0.0001",\
"mark_type": "index",\
"last_price": "9017",\
"mark_price": "9019",\
"index_price": "9005.3",\
"basis_rate": "0.185095",\
"basis_value": "13.7",\
"basis_impact_value": "100000",\
"settle_price": "0",\
"settle_price_interval": 60,\
"settle_price_duration": 1800,\
"settle_fee_rate": "0.0015",\
"expire_time": 1593763200,\
"order_price_round": "0.1",\
"mark_price_round": "0.1",\
"leverage_min": "1",\
"leverage_max": "100",\
"maintenance_rate": "1000000",\
"risk_limit_base": "140.726652109199",\
"risk_limit_step": "1000000",\
"risk_limit_max": "8000000",\
"maker_fee_rate": "-0.00025",\
"taker_fee_rate": "0.00075",\
"ref_discount_rate": "0",\
"ref_rebate_rate": "0.2",\
"order_price_deviate": "0.5",\
"order_size_min": 1,\
"order_size_max": 1000000,\
"orders_limit": 50,\
"orderbook_id": 63,\
"trade_id": 26,\
"trade_size": 435,\
"position_size": 130,\
"config_change_time": 1593158867,\
"in_delisting": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-depth-information-2) Query futures market depth information\
\
`GET /delivery/{settle}/order_book`\
\
_Query futures market depth information_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-88) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| interval | 0 |\
| interval | 0.1 |\
| interval | 0.01 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/order_book'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/order_book?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-transaction-records-2) Futures market transaction records\
\
`GET /delivery/{settle}/trades`\
\
_Futures market transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list.This field is no longer supported. For new requests, please use the fromand tofields to specify the time rang |\
| from | query | integer(int64) | false | Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items. |\
| to | query | integer(int64) | false | Specify end time in Unix seconds, default to current time. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-40) Detailed descriptions\
\
**from**: Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items.\
If items between `from` and `to` are more than `limit`, only `limit` number will be returned.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-89) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/trades'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/trades?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-k-line-chart-2) Futures market K-line chart\
\
`GET /delivery/{settle}/candlesticks`\
\
_Futures market K-line chart_\
\
Return specified contract candlesticks.\
If prefix `contract` with `mark_`, the contract's mark price candlesticks are returned;\
if prefix with `index_`, index price candlesticks will be returned.\
\
Maximum of 2000 points are returned in one query. Be sure not to exceed the limit when specifying `from`, `to` and `interval`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Time interval between data points, note that 1w represents a natural week, 7d time is aligned with Unix initial time |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-90) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| interval | 10s |\
| interval | 30s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 2h |\
| interval | 4h |\
| interval | 6h |\
| interval | 8h |\
| interval | 12h |\
| interval | 1d |\
| interval | 7d |\
| interval | 1w |\
| interval | 30d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/candlesticks'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/candlesticks?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-all-futures-trading-statistics-2) Get all futures trading statistics\
\
`GET /delivery/{settle}/tickers`\
\
_Get all futures trading statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-91) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » contract | string | Futures contract |\
| » last | string | Last trading price |\
| » change\_percentage | string | Price change percentage. Negative values indicate price decrease, e.g. -7.45 |\
| » total\_size | string | Contract total size |\
| » low\_24h | string | 24-hour lowest price |\
| » high\_24h | string | 24-hour highest price |\
| » volume\_24h | string | 24-hour trading volume |\
| » volume\_24h\_btc | string | 24-hour trading volume in BTC (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_usd | string | 24-hour trading volume in USD (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_base | string | 24-hour trading volume in base currency |\
| » volume\_24h\_quote | string | 24-hour trading volume in quote currency |\
| » volume\_24h\_settle | string | 24-hour trading volume in settle currency |\
| » mark\_price | string | Recent mark price |\
| » funding\_rate | string | Funding rate |\
| » funding\_rate\_indicative | string | Indicative Funding rate in next period. (deprecated. use `funding_rate`) |\
| » index\_price | string | Index price |\
| » quanto\_base\_rate | string | Exchange rate of base currency and settlement currency in Quanto contract. Does not exists in contracts of other types |\
| » basis\_rate | string | Basis rate |\
| » basis\_value | string | Basis value |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | The latest seller's lowest price order quantity |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | The latest buyer's highest price order volume |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "last": "6432",\
    "low_24h": "6278",\
    "high_24h": "6790",\
    "change_percentage": "4.43",\
    "total_size": "32323904",\
    "volume_24h": "184040233284",\
    "volume_24h_btc": "28613220",\
    "volume_24h_usd": "184040233284",\
    "volume_24h_base": "28613220",\
    "volume_24h_quote": "184040233284",\
    "volume_24h_settle": "28613220",\
    "mark_price": "6534",\
    "funding_rate": "0.0001",\
    "funding_rate_indicative": "0.0001",\
    "index_price": "6531",\
    "highest_bid": "34089.7",\
    "highest_size": "100",\
    "lowest_ask": "34217.9",\
    "lowest_size": "1000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-insurance-fund-history-2) Futures market insurance fund history\
\
`GET /delivery/{settle}/insurance`\
\
_Futures market insurance fund history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-92) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » b | string | Insurance balance |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/insurance'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/insurance \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "b": "83.0031"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-futures-account-2) Get futures account\
\
`GET /delivery/{settle}/accounts`\
\
_Get futures account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-93) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-account-change-history-2) Query futures account change history\
\
`GET /delivery/{settle}/account_book`\
\
_Query futures account change history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-41) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit and withdrawal\
- pnl: Profit and loss from position reduction\
- fee: Trading fees\
- refr: Referrer rebates\
- fund: Funding fees\
- point\_dnw: Point card deposit and withdrawal\
- point\_fee: Point card trading fees\
- point\_refr: Point card referrer rebates\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-94) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Change time |\
| » change | string | Change amount |\
| » balance | string | Balance after change |\
| » type | string | Change types:<br>\- dnw: Deposit and withdrawal<br>\- pnl: Profit and loss from position reduction<br>\- fee: Trading fees<br>\- refr: Referrer rebates<br>\- fund: Funding fees<br>\- point\_dnw: Point card deposit and withdrawal<br>\- point\_fee: Point card trading fees<br>\- point\_refr: Point card referrer rebates<br>\- bonus\_offset: Trial fund deduction |\
| » text | string | Comment |\
| » contract | string | Futures contract, the field is only available for data after 2023-10-30 |\
| » trade\_id | string | trade id |\
| » id | string | Account change record ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-95) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
| type | bonus\_offset |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1682294400.123456,\
    "change": "0.000010152188",\
    "balance": "4.59316525194",\
    "text": "ETH_USD:6086261",\
    "type": "fee",\
    "contract": "ETH_USD",\
    "trade_id": "1",\
    "id": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-position-list-2) Get user position list\
\
`GET /delivery/{settle}/positions`\
\
_Get user position list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-96) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-single-position-information-2) Get single position information\
\
`GET /delivery/{settle}/positions/{contract}`\
\
_Get single position information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-97) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/positions/BTC_USDT_20200814"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin-2) Update position margin\
\
`POST /delivery/{settle}/positions/{contract}/margin`\
\
_Update position margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-98) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/margin'\
query_param = 'change=0.01'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/margin"\
query_param="change=0.01"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage-2) Update position leverage\
\
`POST /delivery/{settle}/positions/{contract}/leverage`\
\
_Update position leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-99) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit-2) Update position risk limit\
\
`POST /delivery/{settle}/positions/{contract}/risk_limit`\
\
_Update position risk limit_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New position risk limit |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-100) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/risk_limit'\
query_param = 'risk_limit=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/risk_limit"\
query_param="risk_limit=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-futures-order-2) Place futures order\
\
`POST /delivery/{settle}/orders`\
\
_Place futures order_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) | true | none |\
| » contract | body | string | true | Futures contract |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » tif | body | string | false | Time in force |\
| » text | body | string | false | Custom order information. If not empty, must follow the rules below: |\
| » auto\_size | body | string | false | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
\
\|» limit\_vip\|body\|integer(int64)\|false\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|» pid\|body\|integer(int64)\|false\|Position ID\|\
\|settle\|path\|string\|true\|Settle currency\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-42) Detailed descriptions\
\
**» tif**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
\
**» text**: Custom order information. If not empty, must follow the rules below:\
\
1. Prefixed with `t-`\
2. No longer than 28 bytes without `t-` prefix\
3. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
In addition to user-defined information, the following are internal reserved fields that identify the order source:\
\
- web: Web\
- api: API call\
- app: Mobile app\
- auto\_deleveraging: Automatic deleveraging\
- liquidation: Forced liquidation of positions under the old classic mode\
- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode\
- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions\
- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode\
- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode\
- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode\
- insurance: Insurance\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-101) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
| » tif | fok |\
| » auto\_size | close\_long |\
| » auto\_size | close\_short |\
| » stp\_act | co |\
| » stp\_act | cn |\
| » stp\_act | cb |\
| » stp\_act | - |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = ''\
body='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/orders"\
query_param=""\
body_param='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"contract": "BTC_USDT",\
"size": 6024,\
"iceberg": 0,\
"price": "3765",\
"tif": "gtc",\
"text": "t-my-custom-id",\
"stp_act": "-"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list-2) Query futures order list\
\
`GET /delivery/{settle}/orders`\
\
_Query futures order list_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| count\_total | query | integer | false | Whether to return total number matched, defaults to 0 (no return) |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-43) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-102) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| count\_total | 0 |\
| count\_total | 1 |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-5) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
| 200 | X-Pagination-Total | integer |  | Total number matched, only returned if `count_total` is set to 1 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status-2) Cancel all orders with 'open' status\
\
`DELETE /delivery/{settle}/orders`\
\
_Cancel all orders with 'open' status_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Futures contract |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-103) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| side | ask |\
| side | bid |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = 'contract=BTC_USDT_20200814'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/orders"\
query_param="contract=BTC_USDT_20200814"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-3) Query single order details\
\
`GET /delivery/{settle}/orders/{order_id}`\
\
_Query single order details_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-104) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-3) Cancel single order\
\
`DELETE /delivery/{settle}/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-105) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-3) Query personal trading records\
\
`GET /delivery/{settle}/my_trades`\
\
_Query personal trading records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| order | query | integer(int64) | false | Futures order ID, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| count\_total | query | integer | false | Whether to return total number matched, defaults to 0 (no return) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-44) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-106) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| count\_total | 0 |\
| count\_total | 1 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-107) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-6) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
| 200 | X-Pagination-Total | integer |  | Total number matched, only returned if `count_total` is set to 1 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-position-close-history-2) Query position close history\
\
`GET /delivery/{settle}/position_close`\
\
_Query position close history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-108) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Position close time |\
| » contract | string | Futures contract |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » pnl\_pnl | string | PNL - Position P/L |\
| » pnl\_fund | string | PNL - Funding Fees |\
| » pnl\_fee | string | PNL - Transaction Fees |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » max\_size | string | Max Trade Size |\
| » accum\_size | string | Cumulative closed position volume |\
| » first\_open\_time | integer(int64) | First Open Time |\
| » long\_price | string | When side is 'long', it indicates the opening average price; when side is 'short', it indicates the closing average price |\
| » short\_price | string | When side is 'long', it indicates the closing average price; when side is 'short', it indicates the opening average price |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-109) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/position_close'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/position_close"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1546487347,\
    "pnl": "0.00013",\
    "pnl_pnl": "0.00011",\
    "pnl_fund": "0.00001",\
    "pnl_fee": "0.00001",\
    "side": "long",\
    "contract": "BTC_USDT",\
    "text": "web",\
    "max_size": "100",\
    "accum_size": "100",\
    "first_open_time": 1546487347,\
    "long_price": "2026.87",\
    "short_price": "2544.4"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-history-2) Query liquidation history\
\
`GET /delivery/{settle}/liquidates`\
\
_Query liquidation history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| at | query | integer | false | Specify liquidation timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-110) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage. Not returned in public endpoints |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin. Not returned in public endpoints |\
| » entry\_price | string | Average entry price. Not returned in public endpoints |\
| » liq\_price | string | Liquidation price. Not returned in public endpoints |\
| » mark\_price | string | Mark price. Not returned in public endpoints |\
| » order\_id | integer(int64) | Liquidation order ID. Not returned in public endpoints |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | Liquidation order maker size |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/liquidates'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/liquidates"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "liq_price": "3421.54",\
    "mark_price": "3420.27",\
    "order_id": 317393847,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-settlement-records) Query settlement records\
\
`GET /delivery/{settle}/settlements`\
\
_Query settlement records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| at | query | integer | false | Specify settlement timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-111) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin |\
| » entry\_price | string | Average entry price |\
| » settle\_price | string | Settled price |\
| » profit | string | Profit |\
| » fee | string | Fee deducted |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/settlements'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/settlements"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "settle_price": "3421.54",\
    "profit": "-6.87498",\
    "fee": "0.03079386"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-tiers-2) Query risk limit tiers\
\
`GET /delivery/{settle}/risk_limit_tiers`\
\
_Query risk limit tiers_\
\
When the 'contract' parameter is not passed, the default is to query the risk limits for the top 100 markets. 'Limit' and 'offset' correspond to pagination queries at the market level, not to the length of the returned array. This only takes effect when the contract parameter is empty.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-112) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Retrieve risk limit configurations for different tiers under a specified contract\] |\
| » _None_ | object | Retrieve risk limit configurations for different tiers under a specified contract |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» contract | string | Market, only visible when market pagination is requested |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/risk_limit_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/risk_limit_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "maintenance_rate": "0.01",\
    "tier": 1,\
    "initial_rate": "0.02",\
    "leverage_max": "50",\
    "risk_limit": "20000",\
    "contract": "ZTX_USDT",\
    "deduction": "0"\
},\
{\
    "maintenance_rate": "0.013",\
    "tier": 2,\
    "initial_rate": "0.025",\
    "leverage_max": "40",\
    "risk_limit": "30000",\
    "contract": "ZTX_USDT",\
    "deduction": "60"\
},\
{\
    "maintenance_rate": "0.015",\
    "tier": 3,\
    "initial_rate": "0.02857",\
    "leverage_max": "35",\
    "risk_limit": "50000",\
    "contract": "ZTX_USDT",\
    "deduction": "120"\
},\
{\
    "maintenance_rate": "0.02",\
    "tier": 4,\
    "initial_rate": "0.03333",\
    "leverage_max": "30",\
    "risk_limit": "70000",\
    "contract": "ZTX_USDT",\
    "deduction": "370"\
},\
{\
    "maintenance_rate": "0.025",\
    "tier": 5,\
    "initial_rate": "0.04",\
    "leverage_max": "25",\
    "risk_limit": "100000",\
    "contract": "ZTX_USDT",\
    "deduction": "720"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order-3) Create price-triggered order\
\
`POST /delivery/{settle}/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) | true | none |\
| » initial | body | object | true | none |\
| »» contract | body | string | true | Futures contract |\
| »» size | body | integer(int64) | false | Represents the number of contracts that need to be closed, full closing: size=0 |\
| »» price | body | string | true | Order price. Set to 0 to use market price |\
| »» close | body | boolean | false | When all positions are closed in a single position mode, it must be set to true to perform the closing operation |\
| »» tif | body | string | false | Time in force strategy, default is gtc, market orders currently only support ioc mode |\
| »» text | body | string | false | The source of the order, including: |\
| »» reduce\_only | body | boolean | false | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| »» auto\_size | body | string | false | Single position mode: auto\_size is not required |\
| » trigger | body | object | true | none |\
| »» strategy\_type | body | integer(int32) | false | Trigger Strategy |\
| »» price\_type | body | integer(int32) | false | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| »» price | body | string | false | Price value for price trigger, or spread value for spread trigger |\
| »» rule | body | integer(int32) | false | Price Condition Type |\
| »» expiration | body | integer | false | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » order\_type | body | string | false | Types of take-profit and stop-loss orders, including: |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-45) Detailed descriptions\
\
**»» size**: Represents the number of contracts that need to be closed, full closing: size=0\
Partial closing: plan-close-short-position size>0\
Partial closing: plan-close-long-position size<0\
\
**»» close**: When all positions are closed in a single position mode, it must be set to true to perform the closing operation\
When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false\
\
**»» tif**: Time in force strategy, default is gtc, market orders currently only support ioc mode\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
**»» auto\_size**: Single position mode: auto\_size is not required\
Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions\
Dual position mode partial closing (size≠0): auto\_size is not required\
\
**»» strategy\_type**: Trigger Strategy\
\
- 0: Price trigger, triggered when price meets conditions\
- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price\
Currently only supports 0 (latest transaction price)\
\
**»» rule**: Price Condition Type\
\
- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price\
- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price\
\
**» order\_type**: Types of take-profit and stop-loss orders, including:\
\
- `close-long-order`: Order take-profit/stop-loss, close long position\
- `close-short-order`: Order take-profit/stop-loss, close short position\
- `close-long-position`: Position take-profit/stop-loss, used to close all long positions\
- `close-short-position`: Position take-profit/stop-loss, used to close all short positions\
- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions\
- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions\
\
The two types of order take-profit/stop-loss are read-only and cannot be passed in requests\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-113) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» tif | gtc |\
| »» tif | ioc |\
| »» strategy\_type | 0 |\
| »» strategy\_type | 1 |\
| »» price\_type | 0 |\
| »» price\_type | 1 |\
| »» price\_type | 2 |\
| »» rule | 1 |\
| »» rule | 2 |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = ''\
body='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/price_orders"\
query_param=""\
body_param='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"order_type": "close-long-order"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-auto-order-list-2) Query auto order list\
\
`GET /delivery/{settle}/price_orders`\
\
_Query auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-114) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders-3) Cancel all auto orders\
\
`DELETE /delivery/{settle}/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Futures contract |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-115) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = 'contract=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/price_orders"\
query_param="contract=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details-3) Query single auto order details\
\
`GET /delivery/{settle}/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-116) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order-3) Cancel single auto order\
\
`DELETE /delivery/{settle}/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-117) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#options) Options\
\
Options API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-underlying-assets) List all underlying assets\
\
`GET /options/underlyings`\
\
_List all underlying assets_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Underlying name |\
| » index\_price | string | Spot index price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlyings'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlyings \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT",\
    "index_price": "70000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-expiration-dates) List all expiration dates\
\
`GET /options/expirations`\
\
_List all expiration dates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List expiration dates for specified underlying | \[integer\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | integer(int64) | Unix timestamp of expiration date |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/expirations'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/expirations?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
1637913600\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-contracts-for-specified-underlying-and-expiration-date) List all contracts for specified underlying and expiration date\
\
`GET /options/contracts`\
\
_List all contracts for specified underlying and expiration date_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| expiration | query | integer(int64) | false | Unix timestamp of expiration date |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options contract details\] |\
| » _None_ | object | Options contract details |\
| »» name | string | Options contract name |\
| »» tag | string | Tag |\
| »» create\_time | number(double) | Creation time |\
| »» expiration\_time | number(double) | Expiration time |\
| »» is\_call | boolean | `true` means call options, `false` means put options |\
| »» multiplier | string | Multiplier used in converting from invoicing to settlement currency |\
| »» underlying | string | Underlying |\
| »» underlying\_price | string | Underlying price (quote currency) |\
| »» last\_price | string | Last trading price |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» index\_price | string | Current index price (quote currency) |\
| »» maker\_fee\_rate | string | Maker fee rate, negative values indicate rebates |\
| »» taker\_fee\_rate | string | Taker fee rate |\
| »» order\_price\_round | string | Minimum order price increment |\
| »» mark\_price\_round | string | Minimum mark price increment |\
| »» order\_size\_min | integer(int64) | Minimum order size allowed by the contract |\
| »» order\_size\_max | integer(int64) | Maximum order size allowed by the contract |\
| »» order\_price\_deviate | string | The positive and negative offset allowed between the order price and the current mark price, that `order_price` must meet the following conditions:<br>order\_price is within the range of mark\_price +/- order\_price\_deviate \* underlying\_price and does not distinguish between buy and sell orders |\
| »» ref\_discount\_rate | string | Trading fee discount for referred users |\
| »» ref\_rebate\_rate | string | Commission rate for referrers |\
| »» orderbook\_id | integer(int64) | Orderbook update ID |\
| »» trade\_id | integer(int64) | Current trade ID |\
| »» trade\_size | integer(int64) | Historical cumulative trading volume |\
| »» position\_size | integer(int64) | Current total long position size |\
| »» orders\_limit | integer | Maximum number of pending orders |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/contracts'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/contracts?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT-20211130-65000-C",\
    "tag": "WEEK",\
    "create_time": 1636702700,\
    "expiration_time": 1637913600,\
    "is_call": true,\
    "strike_price": "65000",\
    "last_price": "13000",\
    "mark_price": "14010",\
    "orderbook_id": 9,\
    "trade_id": 1,\
    "trade_size": 10,\
    "position_size": 10,\
    "underlying": "BTC_USDT",\
    "underlying_price": "70000",\
    "multiplier": "0.0001",\
    "order_price_round": "0.1",\
    "mark_price_round": "0.1",\
    "maker_fee_rate": "0.0004",\
    "taker_fee_rate": "0.0004",\
    "price_limit_fee_rate": "0.1",\
    "ref_discount_rate": "0",\
    "ref_rebate_rate": "0",\
    "order_price_deviate": "0.5",\
    "order_size_min": 1,\
    "order_size_max": 100000,\
    "orders_limit": 50\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-specified-contract-details) Query specified contract details\
\
`GET /options/contracts/{contract}`\
\
_Query specified contract details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options contract details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Options contract name |\
| » tag | string | Tag |\
| » create\_time | number(double) | Creation time |\
| » expiration\_time | number(double) | Expiration time |\
| » is\_call | boolean | `true` means call options, `false` means put options |\
| » multiplier | string | Multiplier used in converting from invoicing to settlement currency |\
| » underlying | string | Underlying |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » last\_price | string | Last trading price |\
| » mark\_price | string | Current mark price (quote currency) |\
| » index\_price | string | Current index price (quote currency) |\
| » maker\_fee\_rate | string | Maker fee rate, negative values indicate rebates |\
| » taker\_fee\_rate | string | Taker fee rate |\
| » order\_price\_round | string | Minimum order price increment |\
| » mark\_price\_round | string | Minimum mark price increment |\
| » order\_size\_min | integer(int64) | Minimum order size allowed by the contract |\
| » order\_size\_max | integer(int64) | Maximum order size allowed by the contract |\
| » order\_price\_deviate | string | The positive and negative offset allowed between the order price and the current mark price, that `order_price` must meet the following conditions:<br>order\_price is within the range of mark\_price +/- order\_price\_deviate \* underlying\_price and does not distinguish between buy and sell orders |\
| » ref\_discount\_rate | string | Trading fee discount for referred users |\
| » ref\_rebate\_rate | string | Commission rate for referrers |\
| » orderbook\_id | integer(int64) | Orderbook update ID |\
| » trade\_id | integer(int64) | Current trade ID |\
| » trade\_size | integer(int64) | Historical cumulative trading volume |\
| » position\_size | integer(int64) | Current total long position size |\
| » orders\_limit | integer | Maximum number of pending orders |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/contracts/BTC_USDT-20211130-65000-C'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/contracts/BTC_USDT-20211130-65000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT-20211130-65000-C",\
"tag": "WEEK",\
"create_time": 1636702700,\
"expiration_time": 1637913600,\
"is_call": true,\
"strike_price": "65000",\
"last_price": "13000",\
"mark_price": "14010",\
"orderbook_id": 9,\
"trade_id": 1,\
"trade_size": 10,\
"position_size": 10,\
"underlying": "BTC_USDT",\
"underlying_price": "70000",\
"multiplier": "0.0001",\
"order_price_round": "0.1",\
"mark_price_round": "0.1",\
"maker_fee_rate": "0.0004",\
"taker_fee_rate": "0.0004",\
"price_limit_fee_rate": "0.1",\
"ref_discount_rate": "0",\
"ref_rebate_rate": "0",\
"order_price_deviate": "0.5",\
"order_size_min": 1,\
"order_size_max": 100000,\
"orders_limit": 50\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-settlement-history) List settlement history\
\
`GET /options/settlements`\
\
_List settlement history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-46) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Last configuration update time |\
| » contract | string | Options contract name |\
| » profit | string | Settlement profit per contract (quote currency) |\
| » fee | string | Settlement fee per contract (quote currency) |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/settlements'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/settlements?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1598839200,\
    "profit": "312.35",\
    "fee": "0.3284",\
    "settle_price": "11687.65",\
    "contract": "BTC-WEEKLY-200824-11000-P",\
    "strike_price": "12000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specified-contract-settlement-information) Get specified contract settlement information\
\
`GET /options/settlements/{contract}`\
\
_Get specified contract settlement information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| at | query | integer(int64) | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Last configuration update time |\
| » contract | string | Options contract name |\
| » profit | string | Settlement profit per contract (quote currency) |\
| » fee | string | Settlement fee per contract (quote currency) |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/settlements/BTC_USDT-20211130-65000-C'\
query_param = 'underlying=BTC_USDT&at=0'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/settlements/BTC_USDT-20211130-65000-C?underlying=BTC_USDT&at=0 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"time": 1598839200,\
"profit": "312.35",\
"fee": "0.3284",\
"settle_price": "11687.65",\
"contract": "BTC-WEEKLY-200824-11000-P",\
"strike_price": "12000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-settlement-records) Query personal settlement records\
\
`GET /options/my_settlements`\
\
_Query personal settlement records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-47) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Settlement time |\
| » underlying | string | Underlying |\
| » contract | string | Options contract name |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
| » size | integer(int64) | Settlement size |\
| » settle\_profit | string | Settlement profit (quote currency) |\
| » fee | string | Settlement fee (quote currency) |\
| » realised\_pnl | string | Accumulated profit and loss from opening positions, including premium, fees, settlement profit, etc. (quote currency) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/my_settlements'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/my_settlements"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "size": -1,\
    "settle_profit": "0",\
    "contract": "BTC_USDT-20220624-26000-C",\
    "strike_price": "26000",\
    "time": 1656057600,\
    "settle_price": "20917.461281337048",\
    "underlying": "BTC_USDT",\
    "realised_pnl": "-0.00116042",\
    "fee": "0"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-options-contract-order-book) Query options contract order book\
\
`GET /options/order_book`\
\
_Query options contract order book_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Options contract name |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-118) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 0 |\
| interval | 0.1 |\
| interval | 0.01 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/order_book'\
query_param = 'contract=BTC_USDT-20210916-5000-C'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/order_book?contract=BTC_USDT-20210916-5000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-options-market-ticker-information) Query options market ticker information\
\
`GET /options/tickers`\
\
_Query options market ticker information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Options contract details |\
| »» name | string | Options contract name |\
| »» last\_price | string | Last trade price (quote currency) |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» index\_price | string | Current index price (quote currency) |\
| »» ask1\_size | integer(int64) | Best ask size |\
| »» ask1\_price | string | Best ask price |\
| »» bid1\_size | integer(int64) | Best bid size |\
| »» bid1\_price | string | Best bid price |\
| »» position\_size | integer(int64) | Current total long position size |\
| »» mark\_iv | string | Implied volatility |\
| »» bid\_iv | string | Bid side implied volatility |\
| »» ask\_iv | string | Ask side implied volatility |\
| »» leverage | string | Current leverage. Formula: underlying\_price / mark\_price \* delta |\
| »» delta | string | Greek letter delta |\
| »» gamma | string | Greek letter gamma |\
| »» vega | string | Greek letter vega |\
| »» theta | string | Greek letter theta |\
| »» rho | string | Rho |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/tickers'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/tickers?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT-20211130-65000-C",\
    "last_price": "13000",\
    "mark_price": "14010",\
    "position_size": 10,\
    "ask1_size": 0,\
    "ask1_price": "0",\
    "bid1_size": 1,\
    "bid1_price": "11",\
    "vega": "41.41202",\
    "theta": "-120.1506",\
    "rho": "6.52485",\
    "gamma": "0.00004",\
    "delta": "0.33505",\
    "mark_iv": "0.123",\
    "bid_iv": "0.023",\
    "ask_iv": "0.342",\
    "leverage": "13"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-underlying-ticker-information) Query underlying ticker information\
\
`GET /options/underlying/tickers/{underlying}`\
\
_Query underlying ticker information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | path | string | true | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options underlying detail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » trade\_put | integer(int64) | Total put options trades amount in last 24h |\
| » trade\_call | integer(int64) | Total call options trades amount in last 24h |\
| » index\_price | string | Index price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlying/tickers/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlying/tickers/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trade_put": 33505,\
"trade_call": 123,\
"index_price": "76543.3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#options-contract-market-candlestick-chart) Options contract market candlestick chart\
\
`GET /options/candlesticks`\
\
_Options contract market candlestick chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-48) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-119) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency, unit: underlying corresponding option price) |\
| »» h | string | Highest price (quote currency, unit: underlying corresponding option price) |\
| »» l | string | Lowest price (quote currency, unit: underlying corresponding option price) |\
| »» o | string | Open price (quote currency, unit: underlying corresponding option price) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/candlesticks'\
query_param = 'contract=BTC_USDT-20210916-5000-C'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/candlesticks?contract=BTC_USDT-20210916-5000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#underlying-index-price-candlestick-chart) Underlying index price candlestick chart\
\
`GET /options/underlying/candlesticks`\
\
_Underlying index price candlestick chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-49) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-120) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[data point in every timestamp\] |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
| »» sum | string | Trading volume (unit: Quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlying/candlesticks'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlying/candlesticks?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032",\
    "sum": "3580"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#market-trade-records) Market trade records\
\
`GET /options/trades`\
\
_Market trade records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| type | query | string(P) | false | `C` for call, `P` for put |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-50) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/trades'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/trades \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-information) Query account information\
\
`GET /options/accounts`\
\
_Query account information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user | integer(int64) | User ID |\
| » total | string | Account Balance |\
| » position\_value | string | Position value, long position value is positive, short position value is negative |\
| » equity | string | Account equity, the sum of account balance and position value |\
| » short\_enabled | boolean | If the account is allowed to short |\
| » mmp\_enabled | boolean | Whether to enable MMP |\
| » liq\_triggered | boolean | Whether to trigger position liquidation |\
| » margin\_mode | integer(int32) | ｜ Margin模式：<br>\- 0：经典SpotMargin模式 - 1：跨CurrencyMargin模式 - 2：组合Margin模式 |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » init\_margin | string | Initial position margin |\
| » maint\_margin | string | Position maintenance margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » ask\_order\_margin | string | Margin for outstanding sell orders |\
| » bid\_order\_margin | string | Margin for outstanding buy orders |\
| » available | string | Available balance to transfer out or trade |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » orders\_limit | integer(int32) | Maximum number of outstanding orders |\
| » position\_notional\_limit | integer(int64) | Notional value upper limit, including the nominal value of positions and outstanding orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-121) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| margin\_mode | 0 |\
| margin\_mode | 1 |\
| margin\_mode | 2 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 666,\
"currency": "USDT",\
"short_enabled": true,\
"mmp_enabled": false,\
"liq_triggered": false,\
"margin_mode": 0,\
"total": "1650.443022",\
"position_value": "-40.1136",\
"equity": "1610.329422",\
"unrealised_pnl": "-0.7811",\
"init_margin": "0",\
"maint_margin": "135.541485",\
"order_margin": "139.74496",\
"ask_order_margin": "139.74496",\
"bid_order_margin": "0",\
"available": "1514.901537",\
"point": "0",\
"orders_limit": 10,\
"position_notional_limit": 1000000\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-change-history) Query account change history\
\
`GET /options/account_book`\
\
_Query account change history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-51) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit & Withdrawal\
- prem: Trading premium\
- fee: Trading fee\
- refr: Referrer rebate\
- set: Settlement P&L\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-122) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | dnw |\
| type | prem |\
| type | fee |\
| type | refr |\
| type | set |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Change time |\
| » change | string | Amount changed (USDT) |\
| » balance | string | Account total balance after change (USDT) |\
| » type | string | Changing Type:<br>\- dnw: Deposit & Withdraw<br>\- prem: Trading premium<br>\- fee: Trading fee<br>\- refr: Referrer rebate<br>\- point\_dnw: point\_fee: POINT Trading fee<br>\- point\_refr: POINT Referrer rebate |\
| » text | string | Note |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1636426005,\
    "change": "-0.16",\
    "balance": "7378.189",\
    "text": "BTC_USDT-20211216-5000-P:25",\
    "type": "fee"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-user-s-positions-of-specified-underlying) List user's positions of specified underlying\
\
`GET /options/positions`\
\
_List user's positions of specified underlying_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | false | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options contract position details\] |\
| » _None_ | object | Options contract position details |\
| »» user | integer | User ID |\
| »» underlying | string | Underlying |\
| »» underlying\_price | string | Underlying price (quote currency) |\
| »» contract | string | Options contract name |\
| »» size | integer(int64) | Position size (contract quantity) |\
| »» entry\_price | string | Entry size (quote currency) |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» mark\_iv | string | Implied volatility |\
| »» realised\_pnl | string | Realized PnL |\
| »» unrealised\_pnl | string | Unrealized PNL |\
| »» pending\_orders | integer | Current pending order quantity |\
| »» close\_order | object\|null | Current close order information, or `null` if no close order |\
| »»» id | integer(int64) | Order ID |\
| »»» price | string | Order price (quote currency) |\
| »»» is\_liq | boolean | Whether the close order is from liquidation |\
| »» delta | string | Greek letter delta |\
| »» gamma | string | Greek letter gamma |\
| »» vega | string | Greek letter vega |\
| »» theta | string | Greek letter theta |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 11027586,\
    "underlying": "BTC_USDT",\
    "underlying_price": "70000",\
    "contract": "BTC_USDT-20211216-5000-P",\
    "size": 10,\
    "entry_price": "1234",\
    "realised_pnl": "120",\
    "mark_price": "6000",\
    "mark_iv": "0.9638",\
    "unrealised_pnl": "-320",\
    "pending_orders": 1,\
    "close_order": {\
      "id": 232323,\
      "price": "5779",\
      "is_liq": false\
    },\
    "delta": "-0.0046",\
    "gamma": "0",\
    "vega": "2.87656",\
    "theta": "-1.00247"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specified-contract-position) Get specified contract position\
\
`GET /options/positions/{contract}`\
\
_Get specified contract position_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options contract position details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user | integer | User ID |\
| » underlying | string | Underlying |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » contract | string | Options contract name |\
| » size | integer(int64) | Position size (contract quantity) |\
| » entry\_price | string | Entry size (quote currency) |\
| » mark\_price | string | Current mark price (quote currency) |\
| » mark\_iv | string | Implied volatility |\
| » realised\_pnl | string | Realized PnL |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » pending\_orders | integer | Current pending order quantity |\
| » close\_order | object\|null | Current close order information, or `null` if no close order |\
| »» id | integer(int64) | Order ID |\
| »» price | string | Order price (quote currency) |\
| »» is\_liq | boolean | Whether the close order is from liquidation |\
| » delta | string | Greek letter delta |\
| » gamma | string | Greek letter gamma |\
| » vega | string | Greek letter vega |\
| » theta | string | Greek letter theta |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/positions/BTC_USDT-20211130-65000-C'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/positions/BTC_USDT-20211130-65000-C"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 11027586,\
"underlying": "BTC_USDT",\
"underlying_price": "70000",\
"contract": "BTC_USDT-20211216-5000-P",\
"size": 10,\
"entry_price": "1234",\
"realised_pnl": "120",\
"mark_price": "6000",\
"mark_iv": "0.9638",\
"unrealised_pnl": "-320",\
"pending_orders": 1,\
"close_order": {\
    "id": 232323,\
    "price": "5779",\
    "is_liq": false\
},\
"delta": "-0.0046",\
"gamma": "0",\
"vega": "2.87656",\
"theta": "-1.00247"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-user-s-liquidation-history-of-specified-underlying) List user's liquidation history of specified underlying\
\
`GET /options/position_close`\
\
_List user's liquidation history of specified underlying_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Position close time |\
| » contract | string | Options contract name |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » settle\_size | string | Settlement size |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-123) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/position_close'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/position_close"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1631764800,\
    "pnl": "-42914.291",\
    "settle_size": "-10001",\
    "side": "short",\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "settled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-an-options-order) Create an options order\
\
`POST /options/orders`\
\
_Create an options order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » contract | body | string | true | Options identifier |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » mmp | body | boolean | false | When set to true, it is an MMP order |\
| » tif | body | string | false | Time in force strategy. Market orders currently only support IOC mode |\
| » text | body | string | false | User defined information. If not empty, must follow the rules below: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-52) Detailed descriptions\
\
**» tif**: Time in force strategy. Market orders currently only support IOC mode\
\
- gtc: Good Till Cancelled\
- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only\
- poc: Pending Or Cancelled, passive order, maker only\
\
**» text**: User defined information. If not empty, must follow the rules below:\
\
1. prefixed with `t-`\
2. no longer than 28 bytes without `t-` prefix\
3. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
Besides user defined information, reserved contents are listed below, denoting how the order is created:\
\
- web: from web\
- api: from API\
- app: from mobile phones\
- auto\_deleveraging: from ADL\
- liquidation: from liquidation\
- insurance: from insurance\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-124) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-125) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = ''\
body='{"size":-1,"iceberg":0,"contract":"BTC_USDT-20210916-5000-C","text":"-","tif":"gtc","price":"100"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/orders"\
query_param=""\
body_param='{"size":-1,"iceberg":0,"contract":"BTC_USDT-20210916-5000-C","text":"-","tif":"gtc","price":"100"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"size": -1,\
"iceberg": 0,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"tif": "gtc",\
"price": "100"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-options-orders) List options orders\
\
`GET /options/orders`\
\
_List options orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| underlying | query | string | false | Underlying |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-53) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-126) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options order details\] |\
| » _None_ | object | Options order details |\
| »» id | integer(int64) | Options order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Options identifier |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| »» tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-127) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": "finished",\
    "size": -1,\
    "id": 2,\
    "iceberg": 0,\
    "is_liq": false,\
    "is_close": false,\
    "is_mmp": false,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "-",\
    "fill_price": "100",\
    "finish_as": "filled",\
    "left": 0,\
    "tif": "gtc",\
    "is_reduce_only": false,\
    "create_time": 1631763361,\
    "finish_time": 1631763397,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status-3) Cancel all orders with 'open' status\
\
`DELETE /options/orders`\
\
_Cancel all orders with 'open' status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| underlying | query | string | false | Underlying |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-128) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| side | ask |\
| side | bid |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options order details\] |\
| » _None_ | object | Options order details |\
| »» id | integer(int64) | Options order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Options identifier |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| »» tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-129) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/options/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": "finished",\
    "size": -1,\
    "id": 2,\
    "iceberg": 0,\
    "is_liq": false,\
    "is_close": false,\
    "is_mmp": false,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "-",\
    "fill_price": "100",\
    "finish_as": "filled",\
    "left": 0,\
    "tif": "gtc",\
    "is_reduce_only": false,\
    "create_time": 1631763361,\
    "finish_time": 1631763397,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-4) Query single order details\
\
`GET /options/orders/{order_id}`\
\
_Query single order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-130) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-4) Cancel single order\
\
`DELETE /options/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-131) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/options/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders-3) Countdown cancel orders\
\
`POST /options/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Option order heartbeat detection, when the `timeout` time set by the user is reached, if the existing countdown is not canceled or a new countdown is set, the related `option pending order` will be automatically canceled.\
This interface can be called repeatedly to set a new countdown or cancel the countdown.\
Usage example: Repeat this interface at intervals of 30 seconds, with each countdown `timeout` set to 30 (seconds).\
If this interface is not called again within 30 seconds, all pending orders on the `underlying` `contract` you specified will be automatically cancelled. If `underlying` `contract` is not specified, user will be automatically cancelled\
If `timeout` is set to 0 within 30 seconds, the countdown timer will expire and the automatic order cancellation function will be cancelled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » contract | body | string | false | Options contract name |\
| » underlying | body | string | false | Underlying |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-54) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"contract":"BTC_USDT-20241001-46000-C","underlying":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"contract":"BTC_USDT-20241001-46000-C","underlying":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"contract": "BTC_USDT-20241001-46000-C",\
"underlying": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-4) Query personal trading records\
\
`GET /options/my_trades`\
\
_Query personal trading records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-55) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Options contract name |\
| » order\_id | integer | Related order ID |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » role | string | Trade role. taker - taker, maker - maker |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-132) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/my_trades'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/my_trades"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "underlying_price": "48000",\
    "size": 1,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "id": 1,\
    "role": "taker",\
    "create_time": 1631763397,\
    "order_id": 4,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-settings) MMP Settings\
\
`POST /options/mmp`\
\
_MMP Settings_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » underlying | body | string | true | Underlying |\
| » window | body | integer(int32) | true | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | body | integer(int32) | true | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | body | string | true | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | body | string | true | Upper limit of net delta value (positive number, up to 2 decimal places) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | MMP Information | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MMP Settings_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » underlying | string | Underlying |\
| » window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| » trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| » frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp'\
query_param = ''\
body='{"underlying":"BTC_USDT","window":5000,"frozen_period":200,"qty_limit":"10","delta_limit":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/mmp"\
query_param=""\
body_param='{"underlying":"BTC_USDT","window":5000,"frozen_period":200,"qty_limit":"10","delta_limit":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10",\
"trigger_time_ms": 0,\
"frozen_until_ms": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-query) MMP Query.\
\
`GET /options/mmp`\
\
_MMP Query._\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | false | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[MMP Settings\] |\
| » _None_ | object | MMP Settings |\
| »» underlying | string | Underlying |\
| »» window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| »» frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| »» qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| »» delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| »» trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| »» frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/mmp"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "underlying": "BTC_USDT",\
    "window": 5000,\
    "frozen_period": 200,\
    "qty_limit": "10",\
    "delta_limit": "10",\
    "trigger_time_ms": 0,\
    "frozen_until_ms": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-reset) MMP Reset\
\
`POST /options/mmp/reset`\
\
_MMP Reset_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » underlying | body | string | true | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | MMP Information | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MMP Settings_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » underlying | string | Underlying |\
| » window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| » trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| » frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp/reset'\
query_param = ''\
body='{"underlying":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/mmp/reset"\
query_param=""\
body_param='{"underlying":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"underlying": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10",\
"trigger_time_ms": 0,\
"frozen_until_ms": 0\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#earnuni) EarnUni\
\
Lend & Earn\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-lending-currency-list) Query lending currency list\
\
`GET /earn/uni/currencies`\
\
_Query lending currency list_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Currency detail\] |\
| » _None_ | object | Currency detail |\
| »» currency | string | Currency name |\
| »» min\_lend\_amount | string | The minimum lending amount, in the unit of the currency |\
| »» max\_lend\_amount | string | The total maximum lending amount, in USDT |\
| »» max\_rate | string | Maximum rate (Hourly) |\
| »» min\_rate | string | Minimum rate (Hourly) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/uni/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "AE",\
    "min_lend_amount": "100",\
    "max_lend_amount": "200000000",\
    "max_rate": "0.00057",\
    "min_rate": "0.000001"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-lending-currency-details) Query single lending currency details\
\
`GET /earn/uni/currencies/{currency}`\
\
_Query single lending currency details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Currency detail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » min\_lend\_amount | string | The minimum lending amount, in the unit of the currency |\
| » max\_lend\_amount | string | The total maximum lending amount, in USDT |\
| » max\_rate | string | Maximum rate (Hourly) |\
| » min\_rate | string | Minimum rate (Hourly) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/currencies/btc'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/uni/currencies/btc \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"min_lend_amount": "100",\
"max_lend_amount": "200000000",\
"max_rate": "0.00057",\
"min_rate": "0.000001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-lending-or-redemption) Create lending or redemption\
\
`POST /earn/uni/lends`\
\
_Create lending or redemption_\
\
Lending: When lending, a minimum lending rate must be set. After successful lending is determined on an hourly basis, earnings will be calculated based on the determined rate.\
Earnings for each hour will be settled at the top of the hour. If lending fails due to an excessively high interest rate, no interest will be earned for that hour.\
If funds are redeemed before the hourly for that hour.\
Priority: Under the same interest rate, wealth management products created or modified earlier will be prioritized for lending.\
Redemption: For funds that failed to be lent, redemption will be credited immediately.\
For funds successfully lent, they are entitled to the earnings for that hour, and redemption will be credited in the next hourly interval.\
Note: The two minutes before and after the hourly mark are the settlement period, during which lending and redemption are prohibited.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency name |\
| » amount | body | string | true | Amount to deposit into lending pool |\
| » type | body | string | true | Operation type: lend - Lend, redeem - Redeem |\
| » min\_rate | body | string | false | Minimum interest rate. If set too high, lending may fail and no interest will be earned. Required for lending operations. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-133) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | lend |\
| » type | redeem |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
body='{"currency":"AE","amount":"100","min_rate":"0.00001","type":"lend"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/uni/lends"\
query_param=""\
body_param='{"currency":"AE","amount":"100","min_rate":"0.00001","type":"lend"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "AE",\
"amount": "100",\
"min_rate": "0.00001",\
"type": "lend"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-lending-order-list) Query user's lending order list\
\
`GET /earn/uni/lends`\
\
_Query user's lending order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Loan record |\
| »» currency | string | Currency |\
| »» current\_amount | string | Current amount |\
| »» amount | string | Total Lending Amount |\
| »» lent\_amount | string | Lent Amount |\
| »» frozen\_amount | string | Pending Redemption Amount |\
| »» min\_rate | string | Minimum interest rate |\
| »» interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
| »» reinvest\_left\_amount | string | Non-reinvested Amount |\
| »» create\_time | integer(int64) | Lending Order Creation Time |\
| »» update\_time | integer(int64) | Lending Order Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/lends"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "current_amount": "20.999992",\
    "amount": "20.999992",\
    "lent_amount": "0",\
    "frozen_amount": "0",\
    "min_rate": "0.1",\
    "interest_status": "interest_dividend",\
    "reinvest_left_amount": 0,\
    "create_time": 1673247054000,\
    "update_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-user-lending-information) Amend user lending information\
\
`PATCH /earn/uni/lends`\
\
_Amend user lending information_\
\
Currently only supports amending minimum interest rate (hourly)\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | false | Currency name |\
| » min\_rate | body | string | false | Minimum interest rate |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Updated successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
body='{"currency":"AE","min_rate":"0.0001"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PATCH', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PATCH', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PATCH"\
url="/earn/uni/lends"\
query_param=""\
body_param='{"currency":"AE","min_rate":"0.0001"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "AE",\
"min_rate": "0.0001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-lending-transaction-records) Query lending transaction records\
\
`GET /earn/uni/lend_records`\
\
_Query lending transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Operation type: lend - Lend, redeem - Redeem |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-56) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-134) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | lend |\
| type | redeem |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Lending Record |\
| »» currency | string | Currency name |\
| »» amount | string | Current Amount |\
| »» last\_wallet\_amount | string | Previous Available Amount |\
| »» last\_lent\_amount | string | Previous Lent Amount |\
| »» last\_frozen\_amount | string | Previous Frozen Amount |\
| »» type | string | Record Type: lend - Lend, redeem - Redeem |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lend_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/lend_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "lend",\
    "currency": "BTC",\
    "amount": "1",\
    "last_wallet_amount": "0.2",\
    "last_lent_amount": "0",\
    "last_frozen_amount": "0",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-total-interest-income-for-specified-currency) Query user's total interest income for specified currency\
\
`GET /earn/uni/interests/{currency}`\
\
_Query user's total interest income for specified currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UniLendInterest_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » interest | string | Interest income |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interests/btc'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interests/btc"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"interest": "123.345"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-dividend-records) Query user dividend records\
\
`GET /earn/uni/interest_records`\
\
_Query user dividend records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-57) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Interest Record |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» currency | string | Currency |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": 1,\
    "currency": "AE",\
    "actual_rate": "0.0005",\
    "interest": "0.05",\
    "interest_status": "interest_dividend",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-interest-compounding-status) Query currency interest compounding status\
\
`GET /earn/uni/interest_status/{currency}`\
\
_Query currency interest compounding status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UniCurrencyInterest_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interest_status/btc'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interest_status/btc"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "BTC",\
"interest_status": "interest_dividend"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#uniloan-currency-annualized-trend-chart) UniLoan currency annualized trend chart\
\
`GET /earn/uni/chart`\
\
_UniLoan currency annualized trend chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | true | Start timestamp in seconds, maximum span 30 days |\
| to | query | integer(int64) | true | End timestamp in seconds, maximum span 30 days |\
| asset | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | none | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | none |\
| » value | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/chart'\
query_param = 'from=1719763200&to=1722441600&asset=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/chart"\
query_param="from=1719763200&to=1722441600&asset=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1719705600,\
    "value": "0.01"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#currency-estimated-annualized-interest-rate) Currency estimated annualized interest rate\
\
`GET /earn/uni/rate`\
\
_Currency estimated annualized interest rate_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | none | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | none |\
| » est\_rate | string | Unconverted percentage |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/rate'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/rate"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "est_rate": "0.0226"\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#collateral-loan) Collateral-loan\
\
Collateral loan, only for single currency collateral\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-collateral-loan-order) Place collateral loan order\
\
`POST /loan/collateral/orders`\
\
_Place collateral loan order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » collateral\_amount | body | string | true | Collateral amount |\
| » collateral\_currency | body | string | true | Collateral currency |\
| » borrow\_amount | body | string | true | Borrowed amount |\
| » borrow\_currency | body | string | true | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders'\
query_param = ''\
body='{"collateral_amount":"1","collateral_currency":"BTC","borrow_amount":"49","borrow_currency":"USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/orders"\
query_param=""\
body_param='{"collateral_amount":"1","collateral_currency":"BTC","borrow_amount":"49","borrow_currency":"USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_amount": "1",\
"collateral_currency": "BTC",\
"borrow_amount": "49",\
"borrow_currency": "USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005578\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-loan-order-list) Query collateral loan order list\
\
`GET /loan/collateral/orders`\
\
_Query collateral loan order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| collateral\_currency | query | string | false | Collateral currency |\
| borrow\_currency | query | string | false | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Collateral order\] |\
| » _None_ | object | Collateral order |\
| »» order\_id | integer(int64) | Order ID |\
| »» collateral\_currency | string | Collateral currency |\
| »» collateral\_amount | string | Collateral amount |\
| »» borrow\_currency | string | Borrowed currency |\
| »» borrow\_amount | string | Borrowed amount |\
| »» repaid\_amount | string | Repaid amount |\
| »» repaid\_principal | string | Repaid principal |\
| »» repaid\_interest | string | Repaid interest |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» current\_ltv | string | Current collateralization rate |\
| »» liquidate\_ltv | string | Liquidation collateralization rate |\
| »» status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» left\_repay\_total | string | Outstanding principal and interest (outstanding principal + outstanding interest) |\
| »» left\_repay\_principal | string | Outstanding principal |\
| »» left\_repay\_interest | string | Outstanding interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000421,\
    "collateral_currency": "BTC",\
    "borrow_currency": "USDT",\
    "collateral_amount": "1",\
    "borrow_amount": "1000",\
    "repaid_amount": "10",\
    "repaid_principal": "10",\
    "repaid_interest": "0",\
    "init_ltv": "0.0003934533764831",\
    "current_ltv": "0.0004521768651985",\
    "liquidate_ltv": "0.9",\
    "status": "initial_status",\
    "borrow_time": 1688462668,\
    "left_repay_total": "990.0219384",\
    "left_repay_interest": "0.0219384"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-5) Query single order details\
\
`GET /loan/collateral/orders/{order_id}`\
\
_Query single order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details queried successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Collateral order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » collateral\_currency | string | Collateral currency |\
| » collateral\_amount | string | Collateral amount |\
| » borrow\_currency | string | Borrowed currency |\
| » borrow\_amount | string | Borrowed amount |\
| » repaid\_amount | string | Repaid amount |\
| » repaid\_principal | string | Repaid principal |\
| » repaid\_interest | string | Repaid interest |\
| » init\_ltv | string | Initial collateralization rate |\
| » current\_ltv | string | Current collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
| » status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| » borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| » left\_repay\_total | string | Outstanding principal and interest (outstanding principal + outstanding interest) |\
| » left\_repay\_principal | string | Outstanding principal |\
| » left\_repay\_interest | string | Outstanding interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders/100001'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/orders/100001"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10000421,\
"collateral_currency": "BTC",\
"borrow_currency": "USDT",\
"collateral_amount": "1",\
"borrow_amount": "1000",\
"repaid_amount": "10",\
"repaid_principal": "10",\
"repaid_interest": "0",\
"init_ltv": "0.0003934533764831",\
"current_ltv": "0.0004521768651985",\
"liquidate_ltv": "0.9",\
"status": "initial_status",\
"borrow_time": 1688462668,\
"left_repay_total": "990.0219384",\
"left_repay_interest": "0.0219384"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#collateral-loan-repayment) Collateral loan repayment\
\
`POST /loan/collateral/repay`\
\
_Collateral loan repayment_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » repay\_amount | body | string | true | Repayment amount, it is mandatory when making partial repayments |\
| » repaid\_all | body | boolean | true | Repayment method, set to `true` for full repayment, and `false` for partial repayment; |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-58) Detailed descriptions\
\
**» repaid\_all**: Repayment method, set to `true` for full repayment, and `false` for partial repayment;\
When partial repayment, the repay\_amount parameter cannot be greater than the remaining amount to be repaid by the user.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Repay_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » repaid\_principal | string | Principal |\
| » repaid\_interest | string | Interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/repay'\
query_param = ''\
body='{"order_id":37438962,"repay_amount":"1000","repaid_all":false}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/repay"\
query_param=""\
body_param='{"order_id":37438962,"repay_amount":"1000","repaid_all":false}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 37438962,\
"repay_amount": "1000",\
"repaid_all": false\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"repaid_principal": "11",\
"repaid_interest": "111"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-loan-repayment-records) Query collateral loan repayment records\
\
`GET /loan/collateral/repay_records`\
\
_Query collateral loan repayment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| source | query | string | true | Operation type: repay - Regular repayment, liquidate - Liquidation |\
| borrow\_currency | query | string | false | Borrowed currency |\
| collateral\_currency | query | string | false | Collateral currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Repayment record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Repayment record ID |\
| »» repaid\_amount | string | Repayment amount |\
| »» borrow\_currency | string | Borrowed currency |\
| »» collateral\_currency | string | Collateral currency |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp |\
| »» repay\_time | integer(int64) | Repayment time, timestamp |\
| »» total\_interest | string | Total interest |\
| »» before\_left\_principal | string | Principal to be repaid before repayment |\
| »» after\_left\_principal | string | Principal to be repaid after repayment |\
| »» before\_left\_collateral | string | Collateral amount before repayment |\
| »» after\_left\_collateral | string | Collateral amount after repayment |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/repay_records'\
query_param = 'source=repay'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/repay_records"\
query_param="source=repay"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000425,\
    "record_id": 181,\
    "repaid_amount": "10.00000000000000000000",\
    "borrow_currency": "USDT",\
    "collateral_currency": "BTC",\
    "collateral_amount": "1.00000000000000000000",\
    "init_ltv": "0.00039345337648310000",\
    "borrow_time": 1688471851,\
    "repay_time": 1688526310,\
    "total_interest": "0.25446901544300000000",\
    "before_left_principal": "11.00000000",\
    "pre_left_principal": "990.00000000000000000000",\
    "after_left_principal": "990.00000000000000000000",\
    "before_left_collateral": "1.00000000000000000000",\
    "after_left_collateral": "1.00000000000000000000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#increase-or-redeem-collateral) Increase or redeem collateral\
\
`POST /loan/collateral/collaterals`\
\
_Increase or redeem collateral_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » collateral\_currency | body | string | true | Collateral currency |\
| » collateral\_amount | body | string | true | Collateral amount |\
| » type | body | string | true | Operation type: append - add collateral, redeem - withdraw collateral |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/collaterals'\
query_param = ''\
body='{"collateral_amount":"1212","collateral_currency":"BTC","order_id":1130,"type":"append"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/collaterals"\
query_param=""\
body_param='{"collateral_amount":"1212","collateral_currency":"BTC","order_id":1130,"type":"append"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_amount": "1212",\
"collateral_currency": "BTC",\
"order_id": 1130,\
"type": "append"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-adjustment-records) Query collateral adjustment records\
\
`GET /loan/collateral/collaterals`\
\
_Query collateral adjustment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| borrow\_currency | query | string | false | Borrowed currency |\
| collateral\_currency | query | string | false | Collateral currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Collateral record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Collateral record ID |\
| »» borrow\_currency | string | Borrowed currency |\
| »» borrow\_amount | string | Borrowed amount |\
| »» collateral\_currency | string | Collateral currency |\
| »» before\_collateral | string | Collateral amount before adjustment |\
| »» after\_collateral | string | Collateral amount after adjustment |\
| »» before\_ltv | string | Collateral ratio before adjustment |\
| »» after\_ltv | string | Collateral ratio after adjustment |\
| »» operate\_time | integer(int64) | Operation time, timestamp in seconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/collaterals'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/collaterals"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000417,\
    "record_id": 10000452,\
    "borrow_currency": "USDT",\
    "borrow_amount": "1000.00000000000000000000",\
    "collateral_currency": "BTC",\
    "pre_collateral": "1.00000000000000000000",\
    "after_collateral": "2.00000000000000000000",\
    "pre_ltv": "0.00039345555621480000",\
    "after_ltv": "0.00019672777810740000",\
    "operate_time": 1688461924\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-total-borrowing-and-collateral-amount) Query user's total borrowing and collateral amount\
\
`GET /loan/collateral/total_amount`\
\
_Query user's total borrowing and collateral amount_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's total borrowing and collateral amount_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » borrow\_amount | string | Total borrowing amount in USDT |\
| » collateral\_amount | string | Total collateral amount in USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/total_amount'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/total_amount"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"borrow_amount": "11",\
"collateral_amount": "111"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-collateralization-ratio-and-remaining-borrowable-currencies) Query user's collateralization ratio and remaining borrowable currencies\
\
`GET /loan/collateral/ltv`\
\
_Query user's collateralization ratio and remaining borrowable currencies_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| collateral\_currency | query | string | true | Collateral currency |\
| borrow\_currency | query | string | true | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's currency statistics data_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » collateral\_currency | string | Collateral currency |\
| » borrow\_currency | string | Borrowed currency |\
| » init\_ltv | string | Initial collateralization rate |\
| » alert\_ltv | string | Warning collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
| » min\_borrow\_amount | string | Minimum borrowable amount for the loan currency |\
| » left\_borrowable\_amount | string | Remaining borrowable amount for the loan currency |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/ltv'\
query_param = 'collateral_currency=BTC&borrow_currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/ltv"\
query_param="collateral_currency=BTC&borrow_currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"collateral_currency": "BTC",\
"borrow_currency": "USDT",\
"init_ltv": "0.7",\
"alert_ltv": "0.8",\
"liquidate_ltv": "0.9",\
"min_borrow_amount": "3",\
"left_borrowable_amount": "4233030.635065916703"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-supported-borrowing-and-collateral-currencies) Query supported borrowing and collateral currencies\
\
`GET /loan/collateral/currencies`\
\
_Query supported borrowing and collateral currencies_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| loan\_currency | query | string | false | Parameter loan\_currency. If omitted, returns all supported borrowing currencies; if provided, returns the array of collateral currencies supported for that borrowing currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Supported borrowing and collateral currencies |\
| »» loan\_currency | string | Borrowed currency |\
| »» collateral\_currency | array | List of supported collateral currencies |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/collateral/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "loan_currency": "BTC",\
    "collateral_currency": [\
      "BTC",\
      "ETH",\
      "GT"\
    ]\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#multi-collateral-loan) Multi-collateral-loan\
\
Multi-currency collateral\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-multi-currency-collateral-order) Place multi-currency collateral order\
\
`POST /loan/multi_collateral/orders`\
\
_Place multi-currency collateral order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | string | false | Order ID |\
| » order\_type | body | string | false | current - current rate, fixed - fixed rate, defaults to current if not specified |\
| » fixed\_type | body | string | false | Fixed interest rate lending period: 7d - 7 days, 30d - 30 days. Required for fixed rate |\
| » fixed\_rate | body | string | false | Fixed interest rate, required for fixed rate |\
| » auto\_renew | body | boolean | false | Fixed interest rate, auto-renewal |\
| » auto\_repay | body | boolean | false | Fixed interest rate, auto-repayment |\
| » borrow\_currency | body | string | true | Borrowed currency |\
| » borrow\_amount | body | string | true | Borrowed amount |\
| » collateral\_currencies | body | array | false | Collateral currency and amount |\
| »» CollateralCurrency | body | object | false | none |\
| »»» currency | body | string | false | Currency |\
| »»» amount | body | string | false | Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders'\
query_param = ''\
body='{"order_id":1721387470,"order_type":"fixed","fixed_type":"7d","fixed_rate":0.00001,"auto_renew":true,"auto_repay":true,"borrow_currency":"BTC","borrow_amount":"1","collateral_currencies":[{"currency":"USDT","amount":"1000"}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/orders"\
query_param=""\
body_param='{"order_id":1721387470,"order_type":"fixed","fixed_type":"7d","fixed_rate":0.00001,"auto_renew":true,"auto_repay":true,"borrow_currency":"BTC","borrow_amount":"1","collateral_currencies":[{"currency":"USDT","amount":"1000"}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 1721387470,\
"order_type": "fixed",\
"fixed_type": "7d",\
"fixed_rate": 0.00001,\
"auto_renew": true,\
"auto_repay": true,\
"borrow_currency": "BTC",\
"borrow_amount": "1",\
"collateral_currencies": [\
    {\
      "currency": "USDT",\
      "amount": "1000"\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005578\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-multi-currency-collateral-order-list) Query multi-currency collateral order list\
\
`GET /loan/multi_collateral/orders`\
\
_Query multi-currency collateral order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| sort | query | string | false | Sort type: `time_desc` \- Created time descending (default), `ltv_asc` \- Collateral ratio ascending, `ltv_desc` \- Collateral ratio descending. |\
| order\_type | query | string | false | Order type: current - Query current orders, fixed - Query fixed orders, defaults to current orders if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Multi-Collateral Order\] |\
| » _None_ | object | Multi-Collateral Order |\
| »» order\_id | string | Order ID |\
| »» order\_type | string | current - current, fixed - fixed |\
| »» fixed\_type | string | Fixed interest rate loan periods: 7d - 7 days, 30d - 30 days |\
| »» fixed\_rate | string | Fixed interest rate |\
| »» expire\_time | integer(int64) | Expiration time, timestamp, unit in seconds |\
| »» auto\_renew | boolean | Fixed interest rate, auto-renewal |\
| »» auto\_repay | boolean | Fixed interest rate, auto-repayment |\
| »» current\_ltv | string | Current collateralization rate |\
| »» status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» total\_left\_repay\_usdt | string | Total outstanding value converted to USDT |\
| »» total\_left\_collateral\_usdt | string | Total collateral value converted to USDT |\
| »» borrow\_currencies | array | Borrowing Currency List |\
| »»» BorrowCurrencyInfo | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» left\_repay\_principal | string | Outstanding principal |\
| »»»» left\_repay\_interest | string | Outstanding interest |\
| »»»» left\_repay\_usdt | string | Remaining total outstanding value converted to USDT |\
| »»» collateral\_currencies | array | Collateral Currency List |\
| »»»» CollateralCurrencyInfo | object | none |\
| »»»»» currency | string | Currency |\
| »»»»» index\_price | string | Currency Index Price |\
| »»»»» left\_collateral | string | Remaining collateral amount |\
| »»»»» left\_collateral\_usdt | string | Remaining collateral value converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "10005578",\
    "order_type": "fixed",\
    "fixed_type": "7d",\
    "fixed_rate": 0.00001,\
    "expire_time": 1703820105,\
    "auto_renew": true,\
    "auto_repay": true,\
    "current_ltv": "0.0001004349664281",\
    "status": "lent",\
    "borrow_time": 1702615021,\
    "total_left_repay_usdt": "106.491212982",\
    "total_left_collateral_usdt": "1060300.18",\
    "borrow_currencies": [\
      {\
        "currency": "GT",\
        "index_price": "10.6491",\
        "left_repay_principal": "10",\
        "left_repay_interest": "0.00002",\
        "left_repay_usdt": "106.491212982"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "112794.7",\
        "left_collateral": "9.4",\
        "left_collateral_usdt": "1060270.18"\
      },\
      {\
        "currency": "USDT",\
        "index_price": "1",\
        "left_collateral": "30",\
        "left_collateral_usdt": "30"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-order-details) Query order details\
\
`GET /loan/multi_collateral/orders/{order_id}`\
\
_Query order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details queried successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-Collateral Order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | string | Order ID |\
| » order\_type | string | current - current, fixed - fixed |\
| » fixed\_type | string | Fixed interest rate loan periods: 7d - 7 days, 30d - 30 days |\
| » fixed\_rate | string | Fixed interest rate |\
| » expire\_time | integer(int64) | Expiration time, timestamp, unit in seconds |\
| » auto\_renew | boolean | Fixed interest rate, auto-renewal |\
| » auto\_repay | boolean | Fixed interest rate, auto-repayment |\
| » current\_ltv | string | Current collateralization rate |\
| » status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| » borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| » total\_left\_repay\_usdt | string | Total outstanding value converted to USDT |\
| » total\_left\_collateral\_usdt | string | Total collateral value converted to USDT |\
| » borrow\_currencies | array | Borrowing Currency List |\
| »» BorrowCurrencyInfo | object | none |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» left\_repay\_principal | string | Outstanding principal |\
| »»» left\_repay\_interest | string | Outstanding interest |\
| »»» left\_repay\_usdt | string | Remaining total outstanding value converted to USDT |\
| »» collateral\_currencies | array | Collateral Currency List |\
| »»» CollateralCurrencyInfo | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» left\_collateral | string | Remaining collateral amount |\
| »»»» left\_collateral\_usdt | string | Remaining collateral value converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": "10005578",\
"order_type": "fixed",\
"fixed_type": "7d",\
"fixed_rate": 0.00001,\
"expire_time": 1703820105,\
"auto_renew": true,\
"auto_repay": true,\
"current_ltv": "0.0001004349664281",\
"status": "lent",\
"borrow_time": 1702615021,\
"total_left_repay_usdt": "106.491212982",\
"total_left_collateral_usdt": "1060300.18",\
"borrow_currencies": [\
    {\
      "currency": "GT",\
      "index_price": "10.6491",\
      "left_repay_principal": "10",\
      "left_repay_interest": "0.00002",\
      "left_repay_usdt": "106.491212982"\
    }\
],\
"collateral_currencies": [\
    {\
      "currency": "BTC",\
      "index_price": "112794.7",\
      "left_collateral": "9.4",\
      "left_collateral_usdt": "1060270.18"\
    },\
    {\
      "currency": "USDT",\
      "index_price": "1",\
      "left_collateral": "30",\
      "left_collateral_usdt": "30"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#multi-currency-collateral-repayment) Multi-currency collateral repayment\
\
`POST /loan/multi_collateral/repay`\
\
_Multi-currency collateral repayment_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » repay\_items | body | array | true | Repay Currency Item |\
| »» MultiLoanRepayItem | body | object | false | none |\
| »»» currency | body | string | false | Repayment currency |\
| »»» amount | body | string | false | Amount |\
| »»» repaid\_all | body | boolean | true | Repayment method, set to true for full repayment, false for partial repayment |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-currency collateral repayment_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » repaid\_currencies | array | Repay Currency List |\
| »» RepayCurrencyRes | object | none |\
| »»» succeeded | boolean | Whether the repayment was successful |\
| »»» label | string | Error identifier for failed operations; empty when successful |\
| »»» message | string | Error description for failed operations; empty when successful |\
| »»» currency | string | Repayment currency |\
| »»» repaid\_principal | string | Principal |\
| »»» repaid\_interest | string | Principal |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/repay'\
query_param = ''\
body='{"order_id":10005578,"repay_items":[{"currency":"btc","amount":"1","repaid_all":false}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/repay"\
query_param=""\
body_param='{"order_id":10005578,"repay_items":[{"currency":"btc","amount":"1","repaid_all":false}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 10005578,\
"repay_items": [\
    {\
      "currency": "btc",\
      "amount": "1",\
      "repaid_all": false\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005679,\
"repaid_currencies": [\
    {\
      "succeeded": false,\
      "label": "INVALID_PARAM_VALUE",\
      "message": "Invalid parameter value",\
      "currency": "BTC",\
      "repaid_principal": "1",\
      "repaid_interest": "0.0001"\
    },\
    {\
      "succeeded": true,\
      "currency": "BTC",\
      "repaid_principal": "1",\
      "repaid_interest": "0.0001"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-multi-currency-collateral-repayment-records) Query multi-currency collateral repayment records\
\
`GET /loan/multi_collateral/repay`\
\
_Query multi-currency collateral repayment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | true | Operation type: repay - Regular repayment, liquidate - Liquidation |\
| borrow\_currency | query | string | false | Borrowed currency |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-Collateral Repayment Record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Repayment record ID |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» before\_ltv | string | Ltv before the operation |\
| »» after\_ltv | string | Ltv after the operation |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» repay\_time | integer(int64) | Repayment time, timestamp in seconds |\
| »» borrow\_currencies | array | List of borrowing information |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» collateral\_currencies | array | List of collateral information |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» repaid\_currencies | array | Repay Currency List |\
| »»» RepayRecordRepaidCurrency | object | none |\
| »»»» currency | string | Repayment currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» repaid\_amount | string | Repayment amount |\
| »»»» repaid\_principal | string | Principal |\
| »»»» repaid\_interest | string | Interest |\
| »»»» repaid\_amount\_usdt | string | Repayment amount converted to USDT |\
| »»» total\_interest\_list | array | Total Interest List |\
| »»»» RepayRecordTotalInterest | object | none |\
| »»»»» currency | string | Currency |\
| »»»»» index\_price | string | Currency Index Price |\
| »»»»» amount | string | Interest Amount |\
| »»»»» amount\_usdt | string | Interest amount converted to USDT |\
| »»»» left\_repay\_interest\_list | array | List of remaining interest to be repaid |\
| »»»»» RepayRecordLeftInterest | object | none |\
| »»»»»» currency | string | Currency |\
| »»»»»» index\_price | string | Currency Index Price |\
| »»»»»» before\_amount | string | Interest amount before repayment |\
| »»»»»» before\_amount\_usdt | string | Converted value of interest before repayment in USDT |\
| »»»»»» after\_amount | string | Interest amount after repayment |\
| »»»»»» after\_amount\_usdt | string | Converted value of interest after repayment in USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/repay'\
query_param = 'type=repay'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/repay"\
query_param="type=repay"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10005679,\
    "record_id": 1348,\
    "init_ltv": "0.2141",\
    "before_ltv": "0.215",\
    "after_ltv": "0.312",\
    "borrow_time": 1702995889,\
    "repay_time": 1703053927,\
    "borrow_currencies": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "before_amount": "1",\
        "before_amount_usdt": "103.02",\
        "after_amount": "0.999017",\
        "after_amount_usdt": "102.91873134"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "ETC",\
        "index_price": "0.6014228107",\
        "before_amount": "1000",\
        "before_amount_usdt": "601.4228107",\
        "after_amount": "1000",\
        "after_amount_usdt": "601.4228107"\
      }\
    ],\
    "repaid_currencies": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "repaid_amount": "0.001",\
        "repaid_principal": "0.000983",\
        "repaid_interest": "0.000017",\
        "repaid_amount_usdt": "0.10302"\
      }\
    ],\
    "total_interest_list": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "amount": "0.000017",\
        "amount_usdt": "0.00175134"\
      }\
    ],\
    "left_repay_interest_list": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "before_amount": "0.000017",\
        "before_amount_usdt": "0.00175134",\
        "after_amount": "0",\
        "after_amount_usdt": "0"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#add-or-withdraw-collateral) Add or withdraw collateral\
\
`POST /loan/multi_collateral/mortgage`\
\
_Add or withdraw collateral_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » type | body | string | true | Operation type: append - add collateral, redeem - withdraw collateral |\
| » collaterals | body | array | false | Collateral currency list |\
| »» currency | body | string | false | Currency |\
| »» amount | body | string | false | Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-collateral adjustment result_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » collateral\_currencies | array | Collateral currency information |\
| »» CollateralCurrencyRes | object | none |\
| »»» succeeded | boolean | Update success status |\
| »»» label | string | Error identifier for failed operations; empty when successful |\
| »»» message | string | Error description for failed operations; empty when successful |\
| »»» currency | string | Currency |\
| »»» amount | string | Successfully operated collateral quantity; 0 if operation fails |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/mortgage'\
query_param = ''\
body='{"order_id":10005578,"type":"append","collaterals":[{"currency":"btc","amount":"0.5"}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/mortgage"\
query_param=""\
body_param='{"order_id":10005578,"type":"append","collaterals":[{"currency":"btc","amount":"0.5"}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 10005578,\
"type": "append",\
"collaterals": [\
    {\
      "currency": "btc",\
      "amount": "0.5"\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005679,\
"collateral_currencies": [\
    {\
      "succeeded": true,\
      "currency": "btc",\
      "amount": "0.5"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-adjustment-records-2) Query collateral adjustment records\
\
`GET /loan/multi_collateral/mortgage`\
\
_Query collateral adjustment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| collateral\_currency | query | string | false | Collateral currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-Collateral adjustment record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Collateral record ID |\
| »» before\_ltv | string | Collateral ratio before adjustment |\
| »» after\_ltv | string | Collateral ratio before adjustment |\
| »» operate\_time | integer(int64) | Operation time, timestamp in seconds |\
| »» borrow\_currencies | array | Borrowing Currency List |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» collateral\_currencies | array | Collateral Currency List |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/mortgage'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/mortgage"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000417,\
    "record_id": 10000452,\
    "before_ltv": "0.00039345555621480000",\
    "after_ltv": "0.00019672777810740000",\
    "operate_time": 1688461924,\
    "borrow_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "30000",\
        "before_amount": "0.1",\
        "before_amount_usdt": "1000",\
        "after_amount": "0.6",\
        "after_amount_usdt": "1006"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "30000",\
        "before_amount": "0.1",\
        "before_amount_usdt": "1000",\
        "after_amount": "0.6",\
        "after_amount_usdt": "1006"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-collateral-and-borrowing-currency-quota-information) Query user's collateral and borrowing currency quota information\
\
`GET /loan/multi_collateral/currency_quota`\
\
_Query user's collateral and borrowing currency quota information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | true | Currency type: collateral - Collateral currency, borrow - Borrowing currency |\
| currency | query | string | true | When it is a collateral currency, multiple currencies can be provided separated by commas; when it is a borrowing currency, only one currency can be provided. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Currency Quota |\
| »» currency | string | Currency |\
| »» index\_price | string | Currency Index Price |\
| »» min\_quota | string | Minimum borrowing/collateral limit for the currency |\
| »» left\_quota | string | Remaining borrowing/collateral quota for the currency |\
| »» left\_quote\_usdt | string | Remaining currency limit converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/currency_quota'\
query_param = 'type=collateral&currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/currency_quota"\
query_param="type=collateral&currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "index_price": "35306.1",\
    "min_quota": "0",\
    "left_quota": "2768152.4958445218723677",\
    "left_quote_usdt": "97732668833.536273678"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-supported-borrowing-and-collateral-currencies-for-multi-currency-collateral) Query supported borrowing and collateral currencies for multi-currency collateral\
\
`GET /loan/multi_collateral/currencies`\
\
_Query supported borrowing and collateral currencies for multi-currency collateral_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Borrowing and collateral currencies supported for Multi-Collateral_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » loan\_currencies | array | List of supported borrowing currencies |\
| »» MultiLoanItem | object | none |\
| »»» currency | string | Currency |\
| »»» price | string | Latest price of the currency |\
| »» collateral\_currencies | array | List of supported collateral currencies |\
| »»» MultiCollateralItem | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» discount | string | Discount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"loan_currencies": [\
    {\
      "currency": "BTC",\
      "price": "1212"\
    },\
    {\
      "currency": "GT",\
      "price": "12"\
    }\
],\
"collateral_currencies": [\
    {\
      "currency": "BTC",\
      "index_price": "1212",\
      "discount": "0.7"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateralization-ratio-information) Query collateralization ratio information\
\
`GET /loan/multi_collateral/ltv`\
\
_Query collateralization ratio information_\
\
Multi-currency collateral ratio is fixed, independent of currency\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-collateral ratio_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » init\_ltv | string | Initial collateralization rate |\
| » alert\_ltv | string | Warning collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/ltv'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/ltv \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"init_ltv": "0.7",\
"alert_ltv": "0.8",\
"liquidate_ltv": "0.9"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-s-7-day-and-30-day-fixed-interest-rates) Query currency's 7-day and 30-day fixed interest rates\
\
`GET /loan/multi_collateral/fixed_rate`\
\
_Query currency's 7-day and 30-day fixed interest rates_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-collateral fixed interest rate |\
| »» currency | string | Currency |\
| »» rate\_7d | string | Fixed interest rate for 7-day lending period |\
| »» rate\_30d | string | Fixed interest rate for 30-day lending period |\
| »» update\_time | integer(int64) | Update time, timestamp in seconds |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/fixed_rate'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/fixed_rate \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "rate_7d": "0.000023",\
    "rate_30d": "0.1",\
    "update_time": 1703820105\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-s-current-interest-rate) Query currency's current interest rate\
\
`GET /loan/multi_collateral/current_rate`\
\
_Query currency's current interest rate_\
\
Query currency's current interest rate for the previous hour, current interest rate updates hourly\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency name query array, separated by commas, maximum 100 items |\
| vip\_level | query | string | false | VIP level, defaults to 0 if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-collateral current interest rate |\
| »» currency | string | Currency |\
| »» current\_rate | string | Currency current interest rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/current_rate'\
query_param = 'currencies=BTC,GT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/current_rate?currencies=BTC,GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "current_rate": "0.000023"\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#earn) Earn\
\
Earn service\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#eth2-swap) ETH2 swap\
\
`POST /earn/staking/eth2/swap`\
\
_ETH2 swap_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » side | body | string | true | 1-Forward Swap (ETH -> ETH2), 2-Reverse Swap (ETH2 -> ETH) |\
| » amount | body | string | true | Swap Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Swap successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/eth2/swap'\
query_param = ''\
body='{"side":"1","amount":"1.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/staking/eth2/swap"\
query_param=""\
body_param='{"side":"1","amount":"1.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"side": "1",\
"amount": "1.5"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#eth2-historical-return-rate-query) ETH2 historical return rate query\
\
`GET /earn/staking/eth2/rate_records`\
\
_ETH2 historical return rate query_\
\
Query ETH earnings rate records for the last 31 days\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » date\_time | integer(int64) | Date Timestamp |\
| » date | string | Date |\
| » rate | string | Percentage Rate |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/eth2/rate_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/eth2/rate_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "date_time": 1690348815,\
    "date": "2023-07-26",\
    "rate": "60.00"\
},\
{\
    "date_time": 1690435215,\
    "date": "2023-07-27",\
    "rate": "20.00"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#dual-investment-product-list) Dual Investment product list\
\
`GET /earn/dual/investment_plan`\
\
_Dual Investment product list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| plan\_id | query | integer(int64) | false | Financial project ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int32) | Product ID |\
| » instrument\_name | string | Product Name |\
| » invest\_currency | string | Investment Token |\
| » exercise\_currency | string | Strike Token |\
| » exercise\_price | number(double) | Strike price |\
| » delivery\_time | integer(int32) | Settlement time |\
| » min\_copies | integer(int32) | Minimum Units |\
| » max\_copies | integer(int32) | Maximum Units |\
| » per\_value | string | Value Per Unit |\
| » apy\_display | string | Annual Yield |\
| » start\_time | integer(int32) | Start Time |\
| » end\_time | integer(int32) | End time |\
| » status | string | Status: <br>`NOTSTARTED`-Not Started <br>`ONGOING`-In Progress <br>`ENDED`-Ended |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/investment_plan'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/dual/investment_plan \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 272,\
    "instrument_name": "DOGE-17NOV23-0.067-P",\
    "type": "put",\
    "invest_currency": "USDT",\
    "exercise_currency": "DOGE",\
    "exercise_price": 0.067,\
    "delivery_time": 1700208000,\
    "min_copies": 1,\
    "max_copies": 1000,\
    "start_time": 1697685172,\
    "end_time": 1697685172,\
    "status": "ONGOING",\
    "apy_display": "0.0114000000",\
    "per_value": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#dual-investment-order-list) Dual Investment order list\
\
`GET /earn/dual/orders`\
\
_Dual Investment order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | false | Start settlement time |\
| to | query | integer(int64) | false | End settlement time |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int32) | Order ID |\
| » plan\_id | integer(int32) | Product ID |\
| » copies | string | Units |\
| » invest\_amount | string | Investment Quantity |\
| » settlement\_amount | string | Settlement Quantity |\
| » create\_time | integer(int32) | Creation time |\
| » complete\_time | integer(int32) | Completed Time |\
| » status | string | Status:<br>`INIT`-Created<br>`SETTLEMENT_SUCCESS`-Settlement Success<br>`SETTLEMENT_PROCESSING`-Settlement Processing<br>`CANCELED`-Canceled<br>`FAILED`-Failed |\
| » invest\_currency | string | Investment Token |\
| » exercise\_currency | string | Strike Token |\
| » exercise\_price | string | Strike price |\
| » settlement\_price | string | Settlement price |\
| » settlement\_currency | string | Settlement currency |\
| » apy\_display | string | Annual Yield |\
| » apy\_settlement | string | Settlement Annual Yield |\
| » delivery\_time | integer(int32) | Settlement time |\
| » text | string | Custom order information |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/dual/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 373,\
    "plan_id": 176,\
    "copies": "1.0000000000",\
    "invest_amount": "0.0000000000",\
    "settlement_amount": "0.0000000000",\
    "create_time": 1697685172,\
    "complete_time": 1697685172,\
    "status": "CANCELED",\
    "invest_currency": "USDT",\
    "exercise_currency": "BTC",\
    "settlement_currency": "",\
    "exercise_price": "24500.0000000000",\
    "settlement_price": "0.0000000000",\
    "delivery_time": 1697685172,\
    "apy_display": "0.6800000000",\
    "apy_settlement": "0.0000000000",\
    "text": "t-custom-text"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-dual-investment-order) Place Dual Investment order\
\
`POST /earn/dual/orders`\
\
_Place Dual Investment order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » plan\_id | body | string | true | Product ID |\
| » amount | body | string | true | Subscription amount, mutually exclusive with copies field |\
| » text | body | string | false | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-59) Detailed descriptions\
\
**» text**: Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:\
\
1. Must start with `t-`\
2. Excluding `t-`, length cannot exceed 28 bytes\
3. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/orders'\
query_param = ''\
body='{"plan_id":"176","amount":"1","text":"t-custom-text"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/dual/orders"\
query_param=""\
body_param='{"plan_id":"176","amount":"1","text":"t-custom-text"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"plan_id": "176",\
"amount": "1",\
"text": "t-custom-text"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#structured-product-list) Structured Product List\
\
`GET /earn/structured/products`\
\
_Structured Product List_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Product Type (Default empty to query all) |\
| status | query | string | true | Status (Default empty to query all) |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-60) Detailed descriptions\
\
**type**: Product Type (Default empty to query all)\
\
`SharkFin2.0`-Shark Fin\
`BullishSharkFin`-Bullish Treasure\
`BearishSharkFin`-Bearish Treasure\
`DoubleNoTouch`-Volatility Treasure\
`RangeAccrual`-Range Smart Yield\
`SnowBall`-Snowball\
\
**status**: Status (Default empty to query all)\
\
`in_process`-In progress\
`will_begin`-Not started\
`wait_settlement`-Pending settlement\
`done`-Completed\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Structured Investment |\
| »» id | integer(int32) | Product ID |\
| »» type | string | Product Type: <br>`SharkFin2.0`-Shark Fin 2.0 <br>`BullishSharkFin`-Bullish Shark Fin <br>`BearishSharkFin`-Bearish Shark Fin<br>`DoubleNoTouch`-Double No-Touch<br>`RangeAccrual`-Range Accrual<br>`SnowBall`-Snow Ball |\
| »» name\_en | string | Product Name |\
| »» investment\_coin | string | Investment Token |\
| »» investment\_period | string | Investment Period |\
| »» min\_annual\_rate | string | Minimum Annual Rate |\
| »» mid\_annual\_rate | string | Intermediate Annual Rate |\
| »» max\_annual\_rate | string | Maximum Annual Rate |\
| »» watch\_market | string | Underlying Market |\
| »» start\_time | integer(int32) | Start Time |\
| »» end\_time | integer(int32) | End time |\
| »» status | string | Status: <br>`in_process`-in progress <br>`will_begin`-will begin <br>`wait_settlement`-waiting for settlement <br>`done`-done |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/products'\
query_param = 'status=in_process'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/structured/products?status=in_process \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 3700,\
    "type": "BullishSharkFin",\
    "name_en": "Bullish Sharkfin_USDT",\
    "investment_period": 7,\
    "min_annual_rate": "0.50",\
    "mid_annual_rate": "7.50",\
    "max_annual_rate": "13.00",\
    "watch_market": "BTC_USDT",\
    "investment_coin": "USDT",\
    "start_time": 1698224400,\
    "end_time": 1700902800,\
    "status": "in_process"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#structured-product-order-list) Structured Product Order List\
\
`GET /earn/structured/orders`\
\
_Structured Product Order List_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-61) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Structured order |\
| »» id | integer(int32) | Order ID |\
| »» pid | string | Product ID |\
| »» lock\_coin | string | Locked coin |\
| »» amount | string | Locked amount |\
| »» status | string | Status: <br>SUCCESS - SUCCESS <br>FAILED - FAILED<br>DONE - DONE |\
| »» income | string | Income |\
| »» create\_time | integer(int32) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/structured/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 35,\
    "pid": "3691",\
    "lock_coin": "ETH",\
    "amount": "20",\
    "status": "SUCCESS",\
    "income": "0.000000",\
    "create_time": 1697685172\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-structured-product-order) Place Structured Product Order\
\
`POST /earn/structured/orders`\
\
_Place Structured Product Order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | string | false | Product ID |\
| » amount | body | string | false | Buy Quantity |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/orders'\
query_param = ''\
body='{"pid":"1","amount":"0.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/structured/orders"\
query_param=""\
body_param='{"pid":"1","amount":"0.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": "1",\
"amount": "0.5"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#staking-coins) Staking coins\
\
`GET /earn/staking/coins`\
\
_Staking coins_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » cointype | body | string | false | Currency type: swap - voucher; lock - locked position; debt - US Treasury bond. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » pid | integer | Product ID |\
| » productType | integer | Project type 0-voucher 1-locked position 2-US Treasury bond |\
| » isDefi | integer | Is DEFI protocol 0-no 1-yes |\
| » currency | string | Staked currencies (multiple entries separated by commas) |\
| » estimateApr | string | Estimated yield rate |\
| » minStakeAmount | string | Minimum staked amount |\
| » maxStakeAmount | string | Maximum staked amount |\
| » protocolName | string | Protocol name |\
| » redeemPeriod | string | Redemption period (days) |\
| » exchangeRate | string | Exchange rate |\
| » exchangeRateReserve | string | Reverse exchange rate |\
| » extraInterest | array | Additional rewards |\
| »» start\_time | string | Start timestamp |\
| »» end\_time | string | End Timestamp |\
| »» reward\_coin | string | Additional reward currency |\
| »» segment\_interest | array | Tiered reward information |\
| »»» money\_min | string | Tiered lower value |\
| »»» money\_max | string | Tiered upper value |\
| »»» money\_rate | string | Tiered interest rate |\
| »» currencyRewards | array | Reward currency information |\
| »»» apr | string | Base interest rate |\
| »»» reward\_coin | string | Reward currency |\
| »»» reward\_delay\_days | string | Dividend day -1 indicates dividends are distributed upon redemption |\
| »»» interest\_delay\_days | string | Interest accrual day |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/coins'\
query_param = ''\
body='{"cointype":"string"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/coins"\
query_param=""\
body_param='{"cointype":"string"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"cointype": "string"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "pid": 1,\
    "productType": 0,\
    "isDefi": 0,\
    "currency": "GT",\
    "estimateApr": "36.00",\
    "minStakeAmount": "1",\
    "maxStakeAmount": 700,\
    "protocolName": "Gatechain",\
    "redeemPeriod": 0,\
    "exchangeRate": "1.00000000",\
    "exchangeRateReserve": "1.00000000",\
    "extraInterest": [\
      {\
        "start_time": 1749427201,\
        "end_time": 1765497600,\
        "reward_coin": "GT",\
        "segment_interest": [\
          {\
            "money_min": "0",\
            "money_max": "1000",\
            "money_rate": "10.00"\
          },\
          {\
            "money_min": "1000",\
            "money_max": "2000",\
            "money_rate": "15.00"\
          },\
          {\
            "money_min": "2000",\
            "money_max": "3000",\
            "money_rate": "30.00"\
          }\
        ]\
      }\
    ],\
    "currencyRewards": [\
      {\
        "apr": "6.00",\
        "reward_coin": "GT2",\
        "reward_delay_days": 1,\
        "interest_delay_days": 1\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-token-swap-for-earned-coins) On-chain token swap for earned coins\
\
`POST /earn/staking/swap`\
\
_On-chain token swap for earned coins_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » coin | body | string | true | Currency |\
| » side | body | string | true | 0 - Stake 1 - Redeem |\
| » amount | body | string | true | Amount |\
| » pid | body | integer(int32) | false | DeFi-type Mining Protocol Identifier |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Swap successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer | Order ID |\
| » pid | integer | Product ID |\
| » uid | integer | User ID |\
| » coin | string | Currency |\
| » type | integer | Type 0-Staking 1-Redemption |\
| » subtype | string | SubType |\
| » amount | string | Amount |\
| » exchange\_rate | string | Exchange ratio |\
| » exchange\_amount | string | Redemption Amount |\
| » updateStamp | integer | UpdateTimestamp |\
| » createStamp | integer | Transaction timestamp |\
| » status | integer | status 1-success |\
| » protocol\_type | integer | DEFI Protocol Type |\
| » client\_order\_id | string | Reference ID |\
| » source | string | Order Origin |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/swap'\
query_param = ''\
body='{"coin":"GT","side":"0","amount":"1.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/staking/swap"\
query_param=""\
body_param='{"coin":"GT","side":"0","amount":"1.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"coin": "GT",\
"side": "0",\
"amount": "1.5"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 21000,\
"uid": 12345,\
"coin": "GT",\
"type": 0,\
"exchange_rate": "1.00000000",\
"amount": "2",\
"pid": 1,\
"status": 1,\
"createStamp": 1752200661\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-of-on-chain-coin-earning-orders) List of on-chain coin-earning orders\
\
`GET /earn/staking/order_list`\
\
_List of on-chain coin-earning orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
| » type | body | integer | false | Type 0-Staking 1-Redemption |\
| » page | body | integer | false | Page |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » page | integer | Page |\
| » pageSize | integer | Items per page |\
| » pageCount | integer | Total pages |\
| » totalCount | integer | Total entries |\
| » list | array | none |\
| »» pid | integer | Product ID |\
| »» coin | string | Staked and redeemed currencies |\
| »» amount | string | Amount |\
| »» type | integer | Type 0-Staking 1-Redemption |\
| »» status | integer | Status |\
| »» redeem\_stamp | integer | Redemption credit time |\
| »» createStamp | integer | Order time |\
| »» exchange\_amount | string | Exchange rate |\
| »» fee | string | Fee |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/order_list'\
query_param = ''\
body='{"pid":0,"coin":"string","type":0,"page":0}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/order_list"\
query_param=""\
body_param='{"pid":0,"coin":"string","type":0,"page":0}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string",\
"type": 0,\
"page": 0\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"page": 1,\
"pageSize": 20,\
"pageCount": 5,\
"totalCount": 90,\
"list": [\
    {\
      "pid": 2,\
      "coin": "SOL",\
      "amount": "1.00000000",\
      "type": 0,\
      "status": 1,\
      "redeem_stamp": 0,\
      "createStamp": 1756105456,\
      "exchange_amount": "1.00000000",\
      "fee": "0.0000000000"\
    },\
    {\
      "pid": 2,\
      "coin": "SOL",\
      "amount": "1.00000000",\
      "type": 0,\
      "status": 1,\
      "redeem_stamp": 0,\
      "createStamp": 1755588122,\
      "exchange_amount": "0.80000000",\
      "fee": "0.0000000000"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-coin-earning-dividend-records) On-chain coin-earning dividend records\
\
`GET /earn/staking/award_list`\
\
_On-chain coin-earning dividend records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
| » page | body | integer | false | Page |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » page | integer | Page |\
| » pageSize | integer | Items per page |\
| » pageCount | integer | Total pages |\
| » totalCount | integer | Total entries |\
| » list | array | none |\
| »» pid | integer | Product ID |\
| »» mortgage\_coin | string | Collateral currency |\
| »» amount | string | Amount |\
| »» reward\_coin | string | Reward currency |\
| »» interest | string | Interest amount |\
| »» fee | string | Fee |\
| »» status | integer | Status |\
| »» bonus\_date | string | Date |\
| »» should\_bonus\_stamp | integer | Scheduled distribution timestamp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/award_list'\
query_param = ''\
body='{"pid":0,"coin":"string","page":0}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/award_list"\
query_param=""\
body_param='{"pid":0,"coin":"string","page":0}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string",\
"page": 0\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"page": 1,\
"pageSize": 20,\
"pageCount": 2,\
"totalCount": 33,\
"list": [\
    {\
      "pid": 64,\
      "mortgage_coin": "USDT",\
      "amount": "0.0000019100",\
      "reward_coin": "COMP",\
      "interest": "0.0000019100",\
      "fee": "0.0000000700",\
      "status": 4,\
      "bonus_date": "2025-08-08 00:00:00",\
      "should_bonus_stamp": 1755907200\
    },\
    {\
      "pid": 27,\
      "mortgage_coin": "DOT",\
      "amount": "0.0023424700",\
      "reward_coin": "DOT",\
      "interest": "0.0023424700",\
      "fee": "0.0001232800",\
      "status": 4,\
      "bonus_date": "2025-08-11 00:00:00",\
      "should_bonus_stamp": 1755043200\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-coin-earning-assets) On-chain coin-earning assets\
\
`GET /earn/staking/assets`\
\
_On-chain coin-earning assets_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » pid | integer | Product ID |\
| » mortgage\_coin | string | Staked currencies (multiple entries separated by commas) |\
| » mortgage\_amount | string | Position amount |\
| » createStamp | integer | First timestamp |\
| » extra\_income | string | Additional rewards converted to USDT amount |\
| » freeze\_amount | string | Locked amount, used in trading |\
| » move\_income | string | none |\
| » type | integer | Type 0-voucher 1-locked position 2-US Treasury bond |\
| » status | integer | Status |\
| » income\_total | string | Total earnings by currency |\
| » yesterday\_income\_multi | array | Yesterday's earnings |\
| » reward\_coins | array | Currency-specific reward earnings |\
| »» reward\_coin | string | Reward currency |\
| »» interest\_delay\_days | integer | Interest accrual day |\
| »» reward\_delay\_days | integer | Dividend day -1 indicates dividends are distributed upon redemption |\
| » defi\_income | object | DEIF earnings |\
| »» total | array | none |\
| »»» coin | string | none |\
| »»» amount | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/assets'\
query_param = ''\
body='{"pid":0,"coin":"string"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/assets"\
query_param=""\
body_param='{"pid":0,"coin":"string"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "pid": 1,\
    "mortgage_coin": "GT",\
    "mortgage_amount": "111.60000000",\
    "createStamp": 1728530266,\
    "extra_income": "0",\
    "freeze_amount": "0.0000000000",\
    "move_income": "0.0000000000",\
    "type": 0,\
    "status": 1,\
    "income_total": "0",\
    "yesterday_income_multi": [],\
    "reward_coins": [\
      {\
        "reward_coin": "GT2",\
        "interest_delay_days": 1,\
        "reward_delay_days": 1\
      }\
    ]\
},\
{\
    "pid": 64,\
    "mortgage_coin": "USDT",\
    "mortgage_amount": "1.0000000000",\
    "createStamp": 1750764156,\
    "extra_income": "0",\
    "freeze_amount": "0.0000000000",\
    "move_income": "0.0000000000",\
    "type": 1,\
    "status": 1,\
    "income_total": "0",\
    "yesterday_income_multi": [],\
    "defi_income": {\
      "total": [\
        {\
          "coin": "COMP",\
          "amount": "0.0000076200"\
        }\
      ]\
    },\
    "reward_coins": [\
      {\
        "reward_coin": "USDT",\
        "interest_delay_days": 1,\
        "reward_delay_days": -1\
      },\
      {\
        "reward_coin": "COMP",\
        "interest_delay_days": 1,\
        "reward_delay_days": 15\
      }\
    ]\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#account) Account\
\
Retrieve user account information\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#retrieve-user-account-information) Retrieve user account information\
\
`GET /account/detail`\
\
_Retrieve user account information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AccountDetail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » ip\_whitelist | array | IP Whitelist |\
| » currency\_pairs | array | Trading pair whitelist |\
| » user\_id | integer(int64) | User ID |\
| » tier | integer(int64) | User VIP level |\
| » key | object | API Key details |\
| »» mode | integer(int32) | Mode: 1 - Classic mode, 2 - Legacy unified mode |\
| » copy\_trading\_role | integer(int32) | User role: 0 - Normal user, 1 - Copy trading leader, 2 - Follower, 3 - Both leader and follower |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/detail'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/detail"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user_id": 1667201533,\
"ip_whitelist": [\
    "127.0.0.1"\
],\
"currency_pairs": [\
    "USDT_BTC"\
],\
"key": {\
    "mode": 1\
},\
"tier": 2,\
"copy_trading_role": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-transaction-rate-limit-information) Get user transaction rate limit information\
\
`GET /account/rate_limit`\
\
_Get user transaction rate limit information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
_AccountRateLimit_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| AccountRateLimit | array | Account rate limit |\
| » tier | string | Frequency limit level (For detailed frequency limit rules, see [Transaction ratio frequency limit](https://www.gate.com/docs/developers/apiv4/en/#rate-limit-based-on-fill-ratio)) |\
| » ratio | string | Fill rate |\
| » main\_ratio | string | Total fill ratio of main account |\
| » updated\_at | string | Update time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/rate_limit'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/rate_limit"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "spot",\
    "tier": "1",\
    "ratio": "0",\
    "main_ratio": "0",\
    "updated_at": "1728230400"\
},\
{\
    "type": "futures",\
    "tier": "1",\
    "ratio": "0",\
    "main_ratio": "0",\
    "updated_at": "1728230400"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-stp-user-group) Create STP user group\
\
`POST /account/stp_groups`\
\
_Create STP user group_\
\
Only the main account is allowed to create a new STP user group\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » id | body | integer(int64) | false | STP Group ID |\
| » name | body | string | true | STP Group name |\
| » creator\_id | body | integer(int64) | false | Creator ID |\
| » create\_time | body | integer(int64) | false | Creation time |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User added successfully, returning current users in the STP group | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | STP Group ID |\
| » name | string | STP Group name |\
| » creator\_id | integer(int64) | Creator ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups'\
query_param = ''\
body='{"name":"stp_name"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/stp_groups"\
query_param=""\
body_param='{"name":"stp_name"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"name": "stp_name"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123435,\
"name": "group",\
"create_time": 1548000000,\
"creator_id": 10000\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-stp-user-groups-created-by-the-user) Query STP user groups created by the user\
\
`GET /account/stp_groups`\
\
_Query STP user groups created by the user_\
\
Only query STP user groups created by the current main account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| name | query | string | false | Fuzzy search by name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | STP Group ID |\
| » name | string | STP Group name |\
| » creator\_id | integer(int64) | Creator ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/stp_groups"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 123435,\
    "name": "group",\
    "create_time": 1548000000,\
    "creator_id": 10000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-users-in-the-stp-user-group) Query users in the STP user group\
\
`GET /account/stp_groups/{stp_id}/users`\
\
_Query users in the STP user group_\
\
Only the main account that created this STP group can query the account ID list in the current STP group\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/stp_groups/1/users"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#add-users-to-the-stp-user-group) Add users to the STP user group\
\
`POST /account/stp_groups/{stp_id}/users`\
\
_Add users to the STP user group_\
\
- Only the main account that created this STP group can add users to the STP user group\
- Only accounts under the current main account are allowed, cross-main account is not permitted\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
| body | body | array\[integer\] | true | User ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User added successfully, returning current users in the STP group | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = ''\
body='[1,2,3]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/stp_groups/1/users"\
query_param=""\
body_param='[1,2,3]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
1,\
2,\
3\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#delete-users-from-the-stp-user-group) Delete users from the STP user group\
\
`DELETE /account/stp_groups/{stp_id}/users`\
\
_Delete users from the STP user group_\
\
- Only the main account that created this STP group is allowed to delete users from the STP user group\
- Deletion is limited to accounts under the current main account; cross-account deletion is not permitted\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
| user\_id | query | integer(int64) | true | STP user IDs, multiple IDs can be separated by commas |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Users deleted successfully, returns current users in the STP group | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = 'user_id=1'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/account/stp_groups/1/users"\
query_param="user_id=1"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#configure-gt-fee-deduction) Configure GT fee deduction\
\
`POST /account/debit_fee`\
\
_Configure GT fee deduction_\
\
Enable or disable GT fee deduction for the current account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [DebitFee](https://www.gate.com/docs/developers/apiv4/en/#schemadebitfee) | true | none |\
| » enabled | body | boolean | true | Whether GT fee deduction is enabled |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/debit_fee'\
query_param = ''\
body='{"enabled":true}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/debit_fee"\
query_param=""\
body_param='{"enabled":true}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"enabled": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-gt-fee-deduction-configuration) Query GT fee deduction configuration\
\
`GET /account/debit_fee`\
\
_Query GT fee deduction configuration_\
\
Query the GT fee deduction configuration for the current account\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | [DebitFee](https://www.gate.com/docs/developers/apiv4/en/#schemadebitfee) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/debit_fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/debit_fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"enabled": true\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#rebate-2) Rebate\
\
Broker rebate endpoints\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-transaction-history-of-recommended-users) Broker obtains transaction history of recommended users\
\
`GET /rebate/agency/transaction_history`\
\
_Broker obtains transaction history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify the trading pair. If not specified, returns all trading pairs |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» AgencyTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» amount\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/agency/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/agency/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 100,\
"list": [\
    {\
      "transaction_time": 1539852480,\
      "user_id": 10000,\
      "group_name": "gateio",\
      "fee": "1",\
      "fee_asset": "GT",\
      "currency_pair": "GT_USDT",\
      "amount": "1000",\
      "source": "SPOT",\
      "amount_asset": "GT"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-rebate-history-of-recommended-users) Broker obtains rebate history of recommended users\
\
`GET /rebate/agency/commission_history`\
\
_Broker obtains rebate history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| commission\_type | query | integer | false | Rebate type: 1 - Direct rebate, 2 - Indirect rebate, 3 - Self rebate |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» AgencyCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» commission\_amount | string | Transaction amount |\
| »»» commission\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/agency/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/agency/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 100,\
"list": [\
    {\
      "commission_time": 1539852480,\
      "user_id": 10000,\
      "group_name": "gateio",\
      "commission_amount": "1000",\
      "source": "SPOT",\
      "commission_asset": "GT"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-obtains-transaction-history-of-recommended-users) Partner obtains transaction history of recommended users\
\
`GET /rebate/partner/transaction_history`\
\
_Partner obtains transaction history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify the trading pair. If not specified, returns all trading pairs |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» PartnerTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» amount\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 15,\
"list": [\
    {\
      "user_id": 1879032535,\
      "group_name": "test",\
      "fee": "0.00044800",\
      "transaction_time": 1718615824,\
      "amount": "29.98688000USDT",\
      "amount_asset": "USDT",\
      "currency_pair": "BCH_USDT",\
      "source": "SPOT",\
      "fee_asset": "BCH"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-obtains-rebate-records-of-recommended-users) Partner obtains rebate records of recommended users\
\
`GET /rebate/partner/commission_history`\
\
_Partner obtains rebate records of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» PartnerCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» commission\_amount | string | Transaction amount |\
| »»» commission\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 52,\
"list": [\
    {\
      "user_id": 1879043947,\
      "commission_time": 1718616728,\
      "commission_amount": "0.2216934846",\
      "commission_asset": "USDT",\
      "source": "SPOT",\
      "group_name": "test"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-subordinate-list) Partner subordinate list\
\
`GET /rebate/partner/sub_list`\
\
_Partner subordinate list_\
\
Including sub-agents, direct customers, and indirect customers\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | Subordinate list |\
| »» PartnerSub | object | none |\
| »»» user\_id | integer(int64) | User ID |\
| »»» user\_join\_time | integer(int64) | Time when user joined the system, Unix timestamp in seconds |\
| »»» type | integer(int64) | Type (1-Sub-agent 2-Indirect direct customer 3-Direct direct customer) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/sub_list'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/sub_list"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 3,\
"list": [\
    {\
      "user_id": 1,\
      "user_join_time": 1666255731,\
      "type": 1\
    },\
    {\
      "user_id": 2,\
      "user_join_time": 1666271213,\
      "type": 2\
    },\
    {\
      "user_id": 3,\
      "user_join_time": 1666422143,\
      "type": 3\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-user-s-rebate-records) Broker obtains user's rebate records\
\
`GET /rebate/broker/commission_history`\
\
_Broker obtains user's rebate records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time of the query record. If not specified, defaults to 30 days before the current time |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» BrokerCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» amount | string | The amount of commission rebates |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» rebate\_fee | string | The income from rebates, converted to USDT |\
| »»» source | string | Commission transaction type: Spot, Futures, Options, Alpha |\
| »»» currency\_pair | string | Trading pair |\
| »»» sub\_broker\_info | object | Sub-broker information |\
| »»»» user\_id | integer(int64) | Sub-broker user ID |\
| »»»» original\_commission\_rate | string | Sub-broker original commission rate |\
| »»»» relative\_commission\_rate | string | Sub-broker relative commission rate |\
| »»»» commission\_rate | string | Sub-broker actual commission rate |\
| »»» alpha\_contract\_addr | string | Alpha contract address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/broker/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/broker/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "user_id": 110285113,\
      "group_name": "",\
      "commission_time": 1702545051,\
      "fee": "0.0020000000",\
      "source": "SPOT",\
      "amount": "0.00040000",\
      "rebate_fee": "0.0004000000",\
      "fee_asset": "BEAM",\
      "currency_pair": "BEAM_USDT",\
      "sub_broker_info": {\
        "user_id": 110285114,\
        "original_commission_rate": "0.2",\
        "relative_commission_rate": "0.5",\
        "commission_rate": "0.1"\
      },\
      "alpha_contract_addr": "0x9a26f5433671751c3276a065f57e5a02d2817973"\
    }\
],\
"total": 47\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-user-s-trading-history) Broker obtains user's trading history\
\
`GET /rebate/broker/transaction_history`\
\
_Broker obtains user's trading history_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time of the query record. If not specified, defaults to 30 days before the current time |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» BrokerTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee amount (USDT) |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» fee\_asset | string | Fee currency |\
| »»» source | string | Commission transaction type: Spot, Futures, Options, Alpha |\
| »»» sub\_broker\_info | object | Sub-broker information |\
| »»»» user\_id | integer(int64) | Sub-broker user ID |\
| »»»» original\_commission\_rate | string | Sub-broker original commission rate |\
| »»»» relative\_commission\_rate | string | Sub-broker relative commission rate |\
| »»»» commission\_rate | string | Sub-broker actual commission rate |\
| »»» alpha\_contract\_addr | string | Alpha contract address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/broker/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/broker/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "user_id": 110285442,\
      "group_name": "",\
      "fee": "0.5000045000",\
      "transaction_time": 1702545051,\
      "amount": "-1000.00900000",\
      "currency_pair": "DOGE_USDT",\
      "source": "Futures",\
      "fee_asset": "USDT",\
      "sub_broker_info": {\
        "user_id": 110285114,\
        "original_commission_rate": "0.2",\
        "relative_commission_rate": "0.5",\
        "commission_rate": "0.1"\
      },\
      "alpha_contract_addr": "0x9a26f5433671751c3276a065f57e5a02d2817973"\
    }\
],\
"total": 47\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-obtains-rebate-information) User obtains rebate information\
\
`GET /rebate/user/info`\
\
_User obtains rebate information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Retrieve user rebate information |\
| »» invite\_uid | integer(int64) | My inviter's UID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/user/info'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/user/info"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"invite_uid": 987\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-subordinate-relationship) User subordinate relationship\
\
`GET /rebate/user/sub_relation`\
\
_User subordinate relationship_\
\
Query whether the specified user is within the system\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id\_list | query | string | true | Query user ID list, separated by commas. If more than 100, only 100 will be returned |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » list | array | Subordinate relationship list |\
| »» UserSub | object | none |\
| »»» uid | integer(int64) | User ID |\
| »»» belong | string | User's system affiliation (partner/referral). Empty means not belonging to any system |\
| »»» type | integer(int64) | Type (0-Not in system 1-Direct subordinate agent 2-Indirect subordinate agent 3-Direct direct customer 4-Indirect direct customer 5-Regular user) |\
| »»» ref\_uid | integer(int64) | Inviter user ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/user/sub_relation'\
query_param = 'user_id_list=1, 2, 3'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/user/sub_relation"\
query_param="user_id_list=1, 2, 3"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "belong": "",\
      "ref_uid": 0,\
      "type": 0,\
      "uid": 9\
    },\
    {\
      "belong": "partner",\
      "type": 1,\
      "ref_uid": 1,\
      "uid": 2\
    },\
    {\
      "belong": "referral",\
      "type": 5,\
      "ref_uid": 1,\
      "uid": 3\
    }\
]\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#schemas) Schemas\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#subaccountkey) SubAccountKey\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | integer(int64) | false | read-only | User ID |\
| mode | integer(int32) | false | none | Mode: 1 - classic 2 - portfolio account |\
| name | string | false | none | API Key Name |\
| perms | array | false | none | none |\
| » name | string | false | none | Permission function name (no value will be cleared)<br>\- wallet: wallet<br>\- spot: spot/margin<br>\- futures: perpetual contract<br>\- delivery: delivery contract<br>\- earn: earn<br>\- custody: custody<br>\- options: options<br>\- account: account information<br>\- loan: lending<br>\- margin: margin<br>\- unified: unified account<br>\- copy: copy trading |\
| » read\_only | boolean | false | none | Read Only |\
| ip\_whitelist | array | false | none | IP whitelist (list will be cleared if no value is passed) |\
| key | string | false | read-only | API Key |\
| state | integer(int32) | false | read-only | Status: 1-Normal 2-Frozen 3-Locked |\
| created\_at | integer(int64) | false | read-only | Creation time |\
| updated\_at | integer(int64) | false | read-only | Last Update Time |\
| last\_access | integer(int64) | false | read-only | Last Access Time |\
\
```\
{\
"user_id": 0,\
"mode": 0,\
"name": "string",\
"perms": [\
    {\
      "name": "string",\
      "read_only": true\
    }\
],\
"ip_whitelist": [\
    "string"\
],\
"key": "string",\
"state": 0,\
"created_at": 0,\
"updated_at": 0,\
"last_access": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#estimaterate) EstimateRate\
\
_Estimate current hourly lending rates, returned by currency_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-2) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| **additionalProperties** | string | false | none | none |\
\
```\
{\
"property1": "string",\
"property2": "string"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#spotpricetriggeredorder) SpotPriceTriggeredOrder\
\
_Spot price order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-3) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| trigger | object | true | none | none |\
| » price | string | true | none | Trigger price |\
| » rule | string | true | none | Price trigger condition<br>\- `>=`: triggered when market price is greater than or equal to `price`<br>\- `<=`: triggered when market price is less than or equal to `price` |\
| » expiration | integer | true | none | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| put | object | true | none | none |\
| » type | string | false | none | Order type，default to `limit`<br>\- limit : Limit Order<br>\- market : Market Order |\
| » side | string | true | none | Order side<br>\- buy: buy side<br>\- sell: sell side |\
| » price | string | true | none | Order price |\
| » amount | string | true | none | Trading quantity, refers to the trading quantity of the trading currency, i.e., the currency that needs to be traded, for example, the quantity of BTC in BTC\_USDT. |\
| » account | string | true | none | Trading account type. Unified account must be set to `unified`<br>\- normal: spot trading<br>\- margin: margin trading<br>\- unified: unified account |\
| » time\_in\_force | string | false | none | time\_in\_force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only |\
| » auto\_borrow | boolean | false | none | Whether to borrow coins automatically |\
| » auto\_repay | boolean | false | none | Whether to repay the loan automatically |\
| » text | string | false | none | The source of the order, including:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app |\
| id | integer(int64) | false | read-only | Auto order ID |\
| user | integer | false | read-only | User ID |\
| market | string | true | none | Market |\
| ctime | integer(int64) | false | read-only | Creation time |\
| ftime | integer(int64) | false | read-only | End time |\
| fired\_order\_id | integer(int64) | false | read-only | ID of the order created after trigger |\
| status | string | false | read-only | Status<br>\- open: Running<br>\- cancelled: Manually cancelled<br>\- finish: Successfully completed<br>\- failed: Failed to execute<br>\- expired: Expired |\
| reason | string | false | read-only | Additional description of how the order was completed |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-135) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| rule | >= |\
| rule | <= |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| account | normal |\
| account | margin |\
| account | unified |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
\
```\
{\
"trigger": {\
    "price": "string",\
    "rule": ">=",\
    "expiration": 0\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "string",\
    "amount": "string",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "auto_borrow": false,\
    "auto_repay": false,\
    "text": "string"\
},\
"id": 0,\
"user": 0,\
"market": "string",\
"ctime": 0,\
"ftime": 0,\
"fired_order_id": 0,\
"status": "string",\
"reason": "string"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#contract) Contract\
\
_Futures contract details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-4) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| name | string | false | none | Futures contract |\
| type | string | false | none | Contract type: inverse - inverse contract, direct - direct contract |\
| quanto\_multiplier | string | false | none | Multiplier used in converting from invoicing to settlement currency |\
| leverage\_min | string | false | none | Minimum leverage |\
| leverage\_max | string | false | none | Maximum leverage |\
| maintenance\_rate | string | false | none | Maintenance rate of margin |\
| mark\_type | string | false | none | Mark price type: internal - internal trading price, index - external index price |\
| mark\_price | string | false | none | Current mark price |\
| index\_price | string | false | none | Current index price |\
| last\_price | string | false | none | Last trading price |\
| maker\_fee\_rate | string | false | none | Maker fee rate, negative values indicate rebates |\
| taker\_fee\_rate | string | false | none | Taker fee rate |\
| order\_price\_round | string | false | none | Minimum order price increment |\
| mark\_price\_round | string | false | none | Minimum mark price increment |\
| funding\_rate | string | false | none | Current funding rate |\
| funding\_interval | integer | false | none | Funding application interval, unit in seconds |\
| funding\_next\_apply | number(double) | false | none | Next funding time |\
| risk\_limit\_base | string | false | none | Base risk limit (deprecated) |\
| risk\_limit\_step | string | false | none | Risk limit adjustment step (deprecated) |\
| risk\_limit\_max | string | false | none | Maximum risk limit allowed by the contract (deprecated). It is recommended to use /futures/{settle}/risk\_limit\_tiers to query risk limits |\
| order\_size\_min | integer(int64) | false | none | Minimum order size allowed by the contract |\
| order\_size\_max | integer(int64) | false | none | Maximum order size allowed by the contract |\
| order\_price\_deviate | string | false | none | Maximum allowed deviation between order price and current mark price. The order price `order_price` must satisfy the following condition:<br> abs(order\_price - mark\_price) <= mark\_price \* order\_price\_deviate |\
| ref\_discount\_rate | string | false | none | Trading fee discount for referred users |\
| ref\_rebate\_rate | string | false | none | Commission rate for referrers |\
| orderbook\_id | integer(int64) | false | none | Orderbook update ID |\
| trade\_id | integer(int64) | false | none | Current trade ID |\
| trade\_size | integer(int64) | false | none | Historical cumulative trading volume |\
| position\_size | integer(int64) | false | none | Current total long position size |\
| config\_change\_time | number(double) | false | none | Last configuration update time |\
| in\_delisting | boolean | false | none | `in_delisting=true` and position\_size>0 indicates the contract is in delisting transition period<br>`in_delisting=true` and position\_size=0 indicates the contract is delisted |\
| orders\_limit | integer | false | none | Maximum number of pending orders |\
| enable\_bonus | boolean | false | none | Whether bonus is enabled |\
| enable\_credit | boolean | false | none | Whether portfolio margin account is enabled |\
| create\_time | number(double) | false | none | Created time of the contract |\
| funding\_cap\_ratio | string | false | none | The factor for the maximum of the funding rate. Maximum of funding rate = (1/market maximum leverage - maintenance margin rate) \* funding\_cap\_ratio |\
| status | string | false | none | Contract status types include: prelaunch (pre-launch), trading (active), delisting (delisting), delisted (delisted), circuit\_breaker (circuit breaker) |\
| launch\_time | integer(int64) | false | none | Contract expiry timestamp |\
| delisting\_time | integer(int64) | false | none | Timestamp when contract enters reduce-only state |\
| delisted\_time | integer(int64) | false | none | Contract delisting time |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-136) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | inverse |\
| type | direct |\
| mark\_type | internal |\
| mark\_type | index |\
\
```\
{\
"name": "string",\
"type": "inverse",\
"quanto_multiplier": "string",\
"leverage_min": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"mark_type": "internal",\
"mark_price": "string",\
"index_price": "string",\
"last_price": "string",\
"maker_fee_rate": "string",\
"taker_fee_rate": "string",\
"order_price_round": "string",\
"mark_price_round": "string",\
"funding_rate": "string",\
"funding_interval": 0,\
"funding_next_apply": 0.1,\
"risk_limit_base": "string",\
"risk_limit_step": "string",\
"risk_limit_max": "string",\
"order_size_min": 0,\
"order_size_max": 0,\
"order_price_deviate": "string",\
"ref_discount_rate": "string",\
"ref_rebate_rate": "string",\
"orderbook_id": 0,\
"trade_id": 0,\
"trade_size": 0,\
"position_size": 0,\
"config_change_time": 0.1,\
"in_delisting": true,\
"orders_limit": 0,\
"enable_bonus": true,\
"enable_credit": true,\
"create_time": 0.1,\
"funding_cap_ratio": "string",\
"status": "string",\
"launch_time": 0,\
"delisting_time": 0,\
"delisted_time": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#position) Position\
\
_Futures position details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-5) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| user | integer(int64) | false | read-only | User ID |\
| contract | string | false | read-only | Futures contract |\
| size | integer(int64) | false | read-only | Position size |\
| leverage | string | false | none | Position leverage. 0 means cross margin; positive number means isolated margin |\
| risk\_limit | string | false | none | Position risk limit |\
| leverage\_max | string | false | read-only | Maximum leverage under current risk limit |\
| maintenance\_rate | string | false | read-only | Maintenance rate under current risk limit |\
| value | string | false | read-only | Position value calculated in settlement currency |\
| margin | string | false | none | Position margin |\
| entry\_price | string | false | read-only | Entry price |\
| liq\_price | string | false | read-only | Liquidation price |\
| mark\_price | string | false | read-only | Current mark price |\
| initial\_margin | string | false | read-only | The initial margin occupied by the position, applicable to the portfolio margin account |\
| maintenance\_margin | string | false | read-only | Maintenance margin required for the position, applicable to portfolio margin account |\
| unrealised\_pnl | string | false | read-only | Unrealized PNL |\
| realised\_pnl | string | false | read-only | Realized PnL |\
| pnl\_pnl | string | false | read-only | Realized PNL - Position P/L |\
| pnl\_fund | string | false | read-only | Realized PNL - Funding Fees |\
| pnl\_fee | string | false | read-only | Realized PNL - Transaction Fees |\
| history\_pnl | string | false | read-only | Total realized PnL from closed positions |\
| last\_close\_pnl | string | false | read-only | PNL of last position close |\
| realised\_point | string | false | read-only | Realized POINT PNL |\
| history\_point | string | false | read-only | History realized POINT PNL |\
| adl\_ranking | integer | false | read-only | Ranking of auto deleveraging, a total of 1-5 grades, `1` is the highest, `5` is the lowest, and `6` is the special case when there is no position held or in liquidation |\
| pending\_orders | integer | false | read-only | Current pending order quantity |\
| close\_order | object\|null | false | read-only | Current close order information, or `null` if no close order |\
| » id | integer(int64) | false | none | Order ID |\
| » price | string | false | none | Order price |\
| » is\_liq | boolean | false | none | Whether the close order is from liquidation |\
| mode | string | false | none | Position mode, including:<br>\- `single`: Single position mode<br>\- `dual_long`: Long position in dual position mode<br>\- `dual_short`: Short position in dual position mode |\
| cross\_leverage\_limit | string | false | none | Cross margin leverage (valid only when `leverage` is 0) |\
| update\_time | integer(int64) | false | read-only | Last update time |\
| update\_id | integer(int64) | false | read-only | Update ID. The value increments by 1 each time the position is updated |\
| trade\_long\_size | integer(int64) | false | read-only | Cumulative long size |\
| trade\_long\_xprice | string | false | read-only | Cumulative long size\*price |\
| trade\_short\_size | integer(int64) | false | read-only | Cumulative short size |\
| trade\_short\_xprice | string | false | read-only | Cumulative short size\*price |\
| trade\_max\_size | string | false | none | Maximum position |\
| open\_time | integer(int64) | false | none | First Open Time |\
| risk\_limit\_table | string | false | read-only | Risk limit table ID |\
| average\_maintenance\_rate | string | false | read-only | Average maintenance margin rate |\
| voucher\_size | string | false | read-only | Experience Coupon Position Size |\
| voucher\_margin | string | false | read-only | Experience Coupon Position Margin |\
| voucher\_id | integer(int64) | false | read-only | Experience Coupon ID |\
| pid | integer(int64) | false | read-only | Sub-account position ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-137) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| mode | single |\
| mode | dual\_long |\
| mode | dual\_short |\
\
```\
{\
"user": 0,\
"contract": "string",\
"size": 0,\
"leverage": "string",\
"risk_limit": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"value": "string",\
"margin": "string",\
"entry_price": "string",\
"liq_price": "string",\
"mark_price": "string",\
"initial_margin": "string",\
"maintenance_margin": "string",\
"unrealised_pnl": "string",\
"realised_pnl": "string",\
"pnl_pnl": "string",\
"pnl_fund": "string",\
"pnl_fee": "string",\
"history_pnl": "string",\
"last_close_pnl": "string",\
"realised_point": "string",\
"history_point": "string",\
"adl_ranking": 0,\
"pending_orders": 0,\
"close_order": {\
    "id": 0,\
    "price": "string",\
    "is_liq": true\
},\
"mode": "single",\
"cross_leverage_limit": "string",\
"update_time": 0,\
"update_id": 0,\
"trade_long_size": 0,\
"trade_long_xprice": "string",\
"trade_short_size": 0,\
"trade_short_xprice": "string",\
"trade_max_size": "string",\
"open_time": 0,\
"risk_limit_table": "string",\
"average_maintenance_rate": "string",\
"voucher_size": "string",\
"voucher_margin": "string",\
"voucher_id": 0,\
"pid": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futuresorder) FuturesOrder\
\
_Futures order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-6) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| id | integer(int64) | false | read-only | Futures order ID |\
| user | integer | false | read-only | User ID |\
| create\_time | number(double) | false | read-only | Creation time of order |\
| update\_time | number(double) | false | read-only | OrderUpdateTime |\
| finish\_time | number(double) | false | read-only | Order finished time. Not returned if order is open |\
| finish\_as | string | false | read-only | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| status | string | false | read-only | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| contract | string | true | none | Futures contract |\
| size | integer(int64) | true | none | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| iceberg | integer(int64) | false | none | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| price | string | false | none | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| close | boolean | false | write-only | Set as `true` to close the position, with `size` set to 0 |\
| is\_close | boolean | false | read-only | Is the order to close position |\
| reduce\_only | boolean | false | write-only | Set as `true` to be reduce-only order |\
| is\_reduce\_only | boolean | false | read-only | Is the order reduce-only |\
| is\_liq | boolean | false | read-only | Is the order for liquidation |\
| tif | string | false | none | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| left | integer(int64) | false | read-only | Unfilled quantity |\
| fill\_price | string | false | read-only | Fill price |\
| text | string | false | none | Custom order information. If not empty, must follow the rules below:<br>1\. Prefixed with `t-`<br>2\. No longer than 28 bytes without `t-` prefix<br>3\. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>In addition to user-defined information, the following are internal reserved fields that identify the order source:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app<br>\- auto\_deleveraging: Automatic deleveraging<br>\- liquidation: Forced liquidation of positions under the old classic mode<br>\- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode<br>\- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions<br>\- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode<br>\- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode<br>\- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode<br>\- insurance: Insurance |\
| tkfr | string | false | read-only | Taker fee |\
| mkfr | string | false | read-only | Maker fee |\
| refu | integer | false | read-only | Referrer user ID |\
| auto\_size | string | false | write-only | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| stp\_id | integer | false | read-only | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| stp\_act | string | false | none | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| amend\_text | string | false | read-only | The custom data that the user remarked when amending the order |\
\
\|limit\_vip\|integer(int64)\|false\|write-only\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|pid\|integer(int64)\|false\|write-only\|Position ID\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-138) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| auto\_size | close\_long |\
| auto\_size | close\_short |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
```\
{\
"id": 0,\
"user": 0,\
"create_time": 0.1,\
"update_time": 0.1,\
"finish_time": 0.1,\
"finish_as": "filled",\
"status": "open",\
"contract": "string",\
"size": 0,\
"iceberg": 0,\
"price": "string",\
"close": false,\
"is_close": true,\
"reduce_only": false,\
"is_reduce_only": true,\
"is_liq": true,\
"tif": "gtc",\
"left": 0,\
"fill_price": "string",\
"text": "string",\
"tkfr": "string",\
"mkfr": "string",\
"refu": 0,\
"auto_size": "close_long",\
"stp_id": 0,\
"stp_act": "co",\
"amend_text": "string",\
\
"limit_vip": 0,\
"pid": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batchamendorderreq) BatchAmendOrderReq\
\
_Modify contract order parameters_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-7) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | integer(int64) | false | none | Order id, order\_id and text must contain at least one |\
| text | string | false | none | User-defined order text, at least one of order\_id and text must be passed |\
| size | integer(int64) | false | none | New order size, including filled size.<br>\- If less than or equal to the filled quantity, the order will be cancelled.<br>\- The new order side must be identical to the original one.<br>\- Close order size cannot be modified.<br>\- For reduce-only orders, increasing the size may cancel other reduce-only orders.<br>\- If the price is not modified, decreasing the size will not affect the depth queue, while increasing the size will place it at the end of the current price level. |\
| price | string | false | none | New order price |\
| amend\_text | string | false | none | Custom info during order amendment |\
\
```\
{\
"order_id": 0,\
"text": "string",\
"size": 0,\
"price": "string",\
"amend_text": "string",\
\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futurespricetriggeredorder) FuturesPriceTriggeredOrder\
\
_Futures price-triggered order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-8) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| initial | object | true | none | none |\
| » contract | string | true | none | Futures contract |\
| » size | integer(int64) | false | none | Represents the number of contracts that need to be closed, full closing: size=0<br>Partial closing: plan-close-short-position size>0 <br>Partial closing: plan-close-long-position size<0 |\
| » price | string | true | none | Order price. Set to 0 to use market price |\
| » close | boolean | false | write-only | When all positions are closed in a single position mode, it must be set to true to perform the closing operation<br>When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false |\
| » tif | string | false | none | Time in force strategy, default is gtc, market orders currently only support ioc mode<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled |\
| » text | string | false | none | The source of the order, including:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app |\
| » reduce\_only | boolean | false | none | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| » auto\_size | string | false | write-only | Single position mode: auto\_size is not required<br>Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions<br>Dual position mode partial closing (size≠0): auto\_size is not required |\
| » is\_reduce\_only | boolean | false | read-only | Is the order reduce-only |\
| » is\_close | boolean | false | read-only | Is the order to close position |\
| trigger | object | true | none | none |\
| » strategy\_type | integer(int32) | false | none | Trigger Strategy<br> \- 0: Price trigger, triggered when price meets conditions<br> \- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price<br>Currently only supports 0 (latest transaction price) |\
| » price\_type | integer(int32) | false | none | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| » price | string | false | none | Price value for price trigger, or spread value for spread trigger |\
| » rule | integer(int32) | false | none | Price Condition Type<br>\- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price<br>\- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price |\
| » expiration | integer | false | none | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| id | integer(int64) | false | read-only | Auto order ID |\
| user | integer | false | read-only | User ID |\
| create\_time | number(double) | false | read-only | Creation time |\
| finish\_time | number(double) | false | read-only | End time |\
| trade\_id | integer(int64) | false | read-only | ID of the order created after trigger |\
| status | string | false | read-only | Order status<br>\- `open`: Active<br>\- `finished`: Finished<br>\- `inactive`: Inactive, only applies to order take-profit/stop-loss<br>\- `invalid`: Invalid, only applies to order take-profit/stop-loss |\
| finish\_as | string | false | read-only | Finish status: cancelled - Cancelled; succeeded - Succeeded; failed - Failed; expired - Expired |\
| reason | string | false | read-only | Additional description of how the order was completed |\
| order\_type | string | false | none | Types of take-profit and stop-loss orders, including:<br>\- `close-long-order`: Order take-profit/stop-loss, close long position<br>\- `close-short-order`: Order take-profit/stop-loss, close short position<br>\- `close-long-position`: Position take-profit/stop-loss, used to close all long positions<br>\- `close-short-position`: Position take-profit/stop-loss, used to close all short positions<br>\- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions<br>\- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions<br>The two types of order take-profit/stop-loss are read-only and cannot be passed in requests |\
| me\_order\_id | integer(int64) | false | read-only | Corresponding order ID for order take-profit/stop-loss orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-139) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| tif | gtc |\
| tif | ioc |\
| strategy\_type | 0 |\
| strategy\_type | 1 |\
| price\_type | 0 |\
| price\_type | 1 |\
| price\_type | 2 |\
| rule | 1 |\
| rule | 2 |\
| status | open |\
| status | finished |\
| status | inactive |\
| status | invalid |\
| finish\_as | cancelled |\
| finish\_as | succeeded |\
| finish\_as | failed |\
| finish\_as | expired |\
\
```\
{\
"initial": {\
    "contract": "string",\
    "size": 0,\
    "price": "string",\
    "close": false,\
    "tif": "gtc",\
    "text": "string",\
    "reduce_only": false,\
    "auto_size": "string",\
    "is_reduce_only": true,\
    "is_close": true\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "string",\
    "rule": 1,\
    "expiration": 0\
},\
"id": 0,\
"user": 0,\
"create_time": 0.1,\
"finish_time": 0.1,\
"trade_id": 0,\
"status": "open",\
"finish_as": "cancelled",\
"reason": "string",\
"order_type": "string",\
"me_order_id": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#deliverycontract) DeliveryContract\
\
_Futures contract details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-9) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| name | string | false | none | Futures contract |\
| underlying | string | false | none | Underlying |\
| cycle | string | false | none | Cycle type, e.g. WEEKLY, QUARTERLY |\
| type | string | false | none | Contract type: inverse - inverse contract, direct - direct contract |\
| quanto\_multiplier | string | false | none | Multiplier used in converting from invoicing to settlement currency |\
| leverage\_min | string | false | none | Minimum leverage |\
| leverage\_max | string | false | none | Maximum leverage |\
| maintenance\_rate | string | false | none | Maintenance rate of margin |\
| mark\_type | string | false | none | Mark price type: internal - internal trading price, index - external index price |\
| mark\_price | string | false | none | Current mark price |\
| index\_price | string | false | none | Current index price |\
| last\_price | string | false | none | Last trading price |\
| maker\_fee\_rate | string | false | none | Maker fee rate, negative values indicate rebates |\
| taker\_fee\_rate | string | false | none | Taker fee rate |\
| order\_price\_round | string | false | none | Minimum order price increment |\
| mark\_price\_round | string | false | none | Minimum mark price increment |\
| basis\_rate | string | false | none | Fair basis rate |\
| basis\_value | string | false | none | Fair basis value |\
| basis\_impact\_value | string | false | none | Funding used for calculating impact bid, ask price |\
| settle\_price | string | false | none | Settle price |\
| settle\_price\_interval | integer | false | none | Settle price update interval |\
| settle\_price\_duration | integer | false | none | Settle price update duration in seconds |\
| expire\_time | integer(int64) | false | none | Contract expiry timestamp |\
| risk\_limit\_base | string | false | none | Risk limit base |\
| risk\_limit\_step | string | false | none | Step of adjusting risk limit |\
| risk\_limit\_max | string | false | none | Maximum risk limit the contract allowed |\
| order\_size\_min | integer(int64) | false | none | Minimum order size allowed by the contract |\
| order\_size\_max | integer(int64) | false | none | Maximum order size allowed by the contract |\
| order\_price\_deviate | string | false | none | Maximum allowed deviation between order price and current mark price. The order price `order_price` must satisfy the following condition:<br> abs(order\_price - mark\_price) <= mark\_price \* order\_price\_deviate |\
| ref\_discount\_rate | string | false | none | Trading fee discount for referred users |\
| ref\_rebate\_rate | string | false | none | Commission rate for referrers |\
| orderbook\_id | integer(int64) | false | none | Orderbook update ID |\
| trade\_id | integer(int64) | false | none | Current trade ID |\
| trade\_size | integer(int64) | false | none | Historical cumulative trading volume |\
| position\_size | integer(int64) | false | none | Current total long position size |\
| config\_change\_time | number(double) | false | none | Last configuration update time |\
| in\_delisting | boolean | false | none | Contract is delisting |\
| orders\_limit | integer | false | none | Maximum number of pending orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-140) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| cycle | WEEKLY |\
| cycle | BI-WEEKLY |\
| cycle | QUARTERLY |\
| cycle | BI-QUARTERLY |\
| type | inverse |\
| type | direct |\
| mark\_type | internal |\
| mark\_type | index |\
\
```\
{\
"name": "string",\
"underlying": "string",\
"cycle": "WEEKLY",\
"type": "inverse",\
"quanto_multiplier": "string",\
"leverage_min": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"mark_type": "internal",\
"mark_price": "string",\
"index_price": "string",\
"last_price": "string",\
"maker_fee_rate": "string",\
"taker_fee_rate": "string",\
"order_price_round": "string",\
"mark_price_round": "string",\
"basis_rate": "string",\
"basis_value": "string",\
"basis_impact_value": "string",\
"settle_price": "string",\
"settle_price_interval": 0,\
"settle_price_duration": 0,\
"expire_time": 0,\
"risk_limit_base": "string",\
"risk_limit_step": "string",\
"risk_limit_max": "string",\
"order_size_min": 0,\
"order_size_max": 0,\
"order_price_deviate": "string",\
"ref_discount_rate": "string",\
"ref_rebate_rate": "string",\
"orderbook_id": 0,\
"trade_id": 0,\
"trade_size": 0,\
"position_size": 0,\
"config_change_time": 0.1,\
"in_delisting": true,\
"orders_limit": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#debitfee) DebitFee\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-10) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| enabled | boolean | true | none | Whether GT fee deduction is enabled |\
\
```\
{\
"enabled": true\
}\
\
```\
\
Last Updated:7/13/2025, 12:10:24 PM

<|firecrawl-page-2-lllmstxt|>
## Gate API v4 Overview
- Spot & Margin

- Perpetual Futures

- Delivery Futures

- Options

- Unified

- Alpha

- Announcements


简体中文


- Python
- Shell

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#gate-api-v4-105-9) Gate API v4.105.9

Welcome to Gate API
APIv4 provides operations related to spot, margin, and contract trading, including public interfaces for querying market data and authenticated private interfaces for implementing API-based automated trading.

Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#access-url) Access URL

**REST API BaseURL:**

- Live trading: `https://api.gateio.ws/api/v4`
- TestNet trading: `https://api-testnet.gateapi.io/api/v4`
- Futures live trading alternative (futures only): `https://fx-api.gateio.ws/api/v4`

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#sdk) SDK

Available SDK:

- [Python(opens new window)](https://github.com/gateio/gateapi-python)
- [Java(opens new window)](https://github.com/gateio/gateapi-java)
- [PHP(opens new window)](https://github.com/gateio/gateapi-php)
- [Go(opens new window)](https://github.com/gateio/gateapi-go)
- [C#(opens new window)](https://github.com/gateio/gateapi-csharp)
- [NodeJS(opens new window)](https://github.com/gateio/gateapi-nodejs)
- [Javascript(opens new window)](https://github.com/gateio/gateapi-js)

Besides API examples, some SDK provides an additional demo application.
The demo application is a relatively complete example demonstrating how to use the SDK.
It can be built and run separately. Refer to corresponding repository for details.

- [Python(opens new window)](https://github.com/gateio/gateapi-python/tree/master/example)
- [Java(opens new window)](https://github.com/gateio/gateapi-java/tree/master/example)
- [C#(opens new window)](https://github.com/gateio/gateapi-csharp/tree/master/example)
- [Go(opens new window)](https://github.com/gateio/gateapi-go/tree/master/_example)

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#about-apiv4-key-improvement) About APIv4 key improvement

Previously(before April 2020) futures APIv4 key are separated from spot one, but this is
no longer the case anymore. You can create multiple keys with each key having multiple
permissions now. e.g. you can create one key with spot read/write and futures read/write
permission which can be used in both spot and futures trading.

History API keys will not be affected by this improvement. Previous spot key and futures key
are now one key with only spot permissions enabled, another only futures permission enabled.
You can reconfigure their permissions after migration.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#comparison-with-apiv2) Comparison with APIv2

APIv4 is a standalone brand-new HTTP REST API, currently used in parallel with APIv2.
APIv4 provides complete trading operations, with more highly secured authentication method.
What's more, APIv4 specification is written following
[OpenAPI Specification(opens new window)](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).
SDKs and documents are all generated from the same spec, which ensures consistency between
documents and implementation.

The ways APIv4 and APIv2 differ are:

1. Their API keys are separated from each other. Once logged into the web console,
v2 API keys are generated on _"APIKeys"_ page, while v4 _"APIv4Keys"_
page.
2. APIv2 supports only spot trading, while v4 supports all trading operations in spot, margin and futures.

Which one to choose:

1. If margin or futures trading are needed, choose APIv4.
2. If only spot trading or wallet operation is required, choose on your own.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#application-for-marketers) Application for Marketers

In order to further improve the platform's opening depth and trading liquidity,
we will recruit institutional market makers in an open and transparent way,
and provide a professional market maker's service rate scheme for professional institutional market makers
according to their contribution to the platform's liquidity.

1. Provide Gate UID
2. Provide other transaction volume screenshot or VIP level
3. Brief introduction of market making method and scale

Provide the above content and submit to [mm@gate.com](mailto:mm@gate.com) , we will accept within 3
working days.

TIP

Vip11 and above need to open GT deduction in the personal center to enjoy the professional
market rate.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#technical-support) Technical Support

If you have any questions or suggestions during the use, you can contact us in any of the following ways:

- Submit Work Order Feedback
- Online Work Order Feedback
- Send your contact information and questions to [mm@gate.com](mailto:mm@gate.com) We will assign
technical specialists to serve you.

If you encounter API errors, it is recommended that you sort out the following content, so that we can quickly analyze the problem for you:

1. Problem Description
2. Gate UID
3. Request URI and parameters
4. Error Code
5. Responses

DANGER

Even if you submit a problem, you should not submit the API key information to customer service or others, otherwise there will be serious asset risk. If it has been accidentally leaked, please delete the existing API and rebuild it.

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#changelog) Changelog

**v4.103.0**

- Add `code` field in `GET /spot/account_book` query parameter and response to filter account book entries by specific code
- Add `text` parameter to `closeAllPositions` operation for order remarks when closing all positions
- New comprehensive AccountBook code documentation with detailed explanations for over 300 transaction codes

**v4.102.6**

- Enhance staking swap response structure `SwapCoinStruct` with additional fields: `pid`, `subtype`, `exchange_amount`, `updateStamp`, `protocol_type`, `client_order_id`, `source`

**v4.102.0**

- Add `is_all_collateral` field in `GET /unified/accounts` endpoint response to indicate if all currencies are used as collateral
- Add `enabled_collateral` field in balances array of unified accounts to show currency collateral status
- New feature `POST /unified/collateral_currencies` endpoint, Set collateral currencies for cross-currency margin mode

**v4.101.9**

- New feature `GET /futures/{settle}/risk_limit_table` endpoint, Query risk limit tier table by table\_id
- Add `enable_tiered_mm` field in futures account model for tiered maintenance margin calculation
- Add `risk_limit_table` and `average_maintenance_rate` fields in position model for enhanced risk management
- Add `deduction` field in futures limit risk tiers for maintenance margin quick calculation
- Introduce new models: `FuturesRiskLimitTier` and `FuturesRiskLimitTierList` for risk management
- Enhance `POST /earn/staking/swap` endpoint response structure with improved swap order details

**v4.100.0**

- Add alpha account query and account book query functionality
- New feature `GET /earn/staking/coins` endpoint, Query on-chain staking coin types
- New feature `POST /earn/staking/swap` endpoint, On-chain staking coin swap
- Add `sub_broker_info` object field in broker commission and transaction APIs

**v4.99.0**

- Add `refresh_time` field in `GET /spot/accounts` endpoint response
- Remove the `PUT /earn/uni/interest_reinvest` endpoint

**v4.98.0**

- New feature `/earn/uni/rate` endpoint, Currency estimate annualized interest rate
- Add `delisting_time`、 `trade_url` field in `GET /spot/currency_pairs`、 `GET /spot/currency_pairs/{currency_pair}`
endpoint

**v4.97.0**

- New feature `GET /unified/batch_borrowable` endpoint, Batch query unified account can be borrowed up to a maximum
- `GET /spot/candlesticks` endpoint, `interval` supports `1s` granularity
- New feature `GET /earn/uni/chart` endpoint, UniLoan currency annualized trend chart
- New feature `POST /futures/{settle}/positions/cross_mode` endpoint, Switch to the full position-by-store mode

**v4.96.0**

- Add `cross_margin_balance`, `cross_mmr`, `cross_imr` field in `GET /futures/{settle}/accounts` response

**v4.95.0**

- Add `code` field in `GET /spot/account_book` query & response
- New feature `GET /unified/transferables` endpoint, Batch query unified account can be transferred up to a maximum of
- New feature `GET /margin/user/loan_margin_tiers` endpoint, Check the user's own leverage lending gradient in the
current market
- New feature `GET /margin/loan_margin_tiers` endpoint, Query the current market leverage lending gradient
- New feature `POST /margin/leverage/user_market_setting` endpoint, Set the user market leverage multiple
- New feature `GET /margin/user/account` endpoint, Query the user's leverage account list

**v4.94.0**

- New feature `GET /unified/currencies` endpoint, List of loan currencies supported by unified account
- Add `sub_uid` field in `GET /unified/accounts` query

**v4.93.0**

- Add `plan_id` field in `GET /earn/dual/investment_plan` query
- Add `from`、 `to`、 `page`、 `limit` field in `GET /earn/dual/orders` query
- Add `text` field in `GET /earn/dual/orders` response
- Add `text` field in `POST /earn/dual/orders` response
- New feature `GET /earn/staking/eth2/rate_records` endpoint, Query historical rate of ETH2

**v4.92.0**

2025-02-24

- Add `name` field in `GET /spot/currencies` query
- Add `base_name`、 `quote_name` field in `GET /spot/currency_pairs` response
- Add `unified` field in `GET /spot/price_orders` query
- Add `sub_uid` field in `GET /unified/accounts` query

**v4.91.0**

2025-02-10

`2025-04-01` After that, we will remove the following interface, please migrate to the new interface as soon as possible

**v4.90.0**

2025-01-20

- Add `transaction_type` field in `GET /wallet/push` query
- New feature `GET /rebate/user/sub_relation` endpoint, Query whether the specified user is in the system
- Add `order_size` field in `GET /futures/{settle}/liq_orders` response
- Add `type` field in `GET /spot/currency_pairs` response

**v4.88.0**

2024-12-24

- New feature `GET /spot/insurance_history` endpoint, Query spot insurance fund historical data
- Add `cross_balance`、 `iso_balance`、 `im`、 `mm`、 `imr`、 `mmr`、 `margin_balance`、 `available_margin` field
in `GET /unified/accounts` response
- `PUT /unified/unified_mode` endpoint，Added single-currency margin mode

**v4.87.0**

- New feature `GET /unified/history_loan_rate` endpoint, Get historical lending rates

**v4.86.0**

2024-12-02

- New feature `GET /wallet/order_status` endpoint. Transfer status query
- Add `update_id` field in `GET /futures/{settle}/positions` response

**v4.85.0**

2024-11-11

- Add `x-gate-exptime` field in `POST /futures/{settle}/orders`、 `POST /spot/batch_order` header.

Add `cross_order_margin`、 `cross_initial_margin`、 `cross_maintenance_margin`、 `cross_unrealised_pnl`、 `cross_available`、 `isolated_position_margin`
field in `POST /futures/{settle}/dual_mode` response.

**v4.84.0**

2024-11-04

- New feature `GET /loan/multi_collateral/current_rate` endpoint, Query the current interest rate of the currency
- Add `lowest_size`、 `highest_size` field in `GET /spot/tickers` response
- Add `amount` field in `POST /earn/dual/orders` request body

**v4.83.0**

2024-10-28

- New feature `GET /unified/leverage/user_currency_config` endpoint, Query the maximum and minimum leverage multiples
that users can set for a currency
- New feature `GET /unified/leverage/user_currency_setting` endpoint, Get the user's currency leverage
- New feature `POST /unified/leverage/user_currency_setting` endpoint, Set the currency leverage ratio
- Add `id` field in `GET /futures/{settle}/account_book` response
- Add `leverage` field in `GET /unified/currency_discount_tiers` response

**v4.82.0**

2024-10-14

- New feature `GET /account/rate_limit` endpoint, Get user flow limit information. For details, please refer
to [Trade Ratio Rate Limiting](https://www.gate.com/docs/developers/apiv4/en/#trade-ratio-rate-limiting)
- `GET /account/detail` 接口, 返回值增加 `copy_trading_role` field

**v4.81.0**

2024-09-30

- New feature `POST /options/countdown_cancel_all` endpoint, Countdown to cancel order
- Add `message` field in `GET /wallet/push` response
- Add `from`、 `to` in `GET /futures/{settle}/funding_rate` query
- Add `is_max` field in `POST /earn/dual/orders` response

**v4.80.0**

2024-09-09

- New feature `GET /options/mmp` endpoint, MMP Query
- New feature `POST /options/mmp` endpoint, MMP Settings
- New feature `POST /options/mmp/reset` endpoint, MMP Reset
- Add `block_number` field in `GET /wallet/withdrawals` response

**v4.79.0**

2024-09-02

- Add `from`、 `to` field in `GET /unified/interest_records` query
- Add `options` field in `GET /unified/unified_mode` response
- Add `options` field in `PUT /unified/unified_mode` request body

**v4.78.0**

2024-08-19

- New feature `GET /wallet/push` endpoint, Get Records
- New feature `POST /withdrawals/push` endpoint, Transfer between spot main accounts. Both parties cannot be
sub-accounts.
- New feature `GET /futures/{settle}/batch_amend_orders` endpoint, Batch modify orders with specified IDs
- Add `close_size` field in `GET /futures/{settle}/my_trades` response
- Add `tx_id` field in `POST /wallet/transfers` response

**v4.77.0**

2024-08-05

- New feature: add `GET /sub_accounts/unified_mode` endpoint，Get sub-account mode
- Add `from`、 `to` field in `GET /rebate/broker/commission_history` query
- Add `from`、 `to` field in `GET /rebate/broker/transaction_history` query

**v4.76.0**

2024-07-22

- New feature: add `GET /rebate/partner/sub_list` endpoint，Partner subordinate list
- Add `page`、 `limit` field in `GET /flash_swap/currency_pairs` query
- Add `order_id`、 `currency_pair`、 `account` field in `PATCH /spot/orders/{order_id}`
- Add `order_id`、 `currency_pair`、 `account` field in `DELETE /spot/orders/{order_id}`

**v4.75.1**

2024-07-08

- New feature: add `GET /delivery/{settle}/risk_limit_tiers` endpoint，querying risk limit levels
- New feature: add `GET /rebate/partner/transaction_history` endpoint，partners to get the transaction history of
recommended users
- Add `borrow_type` field in `GET /unified/loan_records` response
- Add `accum_size` field in `GET /futures/{settle}/position_close` response

**v4.75.0**

2024-06-24

- New feature: add `GET /account/debit_fee` endpoint，query GT deduction configuration.
- New feature: add `POST /account/debit_fee` endpoint, to enable or disable GT deduction for the current account.

**v4.74.1**

2024-06-11

- Optimization of DOM for the visible area on mobile devices

**v4.74.0**

2024-05-29

- New feature: add `GET /unified/loan_margin_tiers` endpoint, list loan margin tiers

**v4.73.0**

2024-05-27

- Add `is_all` parameter in `POST /wallet/small_balance` endpoint
- Add `text` field in `POST /spot/cancel_batch_orders` response
- Add `funding`、 `funding_version`、 `use_funding` field in `GET /unified/accounts` response

**v4.72.0**

2024-05-13

- Add `last_access` field in `GET /sub_accounts/{user_id}/keys` response
- Add `contract` field in `GET /futures/{settle}/risk_limit_tiers` response

**v4.71.0**

2024-04-23

- Add `page` parameter in `GET /wallet/saved_address` endpoint
- New feature: add `GET /api/v4/rebate/user/info` endpoint, retrieve user rebate information
- New feature: add `POST /unified/portfolio_calculator` endpoint, portfolio margin calculator
- New feature: add `GET /unified/risk_units` endpoint, retrieve user risk unit
- New feature: add `PUT /unified/unified_mode` endpoint, set unified account mode
- New feature: add `GET /unified/unified_mode` endpoint, retrieve unified account mode

**v4.70.0**

2024-04-08

- Add `pnl_pnl`、 `pnl_fund`、 `pnl_fee` field in `GET /futures/{settle}/positions` response
- Add `pnl_pnl`、 `pnl_fund`、 `pnl_fee` field in `GET /futures/{settle}/position_close` response

**v4.69.0**

2024-03-25

- Add `text` field in `POST /delivery/{settle}/price_orders` response

**v4.68.0**

2024-03-18

- New feature: add `GET /unified/currency_discount_tiers` endpoint, list currency discount tiers
- Add `type` parameter in `GET /unified/loans` endpoint
- Add `type` parameter in `GET /unified/interest_records` endpoint

**v4.67.0**

2024-03-11

- Add `filled_amount` field in `POST /spot/orders`, `POST /spot/batch_orders` response
- In frequency limit rule for the wallet withdrawal interface, the speed limit description has been corrected
from `10r/10s` to `1r/3s`(No modification to the original rate limiting behavior)

**v4.66.1**

2024-02-19

- New feature: add `GET /wallet/small_balance` endpoint, list small balance.
- New feature: add `GET /wallet/small_balance_history` endpoint, list small balance history.
- New feature: add `GET /unified/estimate_rate` endpoint, get unified estimate rate.

**v4.65.0**

2024-01-29

- Add `debit_fee` field in `GET /spot/batch_fee` response
- Add `user_id` parameter in `DELETE /account/stp_groups/{stp_id}/users` endpoint
- Spot API introduces asynchronous support modes for create orders: `ACK`, `RESULT`, `FULL`. For details, please refer
to [SPOT API](https://www.gate.com/docs/developers/apiv4/en/#create-an-order)

**v4.64.0**

2024-01-22

- Add `order_type` parameter in `GET /loan/multi_collateral/orders` endpoint
- Add `order_type`, `fixed_type`, `fixed_rate`, `expire_time`, `auto_renew`, `auto_repay` field
in `GET /loan/multi_collateral/orders` response
- Add `before_ltv`, `after_ltv` field in `GET /loan/multi_collateral/repay` response
- New feature: add `GET /loan/multi_collateral/fixed_rate` endpoint, query multi-collateral fix rate.
- Add `unrealised_pnl`, `borrowed` field in `GET /wallet/total_balance` response

**v4.63.0**

2024-01-15

- Add `decimal` field in `GET /wallet/currency_chains` response
- New feature: add `GET /futures/{settle}/risk_limit_tiers` endpoint, list risk limit tiers.

**v4.62.0**

2024-01-02

- New feature: add `POST /futures/{settle}/batch_cancel_orders` endpoint, users have the ability to batch cancel orders.
- New feature: add multi-collateral-loan api. ( `/loan/multi_collateral/**`)

**v4.61.0**

2023-12-18

- New features: The broker obtains the user's commission rebate records in `GET /rebate/broker/commission_history`
and `GET /rebate/broker/commission_history` endpoints

**v4.60.0**

2023-12-01

- Breaking change: New [Unified API](https://www.gate.com/docs/developers/apiv4/en/#unified-account) is online. The old `/portfoli/*` endpoints are deprecated.
- New features: add earn product api. ( `/earn/**`)
- Add `trade_id` field in `GET /futures/{settle}/account_book` response

**v4.59.0**

2023-11-22

- Add `funding_cap_ratio` field in `GET /futures/{settle}/contracts` response
- Add `contract` field in `GET /delivery/{settle}/account_book` response
- Add `withdraw_percent_on_chains` field in `GET /wallet/withdraw_status` response
- Add `leverage` field in `GET /portfolio/accounts` response

**v4.58.0**

2023-11-03

- Add `tier` field in `GET /account/detail` response
- Add `max_base_amount`、 `max_quote_amount` field in `GET /spot/currency_pairs` response

**v4.57.0**

2023-10-20

- New feature: API Gateway inbound & outbound time, For more details, please refer to
the [API Gateway in/out time](https://www.gate.com/docs/developers/apiv4/en/#api-gateway-in-out-time)
- New feature: support portfolio account in `POST /spot/orders` endpoint
- New feature: add `PUT /earn/uni/interest_reinvest` endpoint, users have the option to enable or disable interest
reinvestment.
- New feature: add `POST /spot/amend_batch_orders` endpoint, users have the ability to batch modify orders.
- Add `sequence_id` field in `GET /spot/trades` response
- Add `text` field in `GET /spot/account_book` response
- Add `text` field in `GET /spot/my_trades` response
- `GET /portfolio/spot/orders`、 `GET /portfolio/spot/orders`、 `GET /portfolio/spot/orders/{order_id}`、 `DELETE /portfolio/spot/orders/{order_id}`
and `PATCH /portfolio/spot/orders/{order_id}` have been deprecated. We will remove the endpoints by the end of October
2023\. Please use `/spot/orders` instead.

**v4.56.0**

2023-09-25

- Add `repayment_type` field in `GET /portfolio/loan_records` endpoint.
- Add request parameter `holding` in `GET /futures/{settle}/positions` endpoint
- Add request parameter `role` in `GET /futures/{settle}/my_trades_timerange` endpoint
- Add request parameter `side` and `pnl` in `GET /futures/{settle}/position_close` endpoint

**v4.55.0**

2023-09-12

- Add new `POST /portfolio/account_mode` endpoint, allow to change the mode.

**v4.54.0**

2023-08-28

- Add `contract_address` field in `GET /wallet/currency_chains` endpoint.
- Add `GET /portfolio/spot/currency_pairs` and `GET /portfolio/spot/currency_pairs/{currency_pair}` endpoints, list
portfolio spot's currency pairs.

**v4.53.0**

2023-08-14

- New feature: delete user in STP group in `DELETE /account/stp_groups/{stp_id}/users` endpoint

**v4.52.0**

2023-08-07

- New feature: add collateral loan api

**v4.51.0**

2023-07-29

- Adjusted and optimized the [account book types](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type)
- Add `mode` field in `GET /account/detail` edpoint.

**v4.50.0**

2023-07-14

- New feature: New [Portfolio API](https://www.gate.com/docs/developers/apiv4/en/#portfolio-account). Currently, these services are only available to whitelisted
users. If you are interested in accessing these APIs, please contact our institutional department for further
information.
- Add new endpoint `GET /flash_swap/currency_pairs`, list all flash swap currency pair

**v4.49.0**

2023-07-03

- Add new [frequency limit rule](https://www.gate.com/docs/developers/apiv4/en/#frequency-limit-rule)，the new rule is expected to take effect on 2023-07-10 (UTC+8)
- In the `GET /futures/{settle}/orders` API endpoint, the request field `contract` has been modified to be optional
instead of mandatory.

**v4.48.0**

2023-06-16

- Add `client_order_id` fields in `GET /wallet/sub_account_transfers` edpoint.

**v4.47.0**

2023-05-23

- New feature: add STP group admin api
- New feature: query estimated interest rates of margin in `GET /margin/uni/estimate_rate` endpoint.
- New feature: list futures order by time range in `GET /futures/{settle}/orders_timerange` endpoint
- Add `underlying`、 `underlying_price`、 `mark_iv`、 `delta`、 `gamma`、 `vega`、 `theta` fields
in `GET /options/positions/{contract}` endpoint.

**v4.46.0**

2023-05-08

- New feature: query spot account book in `GET /spot/account_book` endpoint
- New feature: query user futures trading fee in `GET /futures/{settle}/fee` endpoint

**v4.45.0**

2023-04-21

- The margin loan has been migrated to the `Lend & Earn`. For more information, please refer to
the [Margin Migration Instructions](https://www.gate.com/docs/developers/apiv4/en/#margin-migration-instructions)
- New feature: Add `Self-Trade Prevention` feature in the `POST /futures/{settle}/batch_orders` endpoint.

**v4.44.0**

2023-04-07

- Add `ORDER_BOOK_NOT_FOUND` and `FAILED_RETRIEVE_ASSETS` error messages.

**v4.43.0**

2023-03-27

- New feature: Add `Self-Trade Prevention` feature in the `POST /spot/orders` endpoint. Fore more detail, please refer
to [STP overview](https://www.gate.com/docs/developers/apiv4/en/#self-trade-prevention-stp)
- New feature: Get API key's ip whitelist in `GET /account/detail` endpoint.
- Add `amend_text` in `PATCH /spot/orders/{order_id}` endpoint.

**v4.42.0**

2023-03-13

- New feature: add `Lend & Earn` API
- New feature: Add `Self-Trade Prevention` feature in the `POST /futures/{settle}/orders` endpoint. Fore more detail,
please refer to [STP overview](https://www.gate.com/docs/developers/apiv4/en/#self-trade-prevention-stp)
- Add `delivery` account type in `POST /wallet/sub_account_transfers` endpoint

**v4.41.0**

2023-03-03

**v4.40.0**

2023-02-24

- New feature: List Auto-Deleveraging history endpoint `Get /futures/{settle}/auto_deleverages`
- Add `sum` field in `GET /futures/{settle}/candlesticks` endpoint

**v4.39.0**

2023-02-09

- New feature: Query a batch of user trading fee rate endpoint `GET /spot/batch_fee`
- Add `enable_bonus`、 `enable_credit` fields in `GET /futures/{settle}/contracts` endpoint

**v4.38.0**

2023-02-04

- New feature: time range query for my futures trade endpoint `GET /futures/{settle}/my_trades_timerange`
- Add `withdraw_order_id` field in `POST /withdrawals` endpoint

**v4.37.0**

2023-01-20

- Add new rebate API endpoints.

**v4.36.0**

2022-12-23

- Hiding all amount is not supported any more when using `iceberg` in `POST /spot/orders` and `POST /spot/batch_orders`
endpoints

**v4.35.0**

2022-12-09

- New feature: amend order endpoint `/spot/orders/{order_id}`
- Add `avg_deal_price` field in `GET /spot/orders` response
- Support market order in `POST /spot/batch_orders` endpoint

**v4.34.0**

2022-11-25

- Support market order in `POST /spot/orders` endpoint

**v4.33.0**

2022-11-11

- New feature: Futures Premium Index endpoint `GET /futures/{settle}/premium_index`
- Allow to specify password and email when creating a sub-account.

**v4.32.0**

2022-10-28

- Improve options api document

**v4.31.0**

2022-10-14

- Allow to transfer futures and cross\_margin funds between two sub-accounts in `POST /wallet/sub_account_to_sub_account`
endpoint

**v4.30.0**

2022-09-23

- New feature: manage sub-accounts API Key
- New feature: lock and unlock sub-account endpoint
- Allow to transfer between two sub-accounts in `POST /wallet/sub_account_to_sub_account` endpoint

**v4.29.0**

2022-09-09

- New feature: create and list sub-accounts
- Add `settle` parameter in `GET /wallet/fee` endpoint
- Add `refr` field in option order
- The maximum number of API Keys changes to 20

**v4.28.0**

2022-08-12

- Add `offset` parameter in `GET /futures/{settle}/trades`
- new countdown cancel orders endpoint for spot and futures.

**v4.27.0**

2022-07-29

- Add `X-Client-Request-Id` http header for tracking request
- new create a batch of futures order endpoint `POST /futures/{settle}/batch_orders`
- new `FOK` tif type for futures order

**v4.26.0**

2022-07-15

- Spot Price-Trigger order supports portfolio margin account
- Add `GET /wallet/saved_address` to list saved address
- `POST /wallet/transfers` returns `tx_id` field
- Add `GET /wallet/sub_account_cross_margin_balances` to query subaccount's `cross_margin` account
- Add `status` field in `GET /margin/currency_pairs` response

**v4.25.1**

2022-07-06

- New `GET /spot/time` endpoint which get system's time info.
- New `GET /options/my_settlements` endpoint which list my selttlements.
- Add `change_utc0`, `change_utc8` fields in `GET /spot/tickers` endpoint

**v4.25.0**

2022-06-24

- Support portfolio margin account API
- Cross-margin add more fields. Please refer to endpoint document for more details.
- New `POST /spot/cross_liquidate_orders` spot trading endpoint that close position when the
cross-currency is disabled
- Add `bouns` and `history` fields in `GET /futures/{settle}/accounts` endpoint
- Add `text`、 `fee` and `point_fee` fields in `GET /futures/{settle}/my_trades` endpoint
- Fix typo for `cancel a price-triggered order` endpoints
- `POST /wallet/sub_account_transfers` supports transferring to `cross_margin`

**v4.24.0**

2022-05-20

- Support flash swap operations with new API group `/flash_swap`. Spot operation permission is
required.
- New wallet APIs `GET /wallet/sub_account_margin_balances`
and `GET /wallet/sub_account_futures_balances` to help main account retrieving sub accounts'
margin and perpetual contract balances
- New perpetual contract API `GET /futures/{settle}/index_constituents/{index}` to retrieve index
price constituents
- Fix missing fields like `order_type` in `FuturesPriceTriggeredOrder`

**v4.23.4**

2022-04-25

- Spot candlesticks supports `30d` interval

**v4.23.3**

2022-04-01

1. Spot candlestick API returns base currency amount
2. Spot currency detail add `chain` field.
3. Add withdrawal and deposit status in `GET /wallet/currency_chains` response
4. Add missing `cross_leverage_limit` in perpetual contract's dual mode position leverage update API
5. Support more intervals in perpetual and delivery contract candlesticks

**v4.23.2**

2022-01-21

1. Add `fee` in withdrawal and deposit history
2. Add fix fee rate in spot `Currency`

**v4.23.1**

2021-12-23

1. Spot orders support new `time_in_force` `FOK`
2. New `FOK_NOT_FILL` error label

**v4.23.0**

2021-12-09

1. Add options API
2. Add detailed rate limiting rules
3. Add `GET /wallet/currency_chains` to retrieve chains supported by currency
4. Add additional status for deposit and withdrawal history

**v4.22.4**

2021-11-01

1. Data type of `ctime` and `ftime` in `SpotPriceTriggeredOrder` should be `int64`

**v4.22.3**

2021-10-27

1. `GET /spot/trades` supports time range based query using `from` and `to`.

**v4.22.2**

2021-09-29

1. Add more status in withdrawal or deposit record model
2. Add new write only field `auto_size` in `FuturesOrder` to support closing dual mode position.

**v4.22.1**

2021-09-07

1. New wallet API `GET /wallet/total_balance` to retrieve all user's estimate balance.
2. Add `locked` and `risk` in margin account response
3. Margin and cross margin loans support custom text input.

**v4.22.0**

2021-08-13

1. Delivery contract API supports BTC settled
2. Spot API `GET /spot/orders` and `GET /spot/my_trades` supports query by time range
3. Add margin and cross margin max borrowable API
4. Multiple document enhancements.

**v4.21.6**

2021-08-12

1. Fix incorrect address field name in `GET /wallet/deposit_address`

**v4.21.5**

2021-06-30

- `GET /spot/orders`, `GET /spot/orders/{order_id}` and `GET /spot/my_trades` allow empty
`currency_pair` if operated against finished orders
- Add fixed withdrawal fee on multiple chains in `GET /wallet/withdraw_status` response
- Add `GET /margin/transferable` to retrieve maximum transferable amount from margin account
- Add `from` and `to` parameter to specify time range for futures position closes history API

**v4.21.4**

2021-06-23

- Add millisecond timestamp in `GET /margin/account_book` response

**v4.21.3**

2021-06-17

- Add order book timestamp for both spot and futures trading

**v4.21.2**

2021-06-07

- Futures API support cross margin leverage modification
- Add new spot cross margin API `/margin/cross`
- Add spot order operations using spot cross margin account
- Add unpaid interests in spot margin account query
- Add new millisecond fields `create_time_ms` and `update_time_ms` in spot orders.
- Add `DELETE /withdrawals/{withdrawal_id}` to cancel withdrawal operation

**v4.20.1**

2021-04-14

- Update document links

**v4.20.0**

2021-03-25

- Support spot auto orders with API group `/spot/price_orders`

**v4.19.6**

2021-03-22

- Add trading timestamp in spot currency pair

**v4.19.5**

2021-03-18

- Spot and Futures operations based on order ID also accept user custom ID(but only for 30 minutes
since creation)

**v4.19.4**

2021-03-10

- `/wallet/sub_account_transfers` supports transferals with sub user's perpetual contract account

**v4.19.3**

2021-03-04

- Add margin loans auto repay API `/margin/auto_repay`
- Add `multichain_address` in `/wallet/deposit_address` for currencies with multiple deposit
addresses
- Optimize documentation

**v4.19.2**

2021-03-01

- Add `/wallet/fee` API to retrieve trading fee. Previous `/spot/fee` is deprecated in favour of
this one.
- Add new field `chain` in withdrawal operation.
- Add new field `with_id` in `/futures/{settle}/order_book` API and `id` field in its response
- Add new `offset` in API `/futures/{settle}/position_close` to retrieve position close history with
pagination.
- Add contract value calculation. Refer to `Contract` model for details.
- Fix incorrect field type in futures stats API

**v4.18.4**

2021-01-22

- Add field `create_time_ms` in spot `Trade` model
- ETF currency pairs' ticker add net value related info

**v4.18.1**

2021-01-07

- Add iceberg order support for spot orders
- Fix incorrect field types in `/futures/{settle}/contract_stats`

**v4.18.0**

2020-12-21

- Add new spot API `/spot/currencies` and `/spot/currencies/{currency}` to retrieve currency info
- Add more fields, e.g., `top_lsr_account`, `top_lsr_size`, in futures `ContractStat` model.

**v4.17.1**

2020-12-16

- Increase maximum of `limit` in `/spot/order_book` to 100

**v4.17.0**

2020-12-15

- Add `/wallet/sub_account_balances` to retrieve sub accounts' balances.

**v4.16.1**

2020-12-10

- Fix mistaken field name `dual_mode` in futures position model which should be `mode` instead.

**v4.16.0**

2020-12-09

_Spot_

- Increase order number limit each currency pair to 10 in `POST /spot/batch_orders`
- Add new query parameter `reverse` in `GET /spot/trades` to trace back trading history

_Futures_

- Add perpetual contract dual mode position support. Use `/futures/{settle}/dual_mode` to set
position's dual mode. For dual mode position operations, refer
to `/futures/{settle}/dual_comp/positions` API group
- Add perpetual contract new field `in_dual_mode` in futures account response model;
`dual_mode` in position response model.
- Add new perpetual contract public API `/futures/{settle}/liq_orders` to query liquidated orders in
markets

**v4.15.5**

2020-11-04

- Add `/futures/{settle}/contract_stats` API to retrieve contract stats
- Add `/margin/{currency_pair}` to retrieve single margin currency pair detail

**v4.15.4**

2020-09-01

- Add `point_type` in `GET /spot/fee` response
- Add `GET /wallet/withdraw_status` API
- Add C# SDK entry

**v4.15.2**

2020-08-12

- Add `GET /spot/fee` to retrieve spot order trading fee rates

**v4.15.1**

2020-08-04

- Add `GET /spot/open_orders` to retrieve all open orders in spot trading
- Add `GET /margin/account_book` to retrieve margin account balance history

**v4.14.1**

2020-07-08

- maximum length of `text` field in order extends to 28(prefix excluded)

**v4.14.0**

2020-07-06

- New Delivery contract APIs `/delivery`

**v4.13.1**

2020-06-28

- Add `GET /wallet/sub_account_transfers` to list sub account transfer records

**v4.13.0**

2020-05-20

- APIv4 now supports withdraw API. Refer to `POST /withdrawals` and "Authentication"
section for details.
- `POST /wallet/transfers` supports transferring between spot and futures account
- Wallet API supports retrieving deposits and withdrawals history
- Futures orders and personal trades retrieving now supports `offset` field
- Futures `Contract` model add new field `in_delisting`

**v4.12.0**

2020-04-08

- APIv4 Key management improved. Keys are no longer separated with different trading types.
Every key can now have multiple operation permissions. Refer to _"About APIv4 key improvement"_
for details.
- Add `POST /wallet/sub_account_transfers` to support transferring between main and sub account
- `GET /spot/candlesticks` adds query parameters `from` and `to` to support retrieving history data
points

**v4.11.2**

2020-03-29

- Add `filled_total` in `Order` to replace `fill_price` (the latter is badly named)
- Add new error label `POC_FILL_IMMEDIATELY`

**v4.11.1**

2020-03-23

- Add `role` in `GET /spot/my_trades` response
- Fix missing currency account in `GET /margin/funding_accounts`

**v4.11.0**

2020-03-20

- Spot order supports GT fee discount
- Spot order time in force supports `poc`

**v4.10.1**

2020-02-24

- Add `trade_status` in spot currency pair

**v4.10.0**

2020-02-17

- Margin order creation adds new field `auto_borrow`(write only) to borrow
the insufficient part by the system if balance is not enough
- Add new API `POST /spot/cancel_batch_orders` to support batch cancellation
with specified order IDs
- Add new document section "Error handling" and "Which one to choose, APIv4 or APIv2?"

**v4.9.1**

2020-01-07

- Add fee and recent modification time in `Order` and `BatchOrder`
- Add fee in `GET /spot/my_trades` response

**v4.9.0**

2019-12-17

- `last_id` in `GET /futures/{settle}/trades` is deprecated. Use `from` and `to` to retrieve trading
history

**v4.8.2**

2019-12-02

- Add `/spot/batch_orders` to support creating a bundle of spot or margin orders
- Fee rate of margin loan repayment enjoys VIP discount
- `Loan` add new fields `fee_rate`(fee rate of lending loan)
and `orig_id`(original loan ID if loan is auto renewed)

**v4.8.1**

2019-11-27

- Fix missing `settle` in `GET /futures/{settle}/positions` docs and code snippet

**v4.8.0**

2019-11-07

- Futures API now supports settling in USDT.
- Change `/futures` to `/futures/{settle}` in ALL futures API to support
futures operations in different settle currency.
- `currency` field in `/futures/{settle}/accounts` response adds new value: `USDT`
response to replace `volume_24h_btc` and `volume_24h_usd`. The latter two are still
preserved for compatibility usage, but are NOT recommended for any futures operations.

To use USDT futures, just replace `/futures` with `/futures/usdt`, e.g.
use `GET /futures/usdt/accounts` to retrieve futures accounts settled in USDT,
while `GET /futures/btc/accounts` returns accounts in BTC.

For compatibility, `GET /futures/xxx` defaults to `GET /futures/btc/xxx`, e.g.
`GET /futures/accounts` will be treated as `GET /futures/btc/accounts`

**v4.7.3**

2019-07-18

- Add `text` in `/spot/orders` and `/futures/orders` to support user defined order information

**v4.6.3**

2019-06-11

- Add point information in Futures account and position

**v4.7.2**

2019-05-29

- Change `rate` in `Loan` as non-required for lending side.

**v4.7.1**

2019-04-17

- Add wallet v4 API. Support transfers between spot and margin account for now.
- `GET /margin/loans` can sort by `rate` and support an optional parameter `currency_pair`
- Fix miscellaneous document issues

**v4.6.2**

2019-04-24

- Fix price-triggered futures order's docs incorrect override docs for
`GET /futures/orders/{order_id}` and `DELETE /futures/orders/{order_id}`

**v4.6.1**

2019-04-02

- Add `high_24h`, `low_24h` and `funding_rate_indicative` in futures ticker

**v4.6.0**

2019-03-21

_SDK related only_

- Rename futures order related function name in SDKs to avoid duplication
with spot order API in Go
- Fix query parameter not decoded while generating authentication signature

**v4.5.2**

2019-03-14

- `currency_pair` in `/spot/order_book` should be a required parameter
- Optimize document code samples

**v4.5.1**

2019-03-11

- Fix missing URL parameter description

**v4.5.0**

2019-03-05

To avoid version confusion, all versions in APIv4 (documents and SDKs are both included) will start
with `4` from now on

- Add Spot v4 API to provide improved API capability
- Add Margin v4 API to provide support for margin loans and trading
- Add Futures price triggered auto order API support. Refer to `/futures/price_orders` for details
- Base URL of all Gate API v4 real trading changed to `https://api.gateio.ws/api/v4`

**v1.3.0**

2019-02-13

_Important update_

- Domain of base URLs are changed to `fx-api.gateio.ws` and `fx-api-testnet.gateio.ws`
respectively, `*.gateio.io` is deprecated and will soon be out of service.

**v1.2.1**

2019-02-13

- Add `volumn_24h_usd` and `volume_24h_btc` in `GET /futures/tickers` response

**v1.2.0**

2019-01-17

- Add `GET /futures/contracts/{contract}` to get one single contract
- Add `GET /futures/positions/{contract}` to get one single position
- Add `GET /futures/account_book` to retrieve user account balance history
- Add `config_change_time` in `Contract` model
- fix miscellaneous document issues

**v1.1.0**

2019-01-08

- Add more fields to `Contract`, `Position`, `FuturesOrder`
- Add API `GET /futures/position_close` to retrieve position close history
- Add optional `order_id` support for API `GET /futures/my_trades`
- Change the status code of `DELETE /futures/orders` and `DELETE /futures/orders/{order_id}` from
204 to 200,
with cancelled order details returned on success.
- Request `DELETE /futures/orders/{order_id}` with invalid order ID or order
that has been finished will return 404 instead of ignoring the error
- `POST /futures/orders` now supports POC, iceberg

**v1.0.0**

2018-12-30

- Initial release

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#general) General

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#matching-mechanism) Matching mechanism

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#matching-priority) Matching priority

Gate Order matching follows Price Priority > Time priority principle.

Suppose that the order book is as follows：

| Order | Order time | Ask/Selling price |
| --- | --- | --- |
| A | 10:00 | 100 |
| B | 10:00 | 102 |
| C | 10:01 | 100 |

If the current price of 10:02 pays 102, the final transaction order is: A, C, B

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#order-life-cycle) Order life cycle

A valid order sent to the matching engine is immediately confirmed and executed with existing
orders, with the executing result sent back to the client.

If an order is fully executed, then it is closed. If any part of the order is not executed
immediately, orders with TimeInForce set to `IOC` will be cancelled, while others will be appended
to the price list, waiting for subsequent filling or being cancelled.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#data-center) Data Center

Gate data center is located in AWS Japan's ap-northeast-1 region.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-overview) API Overview

| API Classification | Category Links | Overview |
| --- | --- | --- |
| host + `/api/v4/spot/*` | Spot Trading | Including currency status, market information, order, transaction records and other functions |
| host + `/api/v4/margin/*` | Margin Trading | Margin account management, lending, repayment, etc |
| host + `/api/v4/wallet/*` | Wallet Management | Charge and withdrawal records, balance inquiries, fund transfers, etc. |
| host + `/api/v4/withdrawals/*` | Withdrawal | Withdrawal of digital currency |

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#margin-migration-instructions) Margin Migration Instructions

Between 14:00 (UTC+8) on April 13, 2023 and 14:00 (UTC+8) on April 23, 2023, the platform will gradually migrate the assets that have not been borrowed in the lending market to the `Lend & Earn` through an automated system process. At the same time, assets that have already been borrowed will be cancelled for automatic lending. After the migration is complete, you can check your investment details in the `Lend & Earn`. During this period, borrowing funds through the lending market will be temporarily suspended. You can also manually transfer your assets from the lending market to the `Lend & Earn` to obtain investment returns in advance.

After the automatic migration, the old version of the borrowing and lending endpoint will be deprecated, and the new version of the endpoint can be found in the /margin/uni endpoint group. For detailed endpoint migration, please refer to the following table:"

Margin account related endpoints：

| Name | Path | Deprecated | New Path |
| --- | --- | --- | --- |
| Margin account list | GET /margin/accounts | No | `-` |
| List margin account balance change history | GET /margin/account\_book | No | `-` |
| Funding account list | GET /margin/funding\_accounts | No | `-` |
| Update user's auto repayment setting | POST /margin/auto\_repay | No | `-` |
| Querying user's automatic repayment settings | GET /margin/auto\_repay | No | `-` |
| Get the max transferable amount for a specific margin currency | GET /margin/transferable | No | `-` |

The margin lending and borrowing related APIs have been migrated to the `/margin/uni` API group：

| Name | Old Path | Deprecated | New Path |
| --- | --- | --- | --- |
| List all supported currency pairs supported in margin trading | GET /margin/currency\_pairs | Yes | GET /margin/uni/currency\_pairs |
| Query one single margin currency pair | GET /margin/currency\_pairs/{currency\_pair} | Yes | GET /margin/uni/currency\_pairs/{currency\_pair} |
| Lend or borrow | POST /margin/loans | Yes | POST /margin/uni/loans |
| Retrieve one single loan detail | GET /margin/loans/{loan\_id} | Yes | `-` |
| List all loans | GET /margin/loans | Yes | GET /margin/uni/loans |
| Repay a loan | POST /margin/loans/{loan\_id}/repayment | Yes | POST /margin/uni/loans |
| List loan repayment records | GET /margin/loans/{loan\_id}/repayment | Yes | GET /margin/uni/loan\_records |
| Get the max borrowable amount for a specific margin currency | GET /margin/borrowable | Yes | GET /margin/uni/borrowable |
| List interest records | `-` | `-` | GET /margin/uni/interest\_records |

The earn related APIs have been migrated to the `/earn/uni` API group):

| Name | Old Path | Deprecated | New Path |
| --- | --- | --- | --- |
| List all supported currency pairs supported in margin trading | GET /margin/currency\_pairs | Yes | GET /earn/uni/currencies |
| Query one single margin currency pair | GET /margin/currency\_pairs/{currency\_pair} | Yes | GET /earn/uni/currencies/{currency} |
| Lend or borrow | POST /margin/loans | Yes | POST /earn/uni/lends |
| List all loans | GET /margin/loans | Yes | GET /earn/uni/lends |
| Order book of lending loans | GET /margin/funding\_book | Yes | - |
| Merge multiple lending loans | POST /margin/merged\_loans | Yes | - |
| Modify a loan | PATCH /margin/loans/{loan\_id} | Yes | PATCH /earn/uni/lends |
| Cancel lending loan | DELETE /margin/loans/{loan\_id} | Yes | POST /earn/uni/lends |
| List repayment records of a specific loan | GET /margin/loan\_records | Yes | GET /earn/uni/lend\_records |
| Get one single loan record | GET /margin/loan\_records/{loan\_record\_id} | Yes | `-` |
| Modify a loan record | PATCH /margin/loan\_records/{loan\_record\_id} | Yes | `-` |
| List interest records | `-` | `-` | GET /earn/uni/interest\_records |

# [\#](https://www.gate.com/docs/developers/apiv4/en/\#api) API

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#http-convention) HTTP convention

- All read endpoints use `GET` method. They accept only request parameters. No request body will be
read.
- `DELETE` methods remove resources(like orders), but not all removing operation using `DELETE`,
as `DELETE` s don't read request body either. For complex removing operations, `POST` method is
used with parameters filled in request body.
- Updating is done using `POST`, `PUT` or `PATCH` method. Their parameters are either in body or
request parameters for different endpoints. Refer to endpoint detail for how to send the request.
- All endpoints return HTTP status code `2xx` on success. `401` is returned on authentication
failure. Other `4xx` codes mean the request is malformed. `5xx` means the server encounter some
critical error on processing the request. Commit issues if `5xx` is met.

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#time) Time

All time related fields are unix timestamp in **seconds** if no extra note, but they may differ
in formats(int64, number or string). Possible values like the following may be returned:

- 1596531048
- "1596531048"
- 1596531048.285
- "1596531048.285"

The best way to handle time fields is parsing them as a number with decimal places.
If higher precision is not needed, you can safely cast them to integer(or long). Our SDKs listed
above has already taken proper deserialization to handle them

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-gateway-in-out-time) API Gateway in/out time

In every API request, the response header will always include the following fields:

- `X-In-Time`: The timestamp when the API gateway receives a request, in Unix timestamp format, measured in microseconds.

- `X-Out-Time`: The timestamp when the API gateway returns a response, in Unix timestamp format, measured in microseconds.


For example:

```
X-In-Time: 1695715091540163
X-Out-Time: 1695715091551905

```

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#pagination) Pagination

Pagination is achieved using one of the following method

- `page-limit`
- `limit-offset`

In both method, `limit` limits the maximum number of records returned in one request. If no
additional explanation, it defaults to `100` if not provided and its maximum value is limited
to `1000`.

`page` starts from `1`, mimicking common paging used in web pages. To iterate the whole list, use
the same `limit` and increment `page` by `1` until the records' length is shorter than the
`limit`

`offset` starts from `0`, behaving like common DB search. To iterate the whole list, increment
`offset` by `limit` until the records' length is shorter than the `limit`.

For example, if the total number of orders is 201. Using page-limit method, send request parameters
like the following:

1. `page=1&limit=100`
2. `page=2&limit=100`
3. `page=3&limit=100`

Using limit-offset method, send request parameters like:

1. `limit=100&offset=0`
2. `limit=100&offset=100`
3. `limit=100&offset=200`

Some endpoints may return additional pagination metadata. If present, they are sent back through the
response header. Take `GET /futures/{settle}/orders` as an example, following headers will be
returned

- `X-Pagination-Limit`: request limit
- `X-Pagination-Offset`: request offset
- `X-Pagination-Total`: total record number satisfying the request

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#frequency-limit-rule) Frequency limit rule

| Markets | Endpoints | Limits | Based On | Include |
| --- | --- | --- | --- | --- |
| All public endpoints | Public endpoints | 200r/10s per endpoint | IP | Orderbook, Candlestick, Ticker, etc. |
| Wallet | Private endpoints | Withdrawal(POST /withdrawals) : 1r/3s<br> Transfer between trading accounts (POST /wallet/transfers) 80r/10s<br> Transfer between main and sub accounts (POST /wallet/sub\_account\_transfers) 80r/10s<br> Transfer from a sub-account to another sub-account (POST /wallet/sub\_account\_to\_sub\_account) 80r/10s<br> Retrieve user's total balances (GET /wallet/total\_balance) 80r/10s<br> Retrieve sub account balances (GET /wallet/sub\_account\_balances) 80r/10s<br> Query sub accounts' margin balances (GET /wallet/sub\_account\_margin\_balances) 80r/10s<br> Query sub accounts' futures account balances (GET /wallet/sub\_account\_futures\_balances) 80r/10s<br> Query subaccount's cross\_margin account info(GET /wallet/sub\_account\_cross\_margin\_balances) 80r/10s<br> The Others: 200r/10s per endpoint | UID | Withdrawal.<br> Query personal account balance.<br> Query subaccount balance. |
| Spot | Private endpoints | The rate limit for batch/single order placement and amend an order are total of 10r/s (UID+Market)<br> The rate limit for batch/single order cancellation is total of 200r/s<br> The Others: 200r/10s per endpoint | UID | Spot order placement and cancellation.<br> Trade history and fee rates. |
| Perpetual Futures | Private endpoints | The rate limit for batch/single order placement and amend an order are total of 100r/s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 200r/s<br> <br> The Others: 200r/10s per endpoint | UID | Futures order placement and cancellation<br> Trade history and fee rates |
| Delivery | Private endpoints | The maximum rate limit for the order placement (bulk/single) is 500r/10s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 500r/10s<br> <br> The Others: 200r/10s per endpoint | UID | Order placement and cancellation |
| Options | Private endpoints | The maximum rate limit for the order placement (bulk/single) is 200r/s<br> <br> The maximum rate limit for the order cancellation (bulk/single) is 200r/s<br> <br> The Others: 200r/10s per endpoint | UID | Order placement and cancellation |
| Subaccount | Private endpoints | 80r/10s per endpoint | UID | Create a sub-account.<br> Retrieve the list of sub-accounts.<br> Disable or enable API key for a sub-account. |
| Unified | Private endpoints | Borrow or repay 15/10s | UID | Borrow or repay(POST /unified/loans) |
| Other Private endpoints | Private endpoints | 150r/10s per endpoint | UID | Earning, collateral etc |

> The rate limit is counted against each sub-account or main account.

**Rate Limit**

Each request to the API response header will contain the following fields:：

- X-Gate-RateLimit-Requests-Remain - your remaining requests for current endpoint
- X-Gate-RateLimit-Limit - your current limit for current endpoint
- X-Gate-RateLimit-Reset-Timestamp - the timestamp indicating when your request limit resets if you have exceeded your rate\_limit. Otherwise, this is just the current timestamp (it may not exactly match timeNow).

WebSocket:

- Spot: Bulk order/single order/single order modification, a total of 10 requests per second (10r/s).
- Futures: Bulk order/single order/single order modification/single order cancellation/bulk cancellation, a total of 100 requests per second (100r/s).
- Others: No limit.
- Number of connections per IP: ≤ 300

## [\#](https://www.gate.com/docs/developers/apiv4/en/\#rate-limit-based-on-fill-ratio) Rate Limit Based On Fill Ratio

In order to enhance trading efficiency, we have decided to implement more favorable sub-account rate limits for clients with a higher fill ratio. This assessment will be based on trading data from the past seven days and will be calculated daily at 00:00 UTC. Please note that this rule applies only to clients at **VIP level 14 and above**.

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-introduction-of-terminology) 1\. Introduction of Terminology

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-1-symbol-multiplier) 1.1 Symbol Multiplier

To facilitate a more refined management of the impact of different trading products on the fill ratio, we have introduced the concept of the symbol multiplier. This multiplier allows us to adjust the influence of each product on the overall trading volume based on its characteristics. For products with a multiplier of less than 1, they typically involve smaller contract sizes and therefore require more trading orders to achieve the same trading volume. Generally, all trading products come with a default multiplier; however, certain products are assigned independent multipliers based on their specific characteristics. For detailed information regarding the multipliers of relevant products, please refer to the provided table.

| Product Typee | Based On | Independnet Symbol Multiplier | Default Symbol Multiplier |
| --- | --- | --- | --- |
| USDT-Margined Perpetural Futures | Contract Symbol | 1<br> Contract Symbol:<br> BTC-USDT<br> ETH-USDT | 0.4 |
| Spot | Currency Pairst | 1<br> Currency Pairs:<br> BTC-USDT<br> ETH-USDT | 0.4 |

> Please note: The spot trading rate limits will not be launched this time.

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-2-definition-of-trading-volume-weight) 1.2 Definition of Trading Volume Weight

We will assess the behavior patterns of makers and takers based on market fluctuations and design the trading volume weight ratios accordingly. Additionally, we will regularly evaluate these weights and make synchronized adjustments when necessary.

**Current weight of the maker trading volume: 100%, current weight of the taker trading volume: 90%.**

#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_1-3-calculation-formula) 1.3 Calculation Formula

The system will take a snapshot of the data at 00:00 UTC daily and, based on this information, will select the higher value between the fill ratio of the sub-account and the overall fill ratio of the main account to determine the future trading rate limit for the sub-account. For exchange brokers, the system will only consider the fill ratio of their sub-accounts. It is important to note that the main account is also considered a "sub-account."

1. Sub-account Fill Ratio: This ratio is calculated as follows: (Sub-account Taker's USDT trading volume × 0.9 + Maker's USDT trading volume × 1) / (The sum of (Number of new and modified requests for each contract × symbol multipliers) for each subaccount).
2. Main-account Aggregated Fill Ratio: This ratio is calculated as follows: (main account's Taker USDT trading volume × 0.9 + Maker USDT trading volume × 1) / (The sum of (Number of new and modified requests for each contract × symbol multipliers) for all subaccounts).

### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_2-future-rate-limit-rule) 2\. Future Rate Limit Rule

| Contract Frequency Limitation Rules |
| --- |
| Tier | Ratio | Rate Limit (uid) |
| Tier 1 | \[0,1) | 100r/s |\
| Tier 2 | \[1,3) | 150r/s |\
| Tier 3 | \[3,5) | 200r/s |\
| Tier 4 | \[5,10) | 250r/s |\
| Tier 5 | \[10,20) | 300r/s |\
| Tier 6 | \[20,50) | 350r/s |\
| Tier 7 | >= 50 | 400r/s |\
\
> > Please stay tuned for the rate limits for spot trading.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_3-detailed-rules-for-fill-ratio) 3\. Detailed Rules for Fill Ratio\
\
1. Target Client Group: VIP ≥ 14\
2. Calculation Period: 7 days\
3. Update Time: Daily at 08:00 (UTC). The system will update the fill ratio data based on the data from 00:00 UTC.\
1. If the fill ratio and the pre-set rate limit improve, the increase will take effect immediately at 08:00 (UTC).\
2. However, if the fill ratio declines, the rate limit will be reduced immediately.\
3. If a client's VIP level drops below VIP 14, their rate limit will be lowered to the minimum tier, taking effect immediately.\
4. If a client's VIP level rises above VIP 14, their rate limit will be adjusted immediately based on their current level.\
5. If a sub-account's trading volume over the past 7 days is below 1,000,000 USDT, the rate limit will be implemented based on the main-account aggregated fill ratio.\
6. For newly created sub-accounts, the minimum tier rate limit will be applied at the time of creation, and the aforementioned rate limit rules will begin to apply at T+1 08:00 (UTC).\
7. Both WebSocket and REST APIs are subject to these rules.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_4-example) 4\. Example\
\
Assuming the client has three accounts, with the symbol multipliers for trading perpetual contract products BTC-USDT and SOL-USDT being 1 and 0.4, respectively.\
\
1. Account A (Main Account):\
   - BTC-USDT perpetual futures Maker trading volume: 100 USDT, number of order requests: 10; Perpetual futures Taker trading volume: 200 USDT, number of order requests: 20.\
   - SOL-USDT perpetual futures Maker trading volume: 20 USDT, number of order requests: 15; Perpetual futures Taker trading volume: 20 USDT, number of order requests: 20.\
   - Sub-account Fill Ratio = ((100 + 20) \* 1 + (200 + 20) \* 0.9) / ((10 + 20) \* 1 + (15 + 20) \* 0.4) = 7.23\
2. Account B (Sub-account):\
   - BTC-USDT perpetual futures Maker trading volume: 200 USDT, number of order requests: 20; Perpetual futures Taker trading volume: 200 USDT, number of order requests: 30.\
   - SOL-USDT perpetual futures Maker trading volume: 20 USDT, number of order requests: 5; Perpetual futures Taker trading volume: 30 USDT, number of order requests: 5.\
   - Sub-account Fill Ratio = ((200 + 20) \* 1 + (200 + 30) \* 0.9) / ((20 + 30) \* 1 + (5 + 5) \* 0.4) = 7.91\
3. Account C (Sub-account):\
   - BTC-USDT perpetual futures Maker trading volume: 50 USDT, number of order requests: 5; Perpetual futures Taker trading volume: 60 USDT, number of order requests: 8.\
   - SOL-USDT perpetual futures Maker trading volume: 100 USDT, number of order requests: 20; Perpetual futures Taker trading volume: 120 USDT, number of order requests: 25.\
   - Sub-account Fill Ratio = ((50 + 100) \* 1 + (60 + 120) \* 0.9) / ((5 + 8) \* 1 + (20 + 25) \* 0.4) = 10.06\
4. Main Account Aggregated Fill Ratio = ((100 + 20 + 200 + 20 + 50 + 100) \* 1 + (200 + 20 + 200 + 30 + 60 + 120) \* 0.9) / ((10 + 20 + 20 + 30 + 5 + 8) \* 1 + (15 + 20 + 5 + 5 + 20 + 25) \* 0.4) = 8.19\
5. Account Rate Limits:\
   - Account A = max(7.23, 8.19) = 8.19 -> 250 r/s\
   - Account B = max(7.91, 8.19) = 8.19 -> 250 r/s\
   - Account C = max(10.06, 8.19) = 10.06 -> 300 r/s\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#_5-remarks) 5\. Remarks\
\
1. The release date for the rate limit of perpetual contracts based on fill ratio will be announced later. Please stay tuned.\
2. The existing abuse rate limit rules for perpetual contracts will still apply, namely:\
1. Fill Ratio = USDT Training Amount / (Total Number of Order, Cancellation, and Modification Requests)\
2. If the number of requests exceeds 86,400 within 24 hours, with no order fill in the same period. Then the order placement rate limit will be restricted to 10r/10s for the next hour.\
3. If the number of requests exceeds 86,400 within 24 hours, with the fill ratio below 1%. Then the order placement rate limit will be restricted to 20r/10s for the next hour.\
3. Please stay tuned for the fill ratio rate limit for spot trading.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#return-format) Return Format\
\
All API responses are in JSON format, and users need to transform and extract data by themselves.\
\
The HTTP status code 2XX will be returned when all operations are successful. 401 indicates that\
there is a problem with the certification. Other 4xx status codes indicate that the request is\
invalid. If it is a 5xx error, the server has encountered an unknown serious error when processing\
the request. Please give feedback as soon as possible。\
\
**Return Status**\
\
| Status Code | Description |\
| --- | --- |\
| 200/201 | Request succeeded |\
| 202 | Request accepted by the server, but processing is not done yet |\
| 204 | Request succeeded, but the server doesn't return body |\
| 400 | Invalid request |\
| 401 | Authentication failed |\
| 404 | Not found |\
| 429 | Too many requests |\
| 5xx | Server error |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#data-type) Data Type\
\
| Type | Description |\
| --- | --- |\
| `string` | String type, in double quotation marks. Price and amount are also formatted in string format |\
| `integer` | 32-bit integer，Mainly related to status codes, size, times, etc. |\
| `integer(int64)` | 64-bit integer，Mainly involves ID and higher precision timestamp |\
| `float` | Floating point number. Some time and stat fields use float. |\
| `object` | Object，Contains a child object{} |\
| `array` | List，Includes multiple groups of content |\
| `boolean` | true is true，false is false |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#portfolio-margin-account) Portfolio Margin Account\
\
TIP\
\
The Portfolio Margin Account is no longer maintained, please refer to the new version of the [Unified Account](https://www.gate.com/docs/developers/apiv4/en/#unified-account)\
\
Since version `4.25.0`, we start supporting portfolio margin account. Gate's Portfolio Margin\
Account is a new feature of Gate's trading system. Its main function is to break the capital\
isolation between cross-margin leverage account and USD cross-margin perpetual contract account\
inside a Classic Account and achieve the multi-currency margin sharing among multi-product lines.\
Thanks to the margin sharing, users don't need to transfer funds between the two accounts, and the\
profit and loss of positions among different trading products can offset each other and effectively\
improve the capital utilization rate. See more details in the\
[Help Center](https://www.gate.com/help/trade/leveraged/26421/introductions-to-gate.io-s-portfolio-margin-account)\
\
Before using the portfolio margin account's API key, you should create the API key on the API\
management page.\
The API key supports spot and perpetual contracts trading only.\
\
> If permissions of the API key can't be checked, ensure your cross-margin account has available\
> balance first.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer) Transfer\
\
The classic account and portfolio margin account are two different capital isolation accounts. If\
you want to achieve multi-currency margin sharing among multi-product lines, use\
the portfolio margin account please.\
\
The funds of the portfolio margin account come from the classic account. Due to the change of funds\
in the classic account, the transfer of funds can only be performed using the API Key of the classic\
account.\
\
The portfolio margin account is upgraded based on the cross-margin account of the original classic\
account, so the classic account only needs to transfer its spot funds to the cross-margin account to\
deposit the portfolio margin account. Similarly, withdrawals from portfolio margin account can be\
achieved by the classic account performing transferals from the cross margin to its spot account.\
\
The API Key of the portfolio margin account can only perform transferals among its own multiple\
accounts.\
Due to the sharing of margin, the portfolio margin account does not need to transfer funds\
to its futures account (we also restrict doing so).\
If the futures account has PNL funds that need to be withdrawn, it must be transferred by the\
portfolio margin account's API key to its cross-margin account first, so that the classic\
account can perform withdrawals from portfolio margin account.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot-trading) Spot trading\
\
The spot trading of the portfolio margin account is almost the same as the classic account, except\
that `cross_margin` must be specified in the `account` parameter when placing orders. For example,\
if you want to place a buy order for the `BTC_USDT` currency pair, the order request will be similar\
to\
\
```\
POST /spot/orders\
\
{\
  "currency_pair": "BTC_USDT",\
  "account": "cross_margin",\
  "side": "buy",\
  ...\
}\
\
```\
\
For other related restrictions, please refer to the document of the API endpoint directly.\
\
TIP\
\
It should be noted that the portfolio margin account is upgraded from the classic account's\
cross-margin account. The API Key of the classic account originally supports the operation of the\
cross-margin account. In order not to affect the existing operations of the classic account, we\
still retain this function of the classic account. So whether it is the API Key of the classic\
account or the portfolio margin account, both can operate the same the cross margin account (note\
that the futures accounts are separate)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-trading) Futures trading\
\
The API operation of the perpetual contract of the portfolio margin account is exactly the same as\
that of the classic account, but currently only supports USD settlement\
\
TIP\
\
In the futures trading, it should be noted that there is no compatibility for cross-margin accounts\
like using the API Key of the classic account in spot trading. Therefore, when using the API Key of\
the classic account for futures trading, assets are kept under `classic account-futures`, and when\
using portfolio margin account API Key for futures trading, assets are kept\
under `portfolio margin account-futures`. These two are different futures accounts. In addition,\
funds under `classic account-spot` cannot share margin with `classic account-futures`.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#trace-id) Trace ID\
\
The API response will carry the header: X-Gate-Trace-ID . This header is used for tracking.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#self-trade-prevention-stp) Self-Trade Prevention (STP)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#concepts) Concepts\
\
**Self-Trade Prevention**: STP will prevent any user's orders from being matched with each other.\
\
**CN**: Cancel new, Cancel new orders and keep old ones.\
\
**CO**: Cancel old, Cancel old orders and keep new ones.\
\
**CB**: Cancel both, Both old and new orders will be cancelled.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#stp-strategies) STP Strategies\
\
We support three STP strategies, which are `CN` , `CO` and `CB`.\
\
STP is achieved by adding users to one STP trading group.\
When a user in a STP group place orders, and trading could happen with existing orders of users in the same group, orders will be cancelled.\
The prevention strategy depends on the `stp_act` parameter specified when placing the order as taker.\
If not specified, the `CN` strategy will be used by default.\
\
A user has to be added to a STP trading group before using STP.\
When a user does not belong to any STP trading group, and place orders with the `stp_act` parameter, the orders will be rejected.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-parameter-adjustment) API Parameter Adjustment\
\
Take placing futures order as an example:\
\
```\
POST /futures/{settle}/orders\
\
```\
\
New request body parameter:\
\
| Name | Position | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_act | body | string | No | STP Strategies, including: <br>\- cn<br>\- co<br>\- cb |\
\
New response fields:\
\
| Name | Type | Required | Restriction | Description |\
| --- | --- | --- | --- | --- |\
| stp\_act | string | No | none | STP Strategies, including：<br>\- cn<br>\- co<br>\- cb |\
| stp\_id | integer(int64) | No | readonly | The ID of the STP trading group to which user belongs. |\
| finish\_as | string | No | readonly | order finish type: <br>\- **stp: The order has been canceled due to the `STP`** |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-case) User case\
\
There are multiple accounts under `Organization A`, and the IDs of several accounts are `101`, `102`, and `103`\
\
In order to prevent self-trading of orders placed by internal accounts of the organization, the administrator created a STP trading group with group ID `100`,\
and added accounts `101` and `102` to the STP trading group.\
In this case, the members in the group are `[101,102]`.\
\
T1: The `STP` strategy version released.\
\
T2: After the `organization A` account `101` places a short order, there is no matching order in the market order book to match the transaction.\
At this time, the role of the order is `maker`, and the order status is `open`.\
The key response fields returned are:\
\
```\
{\
	"status":"open",\
	"stp_act":"cn",\
	"stp_id":100\
}\
\
```\
\
T3: `Organization A` account `101`/ `102` places a long order, and it can reach a trade with account 101’s short order.\
The match engine finds both two orders' stp\_id are 100, so it applies the STP strategy of the taker order, which defaults to `cn` , and cancels the long order.\
Order's `finish_as` will be set to `stp`.\
The key response fields returned are:\
\
```\
{\
	"status":"finished",\
	"stp_act":"cn",\
	"stp_id":100,\
	"finish_as":"stp"\
}\
\
```\
\
- If `stp_act` is `co` , the order placed by `taker` will be retained, the order status will be `open`,\
and the system will cancel the order of `maker`.\
\
- If `stp_act` is `cb`, both the long and short orders will be cancelled. Orders' `finish_as` will be set to `stp`.\
The key response fields returned are:\
\
\
```\
{\
	"status":"finished",\
	"stp_act":"cb",\
	"stp_id":100,\
	"finish_as":"stp"\
}\
\
```\
\
T3': If account 103 places a long order, and it can reach a trade with account 101’s short order,\
the transaction will be made since account 103 has not been added to account 101’s STP group.\
The key response fields returned are:\
\
```\
{\
	"status":"finished",\
	"stp_id":0,\
	"finish_as":"filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#unified-account) Unified Account\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#description) Description\
\
Once a user upgrades their account to the unified account, they can utilize the assets from their spot account as collateral for trading. The assets in the account, denominated in various currencies, will be adjusted based on their liquidity and converted to USD for consistent calculation of the account's assets and position value.\
\
The maximum borrowing limit for margin trading represents the maximum amount that a user can borrow for a given trading market. The platform calculates the user's maximum borrowing limit based on factors such as available margin and platform risk control rules. Once the margin trading generates automatic borrowing, the platform immediately starts accruing interest on the borrowed digital assets.\
\
Currently, the ability to switch to `cross_margin` or `usdt_futures` mode is available. In the future, we will gradually introduce support for various combination margin accounts, including `Futures`, `Delivery`, `Options` and more. Stay tuned for further updates.\
\
Please refer to the documentation for unified API. Once you have upgraded your account, you will be able to make use of these endpoints.\
\
Related endpoint can be found in the Unified Account API doc. After enabling the Unified Account, you can proceed to call them. For more detailed information, please refer to [here](https://www.gate.com/unified-trading-account)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-integration-process) API Integration Process\
\
- Create a new `API KEY` or update the permissions of an existing `API KEY`, checking the `unified` permission\
- Use the classic account's `API KEY` to call the `PUT /unified/unified_mode` endpoint, or upgrade from the WEB page to the Unified Account\
- Use the `/api/v4/spot/**` API for spot-related operations (ordering, modifying orders, querying orders), with the `account=unified` option\
- Use the `/api/v4/futures/**` API for perpetual futures-related operations (ordering, modifying orders, querying orders)\
- Use the `/api/v4/unified/**` API for Unified Account-related operations (account querying, loan querying)\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot-trading-2) SPOT Trading\
\
The spot trading in the Unified Account is consistent with that in the classical account. In order operations, specify `account=unified`, or specify `account=spot` and the system will automatically handle the order as a unified account order when detecting the account as a unified account. For example, to place a buy order for the `BTC_USDT` currency pair, the order creation request would be similar to\
\
```\
POST /spot/orders\
\
{\
  "currency_pair": "BTC_USDT",\
  "account": "unified",\
  "side": "buy",\
  ...\
}\
\
```\
\
For other related restrictions, please refer to the document of the API endpoint directly.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#formula) Formula\
\
| Name | Cross Margin |\
| --- | --- |\
| portfolio\_margin\_total\_equity | Account Equity = ∑(Equity \* Index Price） |\
| total\_margin\_balance | Account Margin Balance = ∑(Positive Equity x Index Price x Adjustment Factor) + ∑(Negative Equity x Index Price) - Haircut Loss |\
| total\_initial\_margin\_rate | Account Initial Margin Level = Account Margin Balance / Account Initial Margin |\
| total\_maintenance\_margin\_rate | Account Maintenance Margin Level = Account Margin Balance / Account Maintenance Margin |\
| total\_initial\_margin | Account Initial Margin = Total Liabilities x Spot Initial Margin Rate |\
| total\_maintenance\_margin | Account Maintenance Margin = Total Liabilities x Spot Maintenance Margin Rate |\
| equity | Equity = Coin Balance - Borrowed |\
| available | Available Balance = Principal + Borrowed |\
| freeze | Occupied = Assets Occupied by Spot Open Orders |\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#accountbook-type) AccountBook type\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#general-2) General\
\
- unknown: Unknown\
- login: Log In\
- withdraw: Withdrawals\
- ch\_pass: Change Password\
- ch\_fund\_pass: Change Fund Pass\
- login\_failed: Login Failed\
- axs\_account: Access Account\
- req\_pass\_ch: Request Password Change\
- req\_fund\_pass\_ch: Request Fund Pass Change\
- fund\_pass\_ent: Fund Pass Entered\
- bank\_card\_add: Bank Card Added\
- frw: Face Recognition For Withdrawal\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#order) Order\
\
- new\_order: Order Placed\
- cancel\_order: Order Cancelled\
- order\_fill: Order Filled\
- order\_rej: Order Rejected\
- order\_fee: Trading Fees\
- system\_fee: Trading Fee System Account\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdraw-deposit) Withdraw-Deposit\
\
- withdraw: Withdrawals\
- deposit: Deposits\
- deposit\_rej: Deposit Rejected\
- withdraw\_rej: Withdrawal Rejected\
- cancel\_withdraw: Cancel Withdrawal\
- withdraw\_gatecode: GateCode Withdrawals\
- withdraw\_fireblock: Fireblocks Withdrawals\
- withdraw\_copper: Copper Withdrawals\
- startup\_withdraw: Token Withdrawal From Startup\
- deposit\_gatecode: GateCode Deposits\
- deposit\_fireblock: Fireblocks Deposits\
- deposit\_copper: Copper Deposits\
- buy\_cl: Buy Crypto Legend\
- buy\_cc: Buy Crypto Cabital\
- deposit\_finmo: Gate connect Finmo Deposit\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#startup) Startup\
\
- startup\_prtcp: Startup Sale Participation\
- startup\_refund: Startup Sale Refund\
- startup\_sale: Startup Sale\
- startup\_sale\_rb: Startup Sale Rolled Back\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#rebate) Rebate\
\
- referral\_rebate: Referral Superior Rebate\
- sec\_rebate\_out: Secondary Rebate Financial Account Transfer Out\
- sec\_rebate\_in: Affiliate Indirect Superior Rebate Income\
- ab\_rebate: API Broker Rebate Income\
- eb\_rebate: Exchange Broker Rebate Income\
- u\_rebate: Referral Rebate Income\
- ads\_rebate: Affiliate Direct Superior Rebate Income\
- au\_rebate: Affiliate User Rebate Income\
- pis\_rebate: Partner Indirect Superior Rebate Income\
- pds\_rebate: Partner Direct Superior Rebate Income\
- pu\_rebate: Partner User Rebate Income\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#convert) Convert\
\
- eth\_swap: ETH Swap\
- dust\_swap\_dctd: Dust Swap-Small Balances Deducted\
- dust\_swap\_gt\_add: Dust Swap-GT Added\
- dust\_swap\_fee: Dust Swap-Fees Deducted\
- cv\_buy: Quick Buy-Bought\
- cv\_sell: Quick Sell-Sold\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#c2c) C2C\
\
- c2c\_mop: C2C Merchant Order Placed\
- c2c\_moc: C2C Merchant Order Canceled\
- c2c\_rop: C2C Retail Order Placed\
- c2c\_roc: C2C Retail Order Canceled\
- c2c\_om: C2C Order Matched\
- c2c\_or: C2C Order Rejected\
- c2c\_fee: C2C Fees\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#reward) Reward\
\
- deposit\_bonus: Deposit Bonus\
- trading\_rewards: Trading Rewards\
- purchase\_bonus: Purchase Bonus\
- airdrop: Airdrop\
- award: Award\
- mining\_rewards: Mining Rewards\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#account-transfer-in-out) Account Transfer In-Out\
\
- margin\_in: Isolated Margin-Transferred In\
- margin\_out: Isolated Margin- Transferred Out\
- spot\_settle\_out: Spot Settlement Transfer Out\
- spot\_settle\_in: Spot Settlement Transfer Out\
- lending\_in: Lending-Transferred In\
- lending\_out: Lending-Transferred Out\
- cross\_in: PortfolioMarginAccountTransferIn\
- cross\_out: PortfolioMarginAccountTransferOut\
- perp\_in: Perps- Transferred In\
- perp\_out: Perps- Transferred Out\
- perp\_settle\_in: Perpetual Multi-currency Settlement Transfer In\
- perp\_settle\_out: Perpetual Multi-currency Settlement Transfer Out\
- delivery\_in: Delivery- Transferred In\
- delivery\_out: Delivery- Transferred Out\
- ai\_in: Auto-Invest-Transferred In\
- ai\_out: Auto-Invest-Transferred Out\
- e\_options\_in: Easy Options- Transferred In\
- e\_options\_out: Easy Options- Transferred Out\
- options\_in: Options- Transferred In\
- options\_out: Options- Transferred Out\
- cbbc\_in: CBBC- Transferred In\
- cbbc\_out: CBBC- Transferred Out\
- warrant\_in: Warrant- Transferred In\
- warrant\_out: Warrant- Transferred Out\
- subaccount\_trf: Subaccount Transfer\
- quant\_in: Quant- Transferred In\
- quant\_out: Quant- Transferred Out\
- pay\_in: Payment Account- Transferred In\
- pay\_out: Payment Account- Transferred Out\
- fct\_in: Futures Copy Trading - Funds Transfer In\
- fct\_out: Futures Copy Trading - Funds Transfer Out\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#points) Points\
\
- points\_purchase: Points Purchase\
- points\_expiration: Points With Expiration\
- points\_trf: Points Transfer\
- points\_trf\_rej: Points Transfer Rejected\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#finance) Finance\
\
- lending\_lent: Lending-Lent\
- collected: Collected\
- interest\_in: Interest Income\
- lending\_fee: Lending-Fees Deducted\
- hodl\_int: HODL Interest\
- redeem: Redeem\
- lend: Lend\
- dual\_purchased: Dual C-Purchased\
- dual\_settled: Dual C-Settled\
- liq\_add: Liquidity Added\
- liq\_rm: Liquidity Removed\
- liq\_rebalanced: Liquidity Rebalanced\
- slot\_int\_in: Slot Auction Staking Interest Income\
- str\_int\_in: Structured Products Staking Interest Income\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#loan) Loan\
\
- borrow: Borrow\
- repay: Repay\
- margin\_borrow: Isolated Margin-Transferred In\
- margin\_repay: Isolated Margin- Transferred Out\
- margin\_interest\_out: Isolated Margin-Interest Deduction\
- cl\_borrow: Cryptoloan- Borrowed\
- cl\_repay: Cryptoloan- Repaid\
- cl\_dctd: Cryptoloan- Collateral Deducted\
- cl\_rtd: Cryptoloan- Collateral Returned\
- cross\_borrow: PortfolioMarginAccountBorrowIn\
- cross\_repay: PortfolioMarginAccountRepay\
- interest\_out: Interest\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#moments) Moments\
\
- donation: Donation\
- rp\_sent: Red Packet Sent\
- rp\_rcvd: Red Packet Received\
- rp\_rej: Red Packet Rejected\
- ls\_offered: Live Stream-Reward Offered\
- ls\_rcvd: Live Stream- Reward Received\
- pt\_offered: Posts- Reward Offered\
- pt\_rcvd: Posts- Reward Received\
- subs\_deduct: Subscription-Fees Deducted\
- subs\_in: Subscription-Fees Received\
- subs\_refund: Subscription- Refund\
- subs\_in\_rcvd: Subscription- Refunds Received\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#push-trading) PUSH Trading\
\
- push\_dctd: Push- Deduction\
- push\_rcvd\_dctd: Push- Received-Deducted\
- push\_canceled: Push Canceled\
- push\_rej: Push Rejected\
- push\_sent: Push Sent\
- push\_rcvd: Push Received\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#copy-trading) Copy Trading\
\
- quant\_return: Quant- Transaction Returned\
- quant\_cmn\_in: Quant-Commission Transferred In\
- quant\_cmn\_out: Quant-Commission Transferred Out\
- quant\_cmn\_rtd: Quant-Commission Returned\
- fct\_refund: Futures Copy Trading - Funds Auto Transfer Out\
- fct\_rcvd: Futures Lead Trading - Performance Fee Received\
- fct\_fee: Futures Copy Trading - Performance Fee Paid\
- fct\_fee\_refund: Futures Copy Trading - Performance Fee Refund\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#nft) NFT\
\
- nft\_mp: NFT Auction-Margin Paid\
- nft\_bm: NFT Auction-Bid Made\
- nft\_om: NFT Auction-Offer Made\
- ntf\_mr: NFT Auction-Margin Returned\
- nft\_amr: NFT Auction-Aborted-Margin rcvd\
- nft\_ocb: NFT Auction-Order Canceled-Back\
- nft\_fb: Fixed Price-Bought\
- nft\_fs: Fixed Price-For Sale\
- nft\_ob: NFT Make-Offer Bought\
- nft\_os: NFT Make-Offer Sale\
- nft\_cr: Cancel offer refund\
- nft\_ir: Refund for invalid offer\
- nft\_wf: Withdrawal service fee\
- nft\_wfr: Withdrawal service fee\
- ntf\_mf: Multi-copy creation service fee\
- ntf\_mfr: Multi-copy creation service fee refund\
- ntf\_royalty: Royalties\
- nft\_cd: NFT Auction-Order Canceled-Deducted\
- nft\_crd: NFT Auction-Order Canceled-Rotalty-Deducted\
- nft\_cf: crowdfunding\
- nft\_cfr: crowdfunding refund\
- nft\_ammf: Nft-Amm Frozen\
- nft\_ammw: Nft-Amm Withdraw\
- nft\_ammdf: Nft-Amm Deal Fee\
- nft\_ammd: Nft-Amm Deal\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#accountbook-code) AccountBook code\
\
- 1 : Order Placed Old\
- 2 : Order Cancelled old\
- 4 : Withdrawals\
- 9 : Cancel GateCode Withdrawal\
- 17 : GateCode Withdrawals\
- 18 : Fireblocks Withdrawals\
- 19 : copper withdraw\
- 20 : Face Recognition For Withdrawal\
- 101 : Order Placed\
- 102 : Order Filled\
- 103 : Order Cancelled\
- 104 : Cancel Onchain Withdrawal\
- 105 : Token Withdrawal From Startup\
- 106 : Donation\
- 107 : Startup Sale Participation\
- 108 : Startup Sale Refund\
- 109 : Referral Superior Rebate\
- 110 : Deposits\
- 111 : Interest\
- 112 : Deposit Rejected\
- 113 : Withdrawal Rejected\
- 114 : Fund Correction\
- 115 : Snapshot\
- 116 : Order Rejected\
- 117 : CNY1 Deposited\
- 118 : Rebasing\
- 120 : Transaction Rolled Back\
- 121 : GateCode Deposits\
- 122 : Fireblocks Deposits\
- 123 : Wrongdepo Fee\
- 124 : copper deposit\
- 131 : Call Auction- Locked\
- 132 : Call Auction- Unlocked\
- 141 : ETF Asset Consolidation - Debit\
- 142 : ETF Asset Consolidation - Credit\
- 151 : Trading Fees\
- 152 : Trading Fee System Account\
- 161 : Secondary Rebate Financial Account Transfer Out\
- 162 : Affiliate Indirect Superior Rebate Income\
- 164 : Affiliate Direct Superior Rebate Income\
- 166 : Affiliate User Rebate Income\
- 171 : Order Placed Frozen\
- 172 : Order Cancelled Unfrozen\
- 181 : ETH Swap\
- 182 : ETH2 Swap\
- 191 : Referral Rebate Income\
- 196 : Web3 Rebate Income\
- 301 : C2C Merchant Order Placed\
- 302 : C2C Merchant Order Canceled\
- 303 : P2P User Sell\
- 304 : C2C Retail Order Canceled\
- 305 : P2P User Buy\
- 306 : C2C Order Rejected\
- 307 : Payment Setup\
- 308 : C2C Fees\
- 309 : C2C Deposit Freeze\
- 310 : C2C Deposit Refund\
- 311 : C2C Deposit Forfeiture\
- 312 : P2P Shared Asset Order Refund\
- 313 : P2P Frozen Funds\
- 314 : P2P Unfrozen Funds\
- 319 : Crypto Conversion Fee\
- 322 : Buy Crypto Legend\
- 323 : Buy Crypto Cabital\
- 324 : Gate Connect-Buy\
- 325 : Gate Connect-Buy\
- 326 : Gate Connect-Buy\
- 327 : Gate Connect-Buy\
- 328 : Gate Connect-Sell\
- 329 : Gate Connect-Refund\
- 330 : Gate Connect-Buy\
- 331 : Gate Connect-Sell\
- 401 : Deposit Bonus\
- 402 : Trading Rewards\
- 403 : Purchase Bonus\
- 404 : Airdrop\
- 405 : Feedback Rewards\
- 501 : IFO Claimed\
- 502 : IFO Returned\
- 601 : Isolated Margin - Transfer In\
- 602 : Isolated Margin - Transfer Out\
- 603 : Lending-Transferred In\
- 604 : Lending-Transferred Out\
- 605 : Isolated Margin-Transferred In\
- 606 : Isolated Margin- Transferred Out\
- 607 : Liquidating-Unlocked\
- 608 : Liquidating-Locked\
- 609 : Interest Updated\
- 610 : Lending-Lent\
- 611 : Collected\
- 612 : Interest Income\
- 613 : Lending-Fees Deducted\
- 614 : Due Repayment-Unlocked\
- 615 : Due Repayment-Locked\
- 616 : Liquidation Fee\
- 621 : Staking-Locked\
- 622 : Staking-Unlocked\
- 623 : Staking Interest Income\
- 624 : Staking-Locked\
- 625 : Staking-Unlocked\
- 626 : Staking Interest Income\
- 627 : HODL Interest\
- 628 : HODL Interest Distribution\
- 629 : HODL Interest Rolled Back\
- 630 : Borrow\
- 631 : Repay\
- 632 : Pledge\
- 633 : Collateral Refund\
- 635 : Fixed Rate Loan - Interest\
- 640 : Flexible Rate Loan - Borrow\
- 641 : Flexible Rate Loan - Repay\
- 642 : Flexible Rate Loan - Liquidate to Repay Principal\
- 643 : Flexible Rate Loan - Liquidate to Repay Interest\
- 644 : Flexible Rate Loan - Interest\
- 645 : Pledge\
- 646 : Collateral Refund\
- 647 : Adjust Collateral\
- 648 : Refund after Liquidation\
- 649 : Liquidation Fee\
- 651 : Portfolio Margin Account Transfer In\
- 652 : Portfolio Margin Account Transfer Out\
- 655 : Fixed Rate Loan - Borrow\
- 656 : Fixed Rate Loan - Repay\
- 657 : Fixed Rate Loan - Liquidate to Repay Interest\
- 658 : Fixed Rate Loan - Liquidate to Repay Principal\
- 659 : Cross-Currency Repayment - Transfer Out\
- 660 : Cross-Currency Repayment - Transfer In\
- 661 : Redeem\
- 662 : Lend\
- 669 : Interest\
- 670 : MarginTradingBorrowed\
- 671 : MarginTradingRepaid\
- 672 : MarginTradingInterest\
- 673 : Isolated Margin-Transferred In\
- 674 : Isolated Margin- Transferred Out\
- 675 : Interest Updated\
- 676 : Isolated Margin-Interest Deduction\
- 677 : Borrow\
- 678 : Repay\
- 679 : Interest\
- 681 : Bonus\
- 682 : Contributing Insurance Funds\
- 683 : Consuming Insurance Funds\
- 685 : Interest - Platform Loans\
- 686 : Subscription - Fixed-term\
- 687 : Redemption - Fixed-term\
- 688 : Interest - Fixed-term\
- 689 : Bonus - Fixed-term\
- 696 : Early repayment penalty\
- 697 : Refund of early repayment penalty\
- 701 : Perps- Transferred In\
- 702 : Perps- Transferred Out\
- 703 : Delivery- Transferred In\
- 704 : Delivery- Transferred Out\
- 705 : Multi-currency Settlement Transfer In\
- 706 : Multi-currency Settlement Transfer Out\
- 721 : Stable Income - Lock\
- 722 : Stable Income - Unlock\
- 723 : Stable Income - Interest\
- 724 : Stable Income - Lock\
- 725 : Stable Income - Unlock\
- 726 : Stable Income - Interest\
- 727 : Structured Products - Lock\
- 728 : Structured Products - Lock\
- 729 : Structured Products - Unlock\
- 730 : Structured Products - Interest\
- 731 : Structured Products - Unlock\
- 732 : Structured Products - Interest\
- 733 : Hybrid Interest - Lock\
- 734 : Hybrid Interest - Lock\
- 735 : Hybrid Interest - Unlock\
- 736 : Hybrid Interest - Interest\
- 737 : Hybrid Interest - Unlock\
- 738 : Hybrid Interest - Interest\
- 739 : Wealth Referral Commission Rebate\
- 751 : Quant Fund - Lock\
- 753 : Quant Fund - Unlock\
- 754 : Quant Fund - Earnings\
- 761 : Lock & Earn Redeem Early\
- 801 : Gift Coins Sent\
- 802 : Gift Coins Received\
- 803 : Gift Coins Rejected\
- 804 : Live Stream-Reward Offered\
- 805 : Live Stream- Reward Received\
- 806 : Posts- Reward Offered\
- 807 : Posts- Reward Received\
- 901 : Buy Points\
- 902 : Buy Points Rollback\
- 903 : Time-Limited Points\
- 911 : Auto-Invest-Transferred Out\
- 912 : Auto-Invest-Transferred In\
- 913 : Redeem points for goods\
- 915 : Redeemed Points - Refund\
- 917 : Expired & Recycled\
- 1001 : C2C Loan Ad Posted\
- 1002 : C2C Loan Ad Canceled\
- 1003 : C2C Loan Order Placed\
- 1004 : C2C Loan Repaid\
- 1005 : C2C Loan Order Canceled\
- 1006 : C2C Loan Fees\
- 1007 : C2C Loan Liquidated\
- 1008 : C2C Loan- Margin Added\
- 1101 : Points Transfer\
- 1102 : Points Transfer Refund\
- 1171 : Bonus - Flexible\
- 1173 : Bonus - Flexible\
- 1174 : Bonus\
- 1181 : Staking\
- 1184 : Redemption\
- 1186 : Interest\
- 1191 : Staking\
- 1194 : Redemption\
- 1196 : Interest\
- 1201 : Startup Sale\
- 1202 : Startup Sale Rolled Back\
- 1251 : Stake\
- 1253 : Manually Redeem\
- 1255 : Reward\
- 1258 : Auto-Redeem\
- 1301 : Dust Swap-Small Balances Deducted\
- 1302 : Dust Swap-GT Added\
- 1303 : Dust Swap-Fees Deducted\
- 1307 : Dust Swap-Small Balances Deducted\
- 1310 : Dust Swap-Small Balances Deducted\
- 1311 : Dust Swap-Small Balances Deducted\
- 1312 : Small Balance Convert - USDT Added\
- 1322 : Convert Small Balance (USDT)\
- 1323 : Convert Small Balance - USDT Added\
- 1401 : Subaccount Transfer\
- 1501 : Subscription-Fees Deducted\
- 1502 : Subscription-Fees Received\
- 1503 : Subscription- Refund\
- 1504 : Subscription- Refunds Received\
- 1601 : Easy Options- Transferred In\
- 1602 : Easy Options- Transferred Out\
- 1603 : Options- Transferred In\
- 1604 : Options- Transferred Out\
- 1701 : Bots - Transfer In\
- 1702 : Bots - Transferred Out\
- 1703 : Bots - Refund\
- 1801 : CBBC- Transferred In\
- 1802 : CBBC- Transferred Out\
- 1811 : Warrant- Transferred In\
- 1812 : Warrant- Transferred Out\
- 1901 : Push- Deduction\
- 1903 : Push- Received-Deducted\
- 1905 : Push- Canceled\
- 1906 : Push- Rejected\
- 1907 : Push- Sent\
- 1908 : Push- Received\
- 2001 : Dual C-Purchased\
- 2004 : Dual C-Settled\
- 2011 : Subscription to Dip Sniper products\
- 2012 : Recouped from expired Dip Sniper products\
- 2021 : Subscription to Peak Sniper products\
- 2022 : Recouped from expired Peak Sniper products\
- 2202 : Lending Farm-Token Added\
- 2203 : Lending Farm-Token Removed\
- 2301 : Liquidity Added\
- 2302 : Liquidity Removed\
- 2303 : Liquidity Rebalanced\
- 2311 : Add Liquidity\
- 2312 : Remove Liquidity\
- 2314 : Mining Rewards\
- 2401 : Bots - Performance Fee Received\
- 2402 : Bots - Performance Fee Paid\
- 2403 : Bots - Performance Fee Refund\
- 2501 : NFT Auction-Margin Paid\
- 2502 : NFT Auction-Bid Made\
- 2503 : NFT Auction-Offer Made\
- 2504 : NFT Auction-Margin Returned\
- 2505 : Fixed Price-Bought\
- 2506 : Fixed Price-For Sale\
- 2512 : NFT Auction-Aborted-Margin Received\
- 2517 : NFT Auction-Order Canceled-Back\
- 2518 : NFT Make\_Offer Bought\
- 2519 : Cancel offer refund\
- 2523 : Withdrawal service fee\
- 2524 : Withdrawal service fee\
- 2527 : Multi-copy creation service fee\
- 2528 : Multi-copy creation service fee refund\
- 2531 : Royalties\
- 2532 : NFT Auction-Order Canceled-Deducted\
- 2533 : Refund for invalid offer\
- 2536 : NFT Make\_Offer Sale\
- 2538 : NFT Auction-Order Canceled-Rotalty-Deducted\
- 2539 : crowdfunding\
- 2540 : crowdfunding refund\
- 2541 : crowdfunding\
- 2542 : crowdfunding refund\
- 2551 : Nft-Amm Frozen\
- 2552 : Nft-Amm Withdraw\
- 2553 : Nft-Amm Deal Fee\
- 2554 : Nft-Amm Deal\
- 2601 : Quick Buy-Bought\
- 2602 : Quick Sell-Sold\
- 2603 : Repay All - Transfer Out\
- 2604 : Repay All - Transfer In\
- 2605 : Buy\
- 2606 : Sell\
- 2607 : Buy\
- 2608 : Sell\
- 2609 : Buy\
- 2610 : Sell\
- 2611 : Convert Refund\
- 2612 : Buy\
- 2613 : Sell\
- 2614 : HODLer Airdrop\
- 2701 : Mining Contract Purchased\
- 2702 : Mining Balance Added to System\
- 2703 : Mining Rewards Deducted From System\
- 2704 : Mining Rewards Claimed\
- 2706 : Mining Balance User Money Back\
- 2707 : Mining Balance deducted From System\
- 2801 : Slot Auction Staking-Locked\
- 2802 : Slot Auction Staking-Unlocked\
- 2803 : Slot Auction Staking Interest Income\
- 2804 : Slot Auction Staking-Locked\
- 2805 : Slot Auction Staking-Unlocked\
- 2806 : Slot Auction Staking Interest Income\
- 2807 : Structured Products Staking-Locked\
- 2808 : Structured Products Staking-Unlocked\
- 2809 : Structured Products Staking Interest Income\
- 2810 : Structured Products Financial Account Staking-Locked\
- 2811 : Structured Products Financial Account Staking-Unlocked\
- 2812 : Structured Products Financial Account Staking Interest Income\
- 2901 : Futures Competition Buy Gift Pack\
- 2902 : Futures Competition Dovote Reward\
- 2903 : Futures Competition Individual Ranking Reward\
- 2904 : Futures Competition Team Ranking Reward\
- 2905 : Futures Competition Early Bird Reward\
- 2906 : Futures Competition Early Bird Reward\
- 3001 : Payment Account- Transferred In\
- 3008 : Payment Account- Transferred Out\
- 3019 : Fiat Withdrawal\
- 3020 : Refund for Fiat Withdrawal\
- 3101 : Vouchers - Redeem Points\
- 3102 : Coupon Center Usdtest Exchange\
- 3103 : Activity Center Point Exchange\
- 3104 : Exclusive Benefits\
- 3105 : Vouchers - Trading Fee Rebate\
- 3150 : Error in event token release\
- 3151 : Paid by Loss Protection Voucher for Copier\
- 3201 : Futures Copy Trading - Funds Transfer In\
- 3202 : Futures Copy Trading - Funds Transfer Out\
- 3203 : Futures Copy Trading - Funds Auto Transfer Out\
- 3204 : Futures Lead Trading - Performance Fee Received\
- 3205 : Futures Copy Trading - Performance Fee Paid\
- 3206 : Futures Copy Trading - Performance Fee Refund\
- 3301 : Affiliate Ultra Direct Superior Rebate Income\
- 3302 : Gate.TR&Gate Transfer\
- 3321 : Affiliate Ultra Indirect Superior Rebate Income\
- 3341 : Affiliate Ultra User Rebate Income\
- 3390 : API Broker Rebate Income\
- 3401 : Block Trading Transfer In\
- 3402 : Block Trading Transfer Out\
- 3410 : Exchange Broker Rebate Income\
- 3501 : card top up\
- 3502 : Gate Card Cashback\
- 3503 : Return Top up\
- 3504 : Replace Card Fee\
- 3505 : Return Card Fee\
- 3506 : Card Inactivity Fee\
- 3507 : Authorization\
- 3508 : Reversal\
- 3509 : Clearing\
- 3510 : Refund\
- 3511 : Repayment\
- 3512 : Card Issuance Fee\
- 3513 : Return Card Fee\
- 3514 : Return Card Balance\
- 3515 : Tax Refund\
- 3516 : Points Redemption\
- 3517 : Withdraw from SGD Card\
- 3518 : Deposit to SGD Card\
- 3601 : Spot Lead Trading - Funds Transfer In\
- 3602 : Spot Lead Trading - Funds Transfer Out\
- 3603 : Spot Lead Trading - Funds Auto Transfer Out\
- 3604 : Spot Copy Trading - Funds Transfer In\
- 3605 : Spot Copy Trading - Funds Transfer Out\
- 3606 : Spot Copy Trading - Funds Auto Transfer Out\
- 3607 : Spot Lead Trading - Performance Fee Received\
- 3608 : Spot Copy Trading - Performance Fee Paid\
- 3609 : Spot Copy Trading - Performance Fee Refund\
- 3701 : OTC trade - buy\
- 3702 : OTC trade - sell\
- 3703 : OTC trade - cancel\
- 3801 : Futures Voucher Return Transfer\
- 3901 : Transfer to Pilot\
- 3902 : Transfer from Pilot\
- 3903 : Transfer to Spot\
- 3904 : Transfer from Spot\
- 3905 : Transfer to Spot\
- 3906 : Transfer from Pilot\
- 3920 : Event Rewards\
- 3922 : Pilot Token Airdrop\
- 3923 : Pilot Token Airdrop Failed\
- 4002 : Withdraw Commission\
- 4009 : Withdraw Rewards\
- 4011 : Deducted Negative Maker Fee\
- 5001 : Pre-Market OTC Trading Fee\
- 5002 : Pre-Market OTC Frozen Assets (Buy)\
- 5003 : Pre-Market OTC Frozen Assets (Sell)\
- 5004 : Pre-Market OTC Trading Fee Refund (Order Canceled)\
- 5005 : Pre-Market OTC Unfreeze Frozen Assets (Order Canceled)\
- 5006 : Pre-Market OTC Unfreeze Frozen Assets (Order Canceled)\
- 5007 : Pre-Market OTC Delivery Transfer Out\
- 5008 : Pre-Market OTC Delivery Transfer In\
- 5009 : Pre-Market OTC Unfreeze Frozen Assets (Delivery Success)\
- 5011 : Compensation to Buyer\
- 5012 : Pre-Market OTC Delivery Refund\
- 5013 : Pre-Market OTC Trading Fee Refund (Project Canceled)\
- 5014 : Pre-Market OTC Payment Refund Due to Project Cancellation (Buy)\
- 5015 : Pre-Market OTC Unfreeze Frozen Assets (Sell)\
- 5016 : Early Termination Fee\
- 5017 : Early Termination Indemnity\
- 5051 : Pre-Market - Mint - Deduct Staked Assets\
- 5052 : Pre-Market - Mint - PreToken Release\
- 5053 : Pre-Market - Take a Snapshot and Clear Balance Before Settlement\
- 5054 : Pre-Market - Delivery - Token Delivery\
- 5055 : Pre-Market - Delivery - Unstake Staked Assets\
- 5056 : Pre-Market - Settlement - Token Settlement\
- 5057 : Pre-Market - Settlement - Staked Assets Settlement\
- 5058 : Pre-Market - Project Canceled - Staked Assets Settlement\
- 5059 : Pre-Market-Unstake-Deduct PreToken\
- 5060 : Pre-Market -Unstake-Unstake Staked Assets\
- 5061 : Pre-Market - Increase Staked Assets\
- 5062 : Pre-Market - Decrease Staked Assets\
- 5104 : Fireblocks Fee Refund\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#error-handling) Error Handling\
\
For all abnormal requests, APIv4 will return non-2xx status code, with a response body in JSON\
format to\
explain the error.\
\
The error response body follows a format like:\
\
```\
{\
  "label": "INVALID_PARAM_VALUE",\
  "message": "Invalid parameter `text` with value: abc"\
}\
\
```\
\
- `label`: denotes error type in `string` format. Its value are chosen from a certain list(see\
below).\
Programs can use `label` to identify and catch a specific error.\
- `message`(or `detail`): detailed error message. A longer explanation showing why the error is\
generated\
or how to avoid it. Its purpose is helping to better understand the API. Error handling\
mechanism with this field is highly **NOT** recommended.\
\
Take Python [requests(opens new window)](https://requests.readthedocs.io/en/latest/) for example,\
error handling can be written like:\
\
> Following examples only deal with business-related errors. Network timeout or other\
> common errors need to be handled separately:\
\
```\
import requests\
\
r = requests.get("https://api.gateio.ws/api/v4/futures/btc/contracts/BTC_USD")\
try:\
    r.raise_for_status()\
except requests.HTTPError:\
    # catch 2xx errors, parse error message in body, and do something based on `label`\
    if r.json()['label'] == 'xxx':\
        print(r.json())\
\
```\
\
or with [Python SDK(opens new window)](https://github.com/gateio/gateapi-python):\
\
```\
import json\
from gate_api import FuturesApi\
from gate_api.rest import ApiException\
\
api = FuturesApi()\
try:\
    api.get_futures_contract(settle='btc', contract="BTC_USD")\
except ApiException as e:  # ApiException wraps whole error information, see implementation for details\
    detail = json.loads(e.value.body)\
    if detail['label'] == 'xxx':\
        print(detail)\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#label-list) `label` list\
\
- Request parameter or format related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_PARAM\_VALUE | Invalid parameter value |\
| INVALID\_PROTOCOL | Invalid parameter value |\
| INVALID\_ARGUMENT | Invalid argument |\
| INVALID\_REQUEST\_BODY | Invalid request body |\
| MISSING\_REQUIRED\_PARAM | Missing required parameter |\
| BAD\_REQUEST | Invalid request |\
| INVALID\_CONTENT\_TYPE | Invalid `Content-Type` header |\
| NOT\_ACCEPTABLE | Invalid `Accept-` Header |\
| METHOD\_NOT\_ALLOWED | Request method is not allowed |\
| NOT\_FOUND | Request URL not exists |\
\
- Authentication related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_CREDENTIALS | Invalid credentials provided |\
| INVALID\_KEY | Invalid API Key |\
| IP\_FORBIDDEN | Request IP not in whitelist |\
| READ\_ONLY | API key is read-only |\
| INVALID\_SIGNATURE | Invalid signature |\
| MISSING\_REQUIRED\_HEADER | Missing required authentication header |\
| REQUEST\_EXPIRED | Request `Timestamp` is far from the server time |\
| ACCOUNT\_LOCKED | Account is locked |\
| FORBIDDEN | Account has no permission to request operation |\
\
- Wallet related\
\
| `label` | Meaning |\
| --- | --- |\
| SUB\_ACCOUNT\_NOT\_FOUND | Sub account not found |\
| SUB\_ACCOUNT\_LOCKED | Sub account is locked |\
| MARGIN\_BALANCE\_EXCEPTION | Abnormal margin account |\
| MARGIN\_TRANSFER\_FAILED | Failed to transfer with margin account |\
| TOO\_MUCH\_FUTURES\_AVAILABLE | Futures balance exceeds max allowed |\
| FUTURES\_BALANCE\_NOT\_ENOUGH | Futures balance not enough |\
| ACCOUNT\_EXCEPTION | Abnormal account |\
| SUB\_ACCOUNT\_TRANSFER\_FAILED | Failed to transfer with sub account |\
| ADDRESS\_NOT\_USED | Address never being used in web console |\
| TOO\_FAST | Withdrawing request exceeds frequency limit |\
| WITHDRAWAL\_OVER\_LIMIT | Withdrawal limit exceeded |\
| API\_WITHDRAW\_DISABLED | API withdrawal operation is disabled temporarily |\
| INVALID\_WITHDRAW\_ID | Invalid withdraw ID |\
| INVALID\_WITHDRAW\_CANCEL\_STATUS | Cancelling withdrawal not allowed with current status |\
| DUPLICATE\_REQUEST | Duplicate request |\
| ORDER\_EXISTS | Order already exists, do not resubmit |\
| INVALID\_CLIENT\_ORDER\_ID | The client\_order\_id is invalid |\
\
- Spot and margin trading related\
\
| `label` | Meaning |\
| --- | --- |\
| INVALID\_PRECISION | Invalid precision |\
| INVALID\_CURRENCY | Invalid currency |\
| INVALID\_CURRENCY\_PAIR | Invalid currency pair |\
| POC\_FILL\_IMMEDIATELY | Order would match and take immediately so it's cancelled |\
| ORDER\_NOT\_FOUND | Order not found |\
| ORDER\_CLOSED | Order already closed |\
| ORDER\_CANCELLED | Order already cancelled |\
| QUANTITY\_NOT\_ENOUGH | Amount is not enough |\
| BALANCE\_NOT\_ENOUGH | Balance is not enough |\
| MARGIN\_NOT\_SUPPORTED | Request currency pair doesn't provide margin trading |\
| MARGIN\_BALANCE\_NOT\_ENOUGH | Margin balance is not enough |\
| AMOUNT\_TOO\_LITTLE | Amount does not reach minimum required |\
| AMOUNT\_TOO\_MUCH | Amount exceeds maximum allowed |\
| REPEATED\_CREATION | Repeated creation |\
| LOAN\_NOT\_FOUND | Margin loan is not found |\
| LOAN\_RECORD\_NOT\_FOUND | Margin loan record is not found |\
| NO\_MATCHED\_LOAN | No loan can match request borrow requirement |\
| NOT\_MERGEABLE | Request loans cannot be merged |\
| NO\_CHANGE | No change is made |\
| REPAY\_TOO\_MUCH | Repay more than required |\
| TOO\_MANY\_CURRENCY\_PAIRS | Too many currency pairs in batch orders creation |\
| TOO\_MANY\_ORDERS | Too many orders in one currency pair in batch orders creation |\
| MIXED\_ACCOUNT\_TYPE | More than one account type is used in batch orders creation |\
| AUTO\_BORROW\_TOO\_MUCH | Auto borrow exceeds maximum allowed |\
| TRADE\_RESTRICTED | Trading is restricted due to high debt ratio |\
| FOK\_NOT\_FILL | FOK order cannot be filled completely |\
| INITIAL\_MARGIN\_TOO\_LOW | User's total initial margin rate is too low |\
| NO\_MERGEABLE\_ORDERS | Orders can be merged not found |\
| ORDER\_BOOK\_NOT\_FOUND | Insufficient liquidity |\
| FAILED\_RETRIEVE\_ASSETS | Failed to retrieve account assets |\
| CANCEL\_FAIL | Order cancel failed |\
\
- Futures related\
\
| `label` | Meaning |\
| --- | --- |\
| USER\_NOT\_FOUND | User has no futures account |\
| CONTRACT\_NO\_COUNTER | No counter order found |\
| CONTRACT\_NOT\_FOUND | Contract not found |\
| RISK\_LIMIT\_EXCEEDED | Risk limit exceeded |\
| INSUFFICIENT\_AVAILABLE | Balance is not enough |\
| LIQUIDATE\_IMMEDIATELY | Operation may cause liquidation |\
| LEVERAGE\_TOO\_HIGH | leverage too high |\
| LEVERAGE\_TOO\_LOW | leverage too low |\
| ORDER\_NOT\_FOUND | Order not found |\
| ORDER\_NOT\_OWNED | Order not owned |\
| ORDER\_FINISHED | Order already finished |\
| TOO\_MANY\_ORDERS | Too many open orders |\
| POSITION\_CROSS\_MARGIN | margin updating is not allowed in cross margin |\
| POSITION\_IN\_LIQUIDATION | Position is being liquidated |\
| POSITION\_IN\_CLOSE | Position is closing |\
| POSITION\_EMPTY | Position is empty |\
| REMOVE\_TOO\_MUCH | Changed margin exceeds allowed |\
| RISK\_LIMIT\_NOT\_MULTIPLE | Risk limit is not a multiple of step |\
| RISK\_LIMIT\_TOO\_HIGH | Risk limit too high |\
| RISK\_LIMIT\_TOO\_lOW | Risk limit too low |\
| PRICE\_TOO\_DEVIATED | Order price deviates too much from mark price |\
| SIZE\_TOO\_LARGE | Order size exceeds maximum |\
| SIZE\_TOO\_SMALL | Order size does not reach minimum |\
| PRICE\_OVER\_LIQUIDATION | Price to increase position can not exceeds liquidation price |\
| PRICE\_OVER\_BANKRUPT | Price to decrease position cannot exceeds bankrupting price |\
| ORDER\_POC\_IMMEDIATE | POC order will be finished immediately |\
| INCREASE\_POSITION | POC order will increase position |\
| CONTRACT\_IN\_DELISTING | Contract is delisting, only reduce-only order or close order is allowed |\
| POSITION\_NOT\_FOUND | Position not found |\
| POSITION\_DUAL\_MODE | Operation forbidden in dual-mode |\
| ORDER\_PENDING | Operation forbidden with pending orders |\
| POSITION\_HOLDING | Operation forbidden with holding position |\
| REDUCE\_EXCEEDED | Reduce order would exceed position in dual-mode |\
| NO\_CHANGE | No change is made |\
| AMEND\_WITH\_STOP | Amend forbidden with stop order |\
| ORDER\_FOK | Killed for FOK |\
\
- Collateral Loan related\
\
| `label` | Meaning |\
| --- | --- |\
| COL\_NOT\_ENOUGH | Collateral balance not enough |\
| COL\_TOO\_MUCH | Exceed collateral currency quota |\
| INIT\_LTV\_TOO\_HIGH | Init ltv too high |\
| REDEEMED\_LTV\_TOO\_HIGH | Ltv too high after redeem |\
| BORROWABLE\_NOT\_ENOUGH | Left borrowable not enough |\
| ORDER\_TOO\_MANY\_TOTAL | Exceed platform order count one day |\
| ORDER\_TOO\_MANY\_DAILY | Exceed single user order count one day |\
| ORDER\_TOO\_MANY\_USER | Exceed single user order count total |\
| ORDER\_NOT\_EXIST | Order id not exist |\
| ORDER\_FINISHED | Order id finished |\
| ORDER\_NO\_PAY | Order unpaid amount is zero |\
| ORDER\_EXIST | Order exist |\
| ORDER\_HISTORY\_EXIST | Order history exist |\
| ORDER\_REPAYING | Order is repaying |\
| ORDER\_LIQUIDATING | Order is liquidating |\
| BORROW\_TOO\_LITTLE | Less than currency min borrow amount |\
| BORROW\_TOO\_LARGE | Greater than total max borrow amount quantity |\
| REPAY\_AMOUNT\_INVALID | Repay request amount invalid |\
| REPAY\_GREATER\_THAN\_AVAILABLE | Repay greater than available |\
| POOL\_BALANCE\_NOT\_ENOUGH | Pool balance not enough |\
| CURRENCY\_SETTLING | Currency settlement in progress |\
| RISK\_REJECT | Risk reject, please try again later |\
| LOAN\_FAILED | Loan failed, you can borrow again |\
\
- Portfolio related\
\
| `label` | Meaning |\
| --- | --- |\
| USER\_LIAB | User has liab |\
| USER\_PENDING\_ORDERS | User has pending orders |\
| MODE\_SET | already set portfolio\_margin mode |\
\
- Earn related\
\
| `label` | Meaning |\
| --- | --- |\
| ERR\_BALANCE\_NOT\_ENOUGH | balance not enough |\
| ERR\_PRODUCT\_SELL\_OUT | Target quota reached |\
| ERR\_PRODUCT\_BUY | The project is not yet open for purchase |\
| ERR\_CREATE\_ORDER | Put order fail |\
| ERR\_QUOTA\_LOWER\_LIMIT | Not meeting the minimum order amount |\
| ERR\_QUOTA\_SUPERIOR\_LIMIT | The maximum order limit has been reached |\
| ERR\_ORDER\_NUMBER\_LIMIT | The maximum order quantity has been reached |\
| ERR\_PRODUCT\_CLOSE | Project closed |\
| COPIES\_NOT\_ENOUGH | Not enough shares available to subscribe |\
| COPIES\_TOO\_SMALL | Investment share is too small |\
| COPIES\_TOO\_BIG | The number of investment shares exceeds the upper limit |\
| TOTAL\_AMOUNT\_24 | The total amount of pledge and redemption within 24 hours exceeds the limit |\
| TOTAL\_BUYCOUNT\_24 | Pledge and redemption times exceeding the limit within 24 hours |\
| REDEEM\_24\_LIMIT | Redemption are allowed 24 hours after the last staking |\
\
- Server errors\
\
| `label` | Meaning |\
| --- | --- |\
| INTERNAL | Internal server error |\
| SERVER\_ERROR | Internal server error |\
| TOO\_BUSY | Server is too busy at the moment |\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#authentication) Authentication\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#generate-api-key) Generate API key\
\
Before calling the private API interface, the API key of the account needs to be generated to verify\
the identity. You can log in on the website and generate it in\
\[account management\] - > \[APIv4 keys\], or click [here](https://www.gate.com/myaccount/apiv4keys)\
to generate API keys.\
\
Each account can create 20 API keys, and the permission configuration of each key is independent of\
each other. It is recommended to set a note name for each key to indicate its purpose.\
\
**`Key`** Access Key\
**`Secret Key`** The key used for signature authentication encryption\
\
Besides, you can attach an IP whitelist, which requires the server only accept requests from\
specified IPs. Each key can have at most 20 IPs formatted in IPv4(not supporting IP range though).\
If IP whitelist is not set, the server will skip client IP validation.\
\
Each user can create at most 5 keys with separate permissions. It is recommended to set a name for\
key denoting how the key will be used.\
\
TIP\
\
Note: If the key is named with `spot` or `futures`, then it could be the default name after\
APIv4 migration. For details refer to _About APIv4 key improvement_ section\
\
Created key can also be updated or deleted, but any modification(s) can take up to 5 minutes to take\
effect.\
\
Please note that futures TestNet trading is a separate environment from futures real trading. Real\
trading API keys cannot be used in TestNet. If you want to test futures API with TestNet, you need\
to log into the console to generate TestNet API keys(in _"Futures TestNet APIKeys"_ tab on _"_\
_APIv4Keys"_ page). Making futures requests are identical between real and TestNet trading, with the\
only exceptions are different base URLs and different API keys.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#apiv4-permissions) APIv4 Permissions\
\
When creating a Key, you can configure whether to enable spot, margin, contract, wallet, or\
withdrawal permissions for the Key, and whether to enable read-write or read-only permissions.\
\
| Products | Permissions |\
| --- | --- |\
| `spot/margin` | `Read-only` query orders `Read-write` query orders & place orders |\
| `perpetual contract` | `Read-only` query orders `Read-write` query orders & place orders |\
| `delivery contract` | `Read-only` query orders `Read-write` query orders & place orders |\
| `wallet` | `Read-only` Query for withdrawal transfer records `Read-write` Query for account records & fund transfers |\
| `withdrawal` | `Read-only` Query cash withdrawal records `Read-write` Query cash withdrawal records & withdrawals |\
\
All `GET` operations are read requests, while others are write requests. Each permission group can\
be set to disabled, read-only or read-write.\
\
Please note that even though withdrawal API has only one operation(i.e.\
`POST /withdrawals`), for general concern, it is still separated from wallet API into a standalone\
permission group, while withdrawal history retrieving API stays inside wallet operations(\
i.e., `GET /wallet/withdrawals`).\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#apiv4-signed-request-requirements) APIv4 signed request requirements\
\
1. Generate APIv4 Key pairs in web console, and make sure it has the right permissions.\
2. Set request header `KEY` to the key.\
3. Set request header `Timestamp` to current time formatted in Unix time in seconds. Pay\
attention that the gap between its value and current time cannot exceed 60 seconds.\
4. Set request header `SIGN` to encrypted request signature. Refer to next section for how signature\
string is generated. Signature generation method is\
`HexEncode(HMAC_SHA512(secret, signature_string))`, i.e., the hexadecimal digest output of\
HMAC-SHA512 with APIv4 secret as secret and signature string as message,\
5. Make sure request client's IP is in your APIv4 Key's IP whitelist.\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#api-signature-string-generation) API Signature string generation\
\
In APIv4, signature string is concatenated as the following way:\
\
`Request Method + "\n" 	+ Request URL + "\n" 	+ Query String + "\n" 	+ HexEncode(SHA512(Request Payload)) + "\n" 	+ Timestamp`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#request-method) Request Method\
\
Request method in UPPERCASE, e.g. `POST`, `GET`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#request-url) Request URL\
\
Request url. Protocol, host and port are not included, e.g. `/api/v4/futures/orders`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-string) Query String\
\
Request query string without URL encode. query parameters order should be the\
same as how they are concatenated in the request URL, e.g. `status=finished&limit=50`. Use empty string("") if no query parameters.\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#hexencode-sha512-request-payload) HexEncode(SHA512(Request Payload))\
\
Hash the request body with SHA512 and output its Hex encoded form. If no request body, use empty string's hashed result, i.e.\
`cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e`\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#timestamp) Timestamp\
\
`Timestamp` request header value.\
\
Examples\
\
Note: all example signature string are broken into multiple lines for displaying purpose only.\
Only the `\n` character in signature string is reserved in reality.\
\
Suppose the key we used is `key`, while the secret is `secret`.\
\
1. List all orders\
\
```\
	GET /api/v4/futures/orders?contract=BTC_USD&status=finished&limit=50 HTTP/1.1\
\
```\
\
Signature string：\
\
```\
	GET\n\
	/api/v4/futures/orders\n\
	contract=BTC_USD&status=finished&limit=50\n\
	cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e\n\
	1541993715\
\
```\
\
Explanation：\
\
- `/api/v4/futures/orders`: request url\
- `contract=BTC_USD&status=finished&limit=50`: keep the query string as it is in the request url\
- request body use empty string's hashed result\
- `1541993715`: Unix timestamp in seconds\
\
Signature generated\
\
`55f84ea195d6fe57ce62464daaa7c3c02fa9d1dde954e4c898289c9a2407a3d6fb3faf24deff16790d726b66ac9f74526668b13bd01029199cc4fcc522418b8a`\
\
2. Create an order\
\
```\
	POST /api/v4/futures/orders HTTP/1.1\
\
	{"contract":"BTC_USD","type":"limit","size":100,"price":6800,"time_in_force":"gtc"}\
\
```\
\
Signature string：\
\
```\
	POST\n\
	/api/v4/futures/orders\n\
	\n\
	ad3c169203dc3026558f01b4df307641fa1fa361f086b2306658886d5708767b1854797c68d9e62fef2f991645aa82673622ebf417e091d0bd22bafe5d956cca\n\
	1541993715\
\
```\
\
Explanation：\
\
- request query string is empty, use plain empty string\
- use the hashed result of the json-string-formatted request body\
\
Signature generated\
\
`eae42da914a590ddf727473aff25fc87d50b64783941061f47a3fdb92742541fc4c2c14017581b4199a1418d54471c269c03a38d788d802e2c306c37636389f0`\
\
```\
\
# example authentication implementation in Python\
\
"""\
Python SDK is recommended as it has already implemented the authentication process for every API:\
"""\
\
import time\
import hashlib\
import hmac\
import requests\
import json\
\
def gen_sign(method, url, query_string=None, payload_string=None):\
    key = ''        # api_key\
    secret = ''     # api_secret\
\
    t = time.time()\
    m = hashlib.sha512()\
    m.update((payload_string or "").encode('utf-8'))\
    hashed_payload = m.hexdigest()\
    s = '%s\n%s\n%s\n%s\n%s' % (method, url, query_string or "", hashed_payload, t)\
    sign = hmac.new(secret.encode('utf-8'), s.encode('utf-8'), hashlib.sha512).hexdigest()\
    return {'KEY': key, 'Timestamp': str(t), 'SIGN': sign}\
\
if __name__ == "__main__":\
    host = "https://api.gateio.ws"\
    prefix = "/api/v4"\
    common_headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
    url = '/futures/orders'\
    body = {"contract": "BTC_USD", "size": 100, "price": "30", "tif": "gtc"}\
    request_content = json.dumps(body)\
    sign_headers = gen_sign('POST', prefix + url, "", request_content)\
    sign_headers.update(common_headers)\
    print('signature headers: %s' % sign_headers)\
    res = requests.post(host + prefix + url, headers=sign_headers, data=request_content)\
    print(res.status_code)\
    print(res.content)\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#faq) FAQ\
\
- How to retrieve `POST /wallet/transfers` history?\
\
Records of transfers generated through `POST /wallet/transfers` has multiple methods to be\
retrieved based on account, including:\
\
  - `GET /margin/account_book` to retrieve transferals from or to margin account.\
  - `GET /futures/{settle}/account_book?type=dnw` to retrieve perpetual contract account history\
  - `GET /delivery/{settle}/account_book?type=dnw` to retrieve delivery contract account history\
- How to create margin orders?\
\
Margin order creation has been merged into spot order APIs. In `POST /spot/orders` or\
`POST /spot/batch_orders`, set `account` to `margin` to create margin orders.\
\
- Futures operation returns error `USER_NOT_FOUND`\
\
Futures account is not initialized yet. Making a deposit to your futures account will help. Note\
that each settle currency is associated with an independent futures account.\
\
- Futures operation returns error `CONTRACT_NOT_FOUND`\
\
Every settle currency has its own contract list. Make sure the contract you specified is supported\
by the settle currency. You can query the list with\
\
`GET /futures/{settle}/contracts` or `GET /delivery/{settle}/contracts`\
\
- Difference between sub account and main account\
\
  - Sub account API Key cannot operate transferals between main and sub account,\
    i.e., `POST /wallet/sub_account_transfers`\
  - Sub account API Key cannot operate withdrawal, i.e., `POST /withdrawals`\
  - If sub account does not have some business permission, even if its API key has the permission,\
    the operations will be rejected too.\
- I have other question(s) not covered above\
\
Contact support for the issue. If the problem is related to one of the SDKs, you can also open an\
issue in the corresponding GitHub repository.\
\
When submitting an issue, please include the following information to help identify the problem:\
\
  - User ID\
    - Original request URL, request parameters and request body\
    - What API key was used and where was it used, TestNet or real trading(API secret is not needed)\
    - Programming language. Providing a code snippet will be better\
    - Whether SDK was used. If so, which method caused the problem\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdrawal) Withdrawal\
\
Withdrawal API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#withdraw) Withdraw\
\
`POST /withdrawals`\
\
_Withdraw_\
\
If the recipient's on-chain address is also Gate, no transaction fee will be charged\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » withdraw\_order\_id | body | string | false | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » amount | body | string | true | Token amount |\
| » currency | body | string | true | Currency name |\
| » address | body | string | false | Withdrawal address. Required for withdrawals |\
| » memo | body | string | false | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | body | string | false | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | body | string | false | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand. |\
| » chain | body | string | true | Name of the chain used in withdrawals |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions) Detailed descriptions\
\
**» asset\_class**: Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.\
Valid values: SPOT, PILOT\
\
SPOT: Main area\
PILOT: Innovation area\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Withdrawal request accepted. Check withdrawal record status for processing result | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | string | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | string | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.<br>Valid values: SPOT, PILOT<br>SPOT: Main area<br>PILOT: Innovation area |\
| » status | string | Transaction status<br>\- DONE: Completed<br>\- CANCEL: Cancelled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: GateCode operation<br>\- EXTPEND: Sent, waiting for confirmation<br>\- FAIL: Failed on chain, waiting for confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: Pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals'\
query_param = ''\
body='{"withdraw_order_id":"order_123456","currency":"USDT","address":"1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs","amount":"222.61","memo":"","chain":"TRX"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/withdrawals"\
query_param=""\
body_param='{"withdraw_order_id":"order_123456","currency":"USDT","address":"1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs","amount":"222.61","memo":"","chain":"TRX"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "amount": "222.61",\
  "memo": "",\
  "chain": "TRX"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "id": "210496",\
  "timestamp": "1542000000",\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "txid": "128988928203223323290",\
  "amount": "222.61",\
  "memo": "",\
  "status": "DONE",\
  "chain": "TRX"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#uid-transfer) UID transfer\
\
`POST /withdrawals/push`\
\
_UID transfer_\
\
Transfers between main spot accounts. Both parties cannot be sub-accounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » receive\_uid | body | integer(int64) | true | Recipient UID |\
| » currency | body | string | true | Currency name |\
| » amount | body | string | true | Transfer amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request accepted. Check withdrawal record status for processing result | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals/push'\
query_param = ''\
body='{"receive_uid":12233,"currency":"USDT","amount":"1.1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/withdrawals/push"\
query_param=""\
body_param='{"receive_uid":12233,"currency":"USDT","amount":"1.1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "receive_uid": 12233,\
  "currency": "USDT",\
  "amount": "1.1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "id": 111\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-withdrawal-with-specified-id) Cancel withdrawal with specified ID\
\
`DELETE /withdrawals/{withdrawal_id}`\
\
_Cancel withdrawal with specified ID_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| withdrawal\_id | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 202 | [Accepted(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.3) | Cancellation request accepted. Check record status for cancellation result | Inline |\
\
### Response Schema\
\
Status Code **202**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » withdraw\_id | string | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| » asset\_class | string | Withdrawal record currency type, empty by default. Supports users to query withdrawal records in main area and innovation area on demand.<br>Valid values: SPOT, PILOT<br>SPOT: Main area<br>PILOT: Innovation area |\
| » status | string | Transaction status<br>\- DONE: Completed<br>\- CANCEL: Cancelled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: GateCode operation<br>\- EXTPEND: Sent, waiting for confirmation<br>\- FAIL: Failed on chain, waiting for confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: Pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/withdrawals/210496'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/withdrawals/210496"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 202 Response\
\
```\
{\
  "id": "210496",\
  "timestamp": "1542000000",\
  "withdraw_order_id": "order_123456",\
  "currency": "USDT",\
  "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
  "txid": "128988928203223323290",\
  "amount": "222.61",\
  "memo": "",\
  "status": "DONE",\
  "chain": "TRX"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#wallet) Wallet\
\
Wallet API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-chains-supported-for-specified-currency) Query chains supported for specified currency\
\
`GET /wallet/currency_chains`\
\
_Query chains supported for specified currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » chain | string | Chain name |\
| » name\_cn | string | Chain name in Chinese |\
| » name\_en | string | Chain name in English |\
| » contract\_address | string | Smart contract address for the currency; if no address is available, it will be an empty string |\
| » is\_disabled | integer(int32) | If it is disabled. 0 means NOT being disabled |\
| » is\_deposit\_disabled | integer(int32) | Is deposit disabled. 0 means not disabled |\
| » is\_withdraw\_disabled | integer(int32) | Is withdrawal disabled. 0 means not disabled |\
| » decimal | string | Withdrawal precision |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/currency_chains'\
query_param = 'currency=GT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "chain": "ETH",\
    "name_cn": "以太坊ERC20",\
    "name_en": "ETH/ERC20",\
    "contract_address": "",\
    "is_disabled": 0,\
    "is_deposit_disabled": 0,\
    "is_withdraw_disabled": 0\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#generate-currency-deposit-address) Generate currency deposit address\
\
`GET /wallet/deposit_address`\
\
_Generate currency deposit address_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Address successfully generated | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » address | string | Deposit address |\
| » multichain\_addresses | array | none |\
| »» MultiChainAddressItem | object | none |\
| »»» chain | string | Name of the chain |\
| »»» address | string | Deposit address |\
| »»» payment\_id | string | Notes that some currencies required(e.g., Tag, Memo) when depositing |\
| »»» payment\_name | string | Note type, `Tag` or `Memo` |\
| »»» obtain\_failed | integer | The obtain failed status- 0: address successfully obtained- 1: failed to obtain address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/deposit_address'\
query_param = 'currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/deposit_address"\
query_param="currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "USDT",\
  "address": "LPXtk1kWHioP62SzfqwKbYE3Z7Wt2ujYEc",\
  "multichain_addresses": [\
    {\
      "chain": "TRX",\
      "address": "LPXtk1kWHioP62SzfqwKbYE3Z7Wt2ujYEc",\
      "payment_id": "",\
      "payment_name": "",\
      "obtain_failed": 0\
    }\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-withdrawal-records) Get withdrawal records\
\
`GET /wallet/withdrawals`\
\
_Get withdrawal records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| withdraw\_id | query | string | false | Withdrawal record ID starts with 'w', such as: w1879219868. When withdraw\_id is not empty, only this specific withdrawal record will be queried, and time-based querying will be disabled |\
| asset\_class | query | string | false | Currency type of withdrawal record, empty by default. Supports querying withdrawal records in main zone and innovation zone on demand. |\
| withdraw\_order\_id | query | string | false | User-defined order number for withdrawal. Default is empty. When not empty, the specified user-defined order number record will be queried |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-2) Detailed descriptions\
\
**asset\_class**: Currency type of withdrawal record, empty by default. Supports querying withdrawal records in main zone and innovation zone on demand.\
Value range: SPOT, PILOT\
\
SPOT: Main Zone\
PILOT: Innovation Zone\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » block\_number | string | Block Number |\
| » withdraw\_order\_id | string | Client order id, up to 32 length and can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.) |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » fee | string | Fee |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address |\
| » fail\_reason | string | Reason for withdrawal failure. Has a value when status = CANCEL, empty for all other statuses |\
| » timestamp2 | string | Withdrawal final time, i.e.: withdrawal cancellation time or withdrawal success time<br>When status = CANCEL, corresponds to cancellation time<br>When status = DONE and block\_number > 0, it is the withdrawal success time |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » status | string | Transaction status<br>\- DONE: Completed (block\_number > 0 is considered to be truly completed)<br>\- CANCEL: Canceled<br>\- REQUEST: Requesting<br>\- MANUAL: Pending manual review<br>\- BCODE: Recharge code operation<br>\- EXTPEND: Sent awaiting confirmation<br>\- FAIL: Failure on the chain awaiting confirmation<br>\- INVALID: Invalid order<br>\- VERIFY: Verifying<br>\- PROCES: Processing<br>\- PEND: Processing<br>\- DMOVE: pending manual review<br>\- REVIEW: Under review |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/withdrawals'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/withdrawals"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "id": "w1879219868",\
      "currency": "USDT",\
      "address": "THISISTESTADDRESSFORGATEPAY",\
      "amount": "4.023",\
      "fee": "0",\
      "txid": "Internal transaction 260594131",\
      "chain": "BSC",\
      "timestamp": "1745220149",\
      "status": "DONE",\
      "withdraw_order_id": "202504211521368538928",\
      "block_number": "1000",\
      "fail_reason": "",\
      "type": "appbankgp",\
      "timestamp2": "1745220149",\
      "memo": ""\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-deposit-records) Get deposit records\
\
`GET /wallet/deposits`\
\
_Get deposit records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of entries returned in the list, limited to 500 transactions |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Record ID |\
| » txid | string | Hash record of the withdrawal |\
| » withdraw\_order\_id | string | Client order id, up to 32 length and can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.) |\
| » timestamp | string | Operation time |\
| » amount | string | Token amount |\
| » currency | string | Currency name |\
| » address | string | Withdrawal address. Required for withdrawals |\
| » memo | string | Additional remarks with regards to the withdrawal |\
| » status | string | Trading Status<br>\- REVIEW: Recharge review (compliance review)<br>\- PEND: Processing<br>\- DONE: Waiting for funds to be unlocked<br>\- INVALID: Invalid data<br>\- TRACK: Track the number of confirmations, waiting to add funds to the user (spot)<br>\- BLOCKED: Rejected Recharge<br>\- DEP\_CREDITED: Recharge to account, withdrawal is not unlocked |\
| » chain | string | Name of the chain used in withdrawals |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/deposits'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/deposits"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": "210496",\
    "timestamp": "1542000000",\
    "withdraw_order_id": "order_123456",\
    "currency": "USDT",\
    "address": "1HkxtBAMrA3tP5ENnYY2CZortjZvFDH5Cs",\
    "txid": "128988928203223323290",\
    "amount": "222.61",\
    "memo": "",\
    "status": "DONE",\
    "chain": "TRX"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-trading-accounts) Transfer between trading accounts\
\
`POST /wallet/transfers`\
\
_Transfer between trading accounts_\
\
Balance transfers between personal trading accounts. Currently supports the following transfer operations:\
\
1. Spot account - Margin account\
2. Spot account - Perpetual futures account\
3. Spot account - Delivery futures account\
4. Spot account - Options account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Transfer currency name. For contract accounts, `currency` can be set to `POINT` (points) or supported settlement currencies (e.g., `BTC`, `USDT`) |\
| » from | body | string | true | Account to transfer from |\
| » to | body | string | true | Account to transfer to |\
| » amount | body | string | true | Transfer amount |\
| » currency\_pair | body | string | false | Margin trading pair. Required when transferring to or from margin account |\
| » settle | body | string | false | Contract settlement currency. Required when transferring to or from contract account |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » from | spot |\
| » from | margin |\
| » from | futures |\
| » from | delivery |\
| » from | options |\
| » to | spot |\
| » to | margin |\
| » to | futures |\
| » to | delivery |\
| » to | options |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/transfers'\
query_param = ''\
body='{"currency":"BTC","from":"spot","to":"margin","amount":"1","currency_pair":"BTC_USDT","settle":""}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/transfers"\
query_param=""\
body_param='{"currency":"BTC","from":"spot","to":"margin","amount":"1","currency_pair":"BTC_USDT","settle":""}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "BTC",\
  "from": "spot",\
  "to": "margin",\
  "amount": "1",\
  "currency_pair": "BTC_USDT",\
  "settle": ""\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-main-and-sub-accounts) Transfer between main and sub accounts\
\
`POST /wallet/sub_account_transfers`\
\
_Transfer between main and sub accounts_\
\
Supports transfers to/from sub-account's spot or futures accounts. Note that regardless of which sub-account is operated, only the main account's spot account is used\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » sub\_account | body | string | true | Sub account user ID |\
| » sub\_account\_type | body | string | false | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account, options - options account |\
| » currency | body | string | true | Transfer currency name |\
| » amount | body | string | true | Transfer amount |\
| » direction | body | string | true | Transfer direction: to - transfer into sub-account, from - transfer out from sub-account |\
| » client\_order\_id | body | string | false | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_transfers'\
query_param = ''\
body='{"sub_account":"10002","sub_account_type":"spot","currency":"BTC","amount":"1","direction":"to","client_order_id":"da3ce7a088c8b0372b741419c7829033"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/sub_account_transfers"\
query_param=""\
body_param='{"sub_account":"10002","sub_account_type":"spot","currency":"BTC","amount":"1","direction":"to","client_order_id":"da3ce7a088c8b0372b741419c7829033"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "sub_account": "10002",\
  "sub_account_type": "spot",\
  "currency": "BTC",\
  "amount": "1",\
  "direction": "to",\
  "client_order_id": "da3ce7a088c8b0372b741419c7829033"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-transfer-records-between-main-and-sub-accounts) Get transfer records between main and sub accounts\
\
`GET /wallet/sub_account_transfers`\
\
_Get transfer records between main and sub accounts_\
\
Record query time range cannot exceed 30 days\
\
> Note: Only records after 2020-04-10 can be retrieved\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » timest | string | Transfer timestamp |\
| » uid | string | Main account user ID |\
| » sub\_account | string | Sub account user ID |\
| » sub\_account\_type | string | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account, options - options account |\
| » currency | string | Transfer currency name |\
| » amount | string | Transfer amount |\
| » direction | string | Transfer direction: to - transfer into sub-account, from - transfer out from sub-account |\
| » source | string | Source of the transfer operation |\
| » client\_order\_id | string | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
| » status | string | Sub-account transfer record status, currently only 'success' |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_transfers'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_transfers"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "timest": "1592809000",\
    "uid": "10001",\
    "sub_account": "10002",\
    "sub_account_type": "spot",\
    "currency": "BTC",\
    "amount": "1",\
    "direction": "to",\
    "source": "web",\
    "client_order_id": "da3ce7a088c8b0372b741419c7829033",\
    "status": "success"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-between-sub-accounts) Transfer between sub-accounts\
\
`POST /wallet/sub_account_to_sub_account`\
\
_Transfer between sub-accounts_\
\
Supports balance transfers between two sub-accounts under the same main account. You can use either the main account's API Key or the source sub-account's API Key to perform the operation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Transfer currency name |\
| » sub\_account\_type | body | string | false | Transfer from account (deprecated, use `sub_account_from_type` and `sub_account_to_type` instead) |\
| » sub\_account\_from | body | string | true | Transfer from the user id of the sub-account |\
| » sub\_account\_from\_type | body | string | true | Source sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account |\
| » sub\_account\_to | body | string | true | Transfer to the user id of the sub-account |\
| » sub\_account\_to\_type | body | string | true | Target sub-account trading account: spot - spot account, futures - perpetual contract account, delivery - delivery contract account |\
| » amount | body | string | true | Transfer amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransactionID_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_to_sub_account'\
query_param = ''\
body='{"currency":"usdt","sub_account_from":"10001","sub_account_from_type":"spot","sub_account_to":"10002","sub_account_to_type":"spot","amount":"1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/sub_account_to_sub_account"\
query_param=""\
body_param='{"currency":"usdt","sub_account_from":"10001","sub_account_from_type":"spot","sub_account_to":"10002","sub_account_to_type":"spot","amount":"1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "usdt",\
  "sub_account_from": "10001",\
  "sub_account_from_type": "spot",\
  "sub_account_to": "10002",\
  "sub_account_to_type": "spot",\
  "amount": "1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": 59636381286\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#transfer-status-query) Transfer status query\
\
`GET /wallet/order_status`\
\
_Transfer status query_\
\
Supports querying transfer status based on user-defined client\_order\_id or tx\_id returned by the transfer interface\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| client\_order\_id | query | string | false | Customer-defined ID to prevent duplicate transfers. Can be a combination of letters (case-sensitive), numbers, hyphens '-', and underscores '\_'. Can be pure letters or pure numbers with length between 1-64 characters |\
| tx\_id | query | string | false | Transfer operation number, cannot be empty at the same time as client\_order\_id |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Transfer status retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_TransferOrderStatus_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tx\_id | string | Order ID |\
| » status | string | Transfer status: PENDING - Processing, SUCCESS - Transfer successful, FAIL - Transfer failed, PARTIAL\_SUCCESS - Partially successful (this status appears when transferring between sub-accounts) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/order_status'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/order_status"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tx_id": "59636381286",\
  "status": "SUCCESS"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-withdrawal-status) Query withdrawal status\
\
`GET /wallet/withdraw_status`\
\
_Query withdrawal status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » name | string | Currency name |\
| » name\_cn | string | Currency Chinese name |\
| » deposit | string | Deposit fee |\
| » withdraw\_percent | string | Withdrawal fee rate percentage |\
| » withdraw\_fix | string | Fixed withdrawal fee |\
| » withdraw\_day\_limit | string | Daily allowed withdrawal amount |\
| » withdraw\_amount\_mini | string | Minimum withdrawal amount |\
| » withdraw\_day\_limit\_remain | string | Daily withdrawal amount left |\
| » withdraw\_eachtime\_limit | string | Maximum amount for each withdrawal |\
| » withdraw\_fix\_on\_chains | object | Fixed withdrawal fee on multiple chains |\
| »» **additionalProperties** | string | none |\
| » withdraw\_percent\_on\_chains | object | Percentage withdrawal fee on multiple chains |\
| »» **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/withdraw_status'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/withdraw_status"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "GT",\
    "name": "GateToken",\
    "name_cn": "GateToken",\
    "deposit": "0",\
    "withdraw_percent": "0%",\
    "withdraw_fix": "0.01",\
    "withdraw_day_limit": "20000",\
    "withdraw_day_limit_remain": "20000",\
    "withdraw_amount_mini": "0.11",\
    "withdraw_eachtime_limit": "20000",\
    "withdraw_fix_on_chains": {\
      "BTC": "20",\
      "ETH": "15",\
      "TRX": "0",\
      "EOS": "2.5"\
    },\
    "withdraw_percent_on_chains": {\
      "ETH": "0%",\
      "GTEVM": "0%"\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-balance-information) Query sub-account balance information\
\
`GET /wallet/sub_account_balances`\
\
_Query sub-account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | Available balances of currencies |\
| »» **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "10003",\
    "available": {\
      "BTC": "0.1",\
      "GT": "2000",\
      "USDT": "10"\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-isolated-margin-account-balance-information) Query sub-account isolated margin account balance information\
\
`GET /wallet/sub_account_margin_balances`\
\
_Query sub-account isolated margin account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | array | Margin account balances |\
| »» _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »»» currency\_pair | string | Trading pair |\
| »»» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »»» leverage | string | User's current market leverage multiplier |\
| »»» locked | boolean | Whether the account is locked |\
| »»» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »»» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »»» base | object | Currency account information |\
| »»»» currency | string | Currency name |\
| »»»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»»» borrowed | string | Borrowed funds |\
| »»»» interest | string | Unpaid interest |\
| »»» quote | object | Currency account information |\
| »»»» currency | string | Currency name |\
| »»»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»»» borrowed | string | Borrowed funds |\
| »»»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_margin_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_margin_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "10000",\
    "available": [\
      {\
        "locked": false,\
        "currency_pair": "BTC_USDT",\
        "risk": "9999.99",\
        "base": {\
          "available": "0.1",\
          "borrowed": "0",\
          "interest": "0",\
          "currency": "BTC",\
          "locked": "0"\
        },\
        "quote": {\
          "available": "0",\
          "borrowed": "0",\
          "interest": "0",\
          "currency": "USDT",\
          "locked": "0"\
        }\
      }\
    ]\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-perpetual-futures-account-balance-information) Query sub-account perpetual futures account balance information\
\
`GET /wallet/sub_account_futures_balances`\
\
_Query sub-account perpetual futures account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
| settle | query | string | false | Query balance of specified settlement currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | Futures account balances |\
| »» **additionalProperties** | object | none |\
| »»» total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| »»» unrealised\_pnl | string | Unrealized PNL |\
| »»» position\_margin | string | Position margin |\
| »»» order\_margin | string | Order margin of unfinished orders |\
| »»» available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| »»» point | string | Point card amount |\
| »»» currency | string | Settlement currency |\
| »»» in\_dual\_mode | boolean | Whether dual mode is enabled |\
| »»» position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| »»» enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| »»» position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| »»» maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| »»» bonus | string | Bonus |\
| »»» enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| »»» cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| »»» cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| »»» cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| »»» cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| »»» cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| »»» cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| »»» cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| »»» cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| »»» isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| »»» enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| »»» margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| »»» enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| »»» position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| »»» history | object | Statistical data |\
| »»»» dnw | string | total amount of deposit and withdraw |\
| »»»» pnl | string | total amount of trading profit and loss |\
| »»»» fee | string | total amount of fee |\
| »»»» refr | string | total amount of referrer rebates |\
| »»»» fund | string | total amount of funding costs |\
| »»»» point\_dnw | string | total amount of point deposit and withdraw |\
| »»»» point\_fee | string | total amount of point fee |\
| »»»» point\_refr | string | total amount of referrer rebates of point fee |\
| »»»» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »»»» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_futures_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_futures_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "available": {\
        "btc": {\
          "available": "0.0009",\
          "bonus": "0",\
          "cross_available": "0.0009",\
          "cross_initial_margin": "0",\
          "cross_maintenance_margin": "0",\
          "cross_order_margin": "0",\
          "cross_unrealised_pnl": "0",\
          "currency": "BTC",\
          "enable_credit": false,\
          "enable_evolved_classic": true,\
          "enable_new_dual_mode": false,\
          "history": {\
            "bonus_dnw": "0",\
            "bonus_offset": "0",\
            "cross_settle": "0",\
            "dnw": "0.0009",\
            "fee": "0",\
            "fund": "0",\
            "pnl": "0",\
            "point_dnw": "0",\
            "point_fee": "0",\
            "point_refr": "0",\
            "refr": "0"\
          },\
          "in_dual_mode": false,\
          "isolated_position_margin": "0",\
          "maintenance_margin": "0",\
          "margin_mode": 0,\
          "margin_mode_name": "classic",\
          "order_margin": "0",\
          "point": "0",\
          "position_initial_margin": "0",\
          "position_margin": "0",\
          "total": "0.0009",\
          "unrealised_pnl": "0",\
          "update_id": 11,\
          "update_time": 1741766400,\
          "user": 10003\
        },\
        "usd": {},\
        "usdt": {\
          "available": "500.7",\
          "bonus": "0",\
          "cross_available": "500.7",\
          "cross_initial_margin": "0",\
          "cross_maintenance_margin": "0",\
          "cross_order_margin": "0",\
          "cross_unrealised_pnl": "0",\
          "currency": "USDT",\
          "enable_credit": true,\
          "enable_evolved_classic": true,\
          "enable_new_dual_mode": true,\
          "history": {\
            "bonus_dnw": "0",\
            "bonus_offset": "0",\
            "cross_settle": "-1.854650083",\
            "dnw": "1.89047097",\
            "fee": "-0.141010882",\
            "fund": "0",\
            "pnl": "0.10519",\
            "point_dnw": "0",\
            "point_fee": "0",\
            "point_refr": "0",\
            "refr": "0"\
          },\
          "in_dual_mode": true,\
          "isolated_position_margin": "0",\
          "maintenance_margin": "0",\
          "margin_mode": 1,\
          "margin_mode_name": "multi_currency",\
          "order_margin": "0",\
          "point": "0",\
          "position_initial_margin": "0",\
          "position_margin": "0",\
          "total": "0.000000005",\
          "unrealised_pnl": "0",\
          "update_id": 37,\
          "update_time": 1741766400,\
          "user": 10003\
        }\
      },\
      "uid": "10003"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-sub-account-cross-margin-account-balance-information) Query sub-account cross margin account balance information\
\
`GET /wallet/sub_account_cross_margin_balances`\
\
_Query sub-account cross margin account balance information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| sub\_uid | query | string | false | Sub-account user ID, you can query multiple records separated by `,`. If not specified, it will return records of all sub-accounts |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » uid | string | User ID |\
| » available | object | none |\
| »» user\_id | integer(int64) | Cross margin account user ID. 0 means this sub-account has not yet opened a cross margin account |\
| »» locked | boolean | Whether the account is locked |\
| »» balances | object | none |\
| »»» CrossMarginBalance | object | none |\
| »»»» available | string | Available balance |\
| »»»» freeze | string | Locked balance |\
| »»»» borrowed | string | Borrowed balance |\
| »»»» interest | string | Unpaid interest |\
| »»» total | string | Total account value in USDT, i.e., the sum of all currencies' `(available+freeze)*price*discount` |\
| »»» borrowed | string | Total borrowed value in USDT, i.e., the sum of all currencies' `borrowed*price*discount` |\
| »»» borrowed\_net | string | Total borrowed value in USDT \* leverage factor |\
| »»» net | string | Total net assets in USDT |\
| »»» leverage | string | Position leverage |\
| »»» interest | string | Total unpaid interest in USDT, i.e., the sum of all currencies' `interest*price*discount` |\
| »»» risk | string | Risk rate. When it falls below 110%, liquidation will be triggered. Calculation formula: `total / (borrowed+interest)` |\
| »»» total\_initial\_margin | string | Total initial margin |\
| »»» total\_margin\_balance | string | Total margin balance |\
| »»» total\_maintenance\_margin | string | Total maintenance margin |\
| »»» total\_initial\_margin\_rate | string | Total initial margin rate |\
| »»» total\_maintenance\_margin\_rate | string | Total maintenance margin rate |\
| »»» total\_available\_margin | string | Total available margin |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/sub_account_cross_margin_balances'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/sub_account_cross_margin_balances"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "uid": "100000",\
    "available": {\
      "user_id": 100003,\
      "locked": false,\
      "total": "20.000000",\
      "borrowed": "0.000000",\
      "interest": "0",\
      "borrowed_net": "0",\
      "net": "20",\
      "leverage": "3",\
      "risk": "9999.99",\
      "total_initial_margin": "0.00",\
      "total_margin_balance": "20.00",\
      "total_maintenance_margin": "0.00",\
      "total_initial_margin_rate": "9999.9900",\
      "total_maintenance_margin_rate": "9999.9900",\
      "total_available_margin": "20.00",\
      "balances": {\
        "USDT": {\
          "available": "20.000000",\
          "freeze": "0.000000",\
          "borrowed": "0.000000",\
          "interest": "0.000000"\
        }\
      }\
    }\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-withdrawal-address-whitelist) Query withdrawal address whitelist\
\
`GET /wallet/saved_address`\
\
_Query withdrawal address whitelist_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency |\
| chain | query | string | false | Chain name |\
| limit | query | string | false | Maximum number returned, up to 100 |\
| page | query | integer | false | Page number |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » chain | string | Chain name |\
| » address | string | Address |\
| » name | string | Name |\
| » tag | string | Tag |\
| » verified | string | Whether to pass the verification 0-unverified, 1-verified |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/saved_address'\
query_param = 'currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/saved_address"\
query_param="currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "usdt",\
    "chain": "TRX",\
    "address": "TWYirLzw2RARB2jfeFcfRPmeuU3rC7rakT",\
    "name": "gate",\
    "tag": "",\
    "verified": "1"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-fees) Query personal trading fees\
\
`GET /wallet/fee`\
\
_Query personal trading fees_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify currency pair to get more accurate fee settings. |\
| settle | query | string | false | Specify the settlement currency of the contract to get more accurate fee settings. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-3) Detailed descriptions\
\
**currency\_pair**: Specify currency pair to get more accurate fee settings.\
\
This field is optional. Usually fee settings are the same for all currency pairs.\
\
**settle**: Specify the settlement currency of the contract to get more accurate fee settings.\
\
This field is optional. Generally, the fee settings for all settlement currencies are the same.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-2) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | BTC |\
| settle | USDT |\
| settle | USD |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » taker\_fee | string | taker fee rate |\
| » maker\_fee | string | maker fee rate |\
| » gt\_discount | boolean | Whether GT deduction discount is enabled |\
| » gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| » gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| » loan\_fee | string | Loan fee rate of margin lending |\
| » point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| » futures\_taker\_fee | string | Perpetual contract taker fee rate |\
| » futures\_maker\_fee | string | Perpetual contract maker fee rate |\
| » delivery\_taker\_fee | string | Delivery contract taker fee rate |\
| » delivery\_maker\_fee | string | Delivery contract maker fee rate |\
| » debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 10001,\
  "taker_fee": "0.002",\
  "maker_fee": "0.002",\
  "futures_taker_fee": "-0.00025",\
  "futures_maker_fee": "0.00075",\
  "gt_discount": false,\
  "gt_taker_fee": "0",\
  "gt_maker_fee": "0",\
  "loan_fee": "0.18",\
  "point_type": "1",\
  "delivery_taker_fee": "0.00016",\
  "delivery_maker_fee": "-0.00015",\
  "debit_fee": 3\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-account-totals) Query personal account totals\
\
`GET /wallet/total_balance`\
\
_Query personal account totals_\
\
This query endpoint returns the total _estimated value_ of all currencies in each account converted to the input currency. Exchange rates and related account balance information may be cached for up to 1 minute.\
It is not recommended to use this interface data for real-time calculations.\
\
For real-time calculations, query the corresponding balance interface based on account type, such as:\
\
- `GET /spot/accounts` to query spot account\
- `GET /margin/accounts` to query margin account\
- `GET /futures/{settle}/accounts` to query futures account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Target currency type for statistical conversion. Accepts BTC, CNY, USD, and USDT. USDT is the default value |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request is valid and successfully returned | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's total balance information_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | object | Total balances calculated with specified currency unit |\
| »» amount | string | Account total balance amount |\
| »» currency | string | Currency |\
| »» unrealised\_pnl | string | Unrealised\_pnl, this field will only appear in futures, options, delivery, and total accounts |\
| »» borrowed | string | Total borrowed amount, this field will only appear in margin and cross\_margin accounts |\
| » details | object | Total balances in different accounts<br>\- cross\_margin: cross margin account<br>\- spot: spot account<br>\- finance: finance account<br>\- margin: margin account<br>\- quant: quant account<br>\- futures: perpetual contract account<br>\- delivery: delivery contract account<br>\- warrant: warrant account<br>\- cbbc: CBBC account |\
| »» **additionalProperties** | object | Total balances calculated with specified currency unit |\
| »»» amount | string | Account total balance amount |\
| »»» currency | string | Currency |\
| »»» unrealised\_pnl | string | Unrealised\_pnl, this field will only appear in futures, options, delivery, and total accounts |\
| »»» borrowed | string | Total borrowed amount, this field will only appear in margin and cross\_margin accounts |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-3) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| currency | BTC |\
| currency | CNY |\
| currency | USD |\
| currency | USDT |\
| currency | BTC |\
| currency | CNY |\
| currency | USD |\
| currency | USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/total_balance'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/total_balance"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "details": {\
    "cross_margin": {\
      "amount": "0",\
      "currency": "USDT"\
    },\
    "spot": {\
      "currency": "USDT",\
      "amount": "42264489969935775.5160259954878034182418"\
    },\
    "finance": {\
      "amount": "662714381.70310327810191647181",\
      "currency": "USDT"\
    },\
    "margin": {\
      "amount": "1259175.664137668554329559",\
      "currency": "USDT",\
      "borrowed": "0.00"\
    },\
    "quant": {\
      "amount": "591702859674467879.6488202650892478553852",\
      "currency": "USDT"\
    },\
    "futures": {\
      "amount": "2384175.5606114082065",\
      "currency": "USDT",\
      "unrealised_pnl": "0.00"\
    },\
    "delivery": {\
      "currency": "USDT",\
      "amount": "1519804.9756702",\
      "unrealised_pnl": "0.00"\
    },\
    "warrant": {\
      "amount": "0",\
      "currency": "USDT"\
    },\
    "cbbc": {\
      "currency": "USDT",\
      "amount": "0"\
    }\
  },\
  "total": {\
    "currency": "USDT",\
    "amount": "633967350312281193.068368815439797304437",\
    "unrealised_pnl": "0.00",\
    "borrowed": "0.00"\
  }\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-list-of-convertible-small-balance-currencies) Get list of convertible small balance currencies\
\
`GET /wallet/small_balance`\
\
_Get list of convertible small balance currencies_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Small Balance Conversion |\
| »» currency | string | Currency |\
| »» available\_balance | string | Available balance |\
| »» estimated\_as\_btc | string | Estimated as BTC |\
| »» convertible\_to\_gt | string | Estimated conversion to GT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/small_balance"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "currency": "FLOKI",\
      "available_balance": "182.29400000",\
      "estimated_as_btc": "0.00000012",\
      "convertible_to_gt": "0.001080"\
    },\
    {\
      "currency": "MBLK",\
      "available_balance": "0.91723337",\
      "estimated_as_btc": "0.00000102",\
      "convertible_to_gt": "0.009188"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#convert-small-balance-currency) Convert small balance currency\
\
`POST /wallet/small_balance`\
\
_Convert small balance currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | array | false | Currency to be converted |\
| » is\_all | body | boolean | false | Whether to convert all |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance'\
query_param = ''\
body='{"currency":["FLOKI","MBLK"],"is_all":true}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/wallet/small_balance"\
query_param=""\
body_param='{"currency":["FLOKI","MBLK"],"is_all":true}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": [\
    "FLOKI",\
    "MBLK"\
  ],\
  "is_all": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-convertible-small-balance-currency-history) Get convertible small balance currency history\
\
`GET /wallet/small_balance_history`\
\
_Get convertible small balance currency history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency to convert |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Small Balance Conversion |\
| »» id | string | Order ID |\
| »» currency | string | Currency |\
| »» amount | string | Swap Amount |\
| »» gt\_amount | string | GT amount |\
| »» create\_time | integer(int64) | Exchange time (in seconds) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/small_balance_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/small_balance_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  [\
    {\
      "id": "28583810",\
      "create_time": 1706670777,\
      "currency": "FLOKI",\
      "amount": "182.29400000",\
      "gt_amount": "0.001079"\
    }\
  ]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-uid-transfer-history) Get UID transfer history\
\
`GET /wallet/push`\
\
_Get UID transfer history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| id | query | integer(int32) | false | Order ID |\
| from | query | integer(int32) | false | Start time for querying records. If not specified, defaults to 7 days before the current time. Unix timestamp in seconds |\
| to | query | integer(int32) | false | End time for querying records. If not specified, defaults to the current time. Unix timestamp in seconds |\
| limit | query | integer(int32) | false | Maximum number of items returned in the list, default value is 100 |\
| offset | query | integer(int32) | false | List offset, starting from 0 |\
| transaction\_type | query | string | false | Order type returned in the list: `withdraw`, `deposit`. Default is `withdraw`. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order ID |\
| » push\_uid | integer(int64) | Initiator User ID |\
| » receive\_uid | integer(int64) | Recipient User ID |\
| » currency | string | Currency name |\
| » amount | string | Transfer amount |\
| » create\_time | integer(int64) | Creation time |\
| » status | string | Withdrawal status:<br>\- CREATING: Creating<br>\- PENDING: Waiting for recipient (Please contact the recipient to accept the transfer on Gate official website)<br>\- CANCELLING: Cancelling<br>\- CANCELLED: Cancelled<br>\- REFUSING: Refusing<br>\- REFUSED: Refused<br>\- RECEIVING: Receiving<br>\- RECEIVED: Success |\
| » message | string | PENDING reason tips |\
| » transaction\_type | string | Order Type |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/wallet/push'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/wallet/push"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": 111,\
    "push_uid": 1132,\
    "receive_uid": 12324,\
    "currency": "BTC",\
    "amount": "1.2",\
    "status": "PENDING",\
    "create_time": 1706670777,\
    "message": "The other party has not completed KYC,There is a security risk in your account, please contact customer service",\
    "transaction_type": "withdraw"\
  }\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#subaccount) SubAccount\
\
Sub-account management\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-a-new-sub-account) Create a new sub-account\
\
`POST /sub_accounts`\
\
_Create a new sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » remark | body | string | false | Note |\
| » login\_name | body | string | true | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | body | string | false | The sub-account's password. (Default: the same as main account's password) |\
| » email | body | string | false | The sub-account's email address. (Default: the same as main account's email address) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts'\
query_param = ''\
body='{"remark":"remark","login_name":"sub_account_for_trades"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts"\
query_param=""\
body_param='{"remark":"remark","login_name":"sub_account_for_trades"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades",\
  "user_id": 10001,\
  "state": 1,\
  "create_time": 168888888\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-sub-accounts) List sub-accounts\
\
`GET /sub_accounts`\
\
_List sub-accounts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Enter `0` to list all types of sub-accounts (currently supporting cross-margin sub-accounts and regular sub-accounts). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-4) Detailed descriptions\
\
**type**: Enter `0` to list all types of sub-accounts (currently supporting cross-margin sub-accounts and regular sub-accounts).\
Enter `1` to query regular sub-accounts only. If no parameter is passed, only regular sub-accounts will be queried by default.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "remark": "remark",\
    "login_name": "sub_account_for_trades",\
    "user_id": 10001,\
    "state": 1,\
    "create_time": 168888888\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-sub-account) Get sub-account\
\
`GET /sub_accounts/{user_id}`\
\
_Get sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » remark | string | Note |\
| » login\_name | string | Sub-account login name: Only letters, numbers and underscores are supported, cannot contain other invalid characters |\
| » password | string | The sub-account's password. (Default: the same as main account's password) |\
| » email | string | The sub-account's email address. (Default: the same as main account's email address) |\
| » state | integer(int32) | Sub-account status: 1-normal, 2-locked |\
| » type | integer(int32) | Sub-account type: 1-Regular sub-account, 3-Cross margin sub-account |\
| » user\_id | integer(int64) | Sub-account user ID |\
| » create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "remark": "remark",\
  "login_name": "sub_account_for_trades",\
  "user_id": 10001,\
  "state": 1,\
  "create_time": 168888888\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-new-sub-account-api-key-pair) Create new sub-account API key pair\
\
`POST /sub_accounts/{user_id}/keys`\
\
_Create new sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
| body | body | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) | true | none |\
| » mode | body | integer(int32) | false | Mode: 1 - classic 2 - portfolio account |\
| » name | body | string | false | API Key Name |\
| » perms | body | array | false | none |\
| »» name | body | string | false | Permission function name (no value will be cleared) |\
| »» read\_only | body | boolean | false | Read Only |\
| » ip\_whitelist | body | array | false | IP whitelist (list will be cleared if no value is passed) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-5) Detailed descriptions\
\
**»» name**: Permission function name (no value will be cleared)\
\
- wallet: wallet\
- spot: spot/margin\
- futures: perpetual contract\
- delivery: delivery contract\
- earn: earn\
- custody: custody\
- options: options\
- account: account information\
- loan: lending\
- margin: margin\
- unified: unified account\
- copy: copy trading\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Created successfully | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys'\
query_param = ''\
body='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/keys"\
query_param=""\
body_param='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "mode": 1,\
  "name": "spot",\
  "perms": [\
    {\
      "read_only": false,\
      "name": "options"\
    },\
    {\
      "read_only": false,\
      "name": "spot"\
    },\
    {\
      "read_only": false,\
      "name": "delivery"\
    },\
    {\
      "read_only": false,\
      "name": "wallet"\
    },\
    {\
      "read_only": false,\
      "name": "futures"\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "state": 1,\
  "name": "spot",\
  "user_id": 100000,\
  "perms": [\
    {\
      "name": "options",\
      "read_only": false\
    },\
    {\
      "name": "spot",\
      "read_only": false\
    },\
    {\
      "name": "delivery",\
      "read_only": false\
    },\
    {\
      "name": "wallet",\
      "read_only": false\
    },\
    {\
      "name": "futures",\
      "read_only": false\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ],\
  "mode": 1,\
  "secret": "cddcc6e5e78060e013860bdbe5e737830b96821c027664586fb38b411808f4fd",\
  "key": "eb8815bf99d7bb5f8ad6497bdc4774a8",\
  "created_at": 1663683330,\
  "updated_at": 1663683330\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-api-key-pairs-of-the-sub-account) List all API key pairs of the sub-account\
\
`GET /sub_accounts/{user_id}/keys`\
\
_List all API key pairs of the sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0/keys"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "state": 1,\
    "name": "spot",\
    "user_id": 1000000,\
    "perms": [\
      {\
        "name": "futures",\
        "read_only": false\
      },\
      {\
        "name": "wallet",\
        "read_only": false\
      },\
      {\
        "name": "delivery",\
        "read_only": false\
      },\
      {\
        "name": "options",\
        "read_only": false\
      },\
      {\
        "name": "spot",\
        "read_only": false\
      }\
    ],\
    "mode": 1,\
    "ip_whitelist": [\
      "127.0.0.1",\
      "127.0.0.2"\
    ],\
    "key": "75c3264105b74693d8cb5c7f1a8e2420",\
    "created_at": 1663642892,\
    "last_access": 1663642892,\
    "update_at": 1663642892\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-sub-account-api-key-pair) Update sub-account API key pair\
\
`PUT /sub_accounts/{user_id}/keys/{key}`\
\
_Update sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
| body | body | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) | true | none |\
| » mode | body | integer(int32) | false | Mode: 1 - classic 2 - portfolio account |\
| » name | body | string | false | API Key Name |\
| » perms | body | array | false | none |\
| »» name | body | string | false | Permission function name (no value will be cleared) |\
| »» read\_only | body | boolean | false | Read Only |\
| » ip\_whitelist | body | array | false | IP whitelist (list will be cleared if no value is passed) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-6) Detailed descriptions\
\
**»» name**: Permission function name (no value will be cleared)\
\
- wallet: wallet\
- spot: spot/margin\
- futures: perpetual contract\
- delivery: delivery contract\
- earn: earn\
- custody: custody\
- options: options\
- account: account information\
- loan: lending\
- margin: margin\
- unified: unified account\
- copy: copy trading\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Updated successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
body='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param='{"mode":1,"name":"spot","perms":[{"read_only":false,"name":"options"},{"read_only":false,"name":"spot"},{"read_only":false,"name":"delivery"},{"read_only":false,"name":"wallet"},{"read_only":false,"name":"futures"}],"ip_whitelist":["127.0.0.1","127.0.0.2"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "mode": 1,\
  "name": "spot",\
  "perms": [\
    {\
      "read_only": false,\
      "name": "options"\
    },\
    {\
      "read_only": false,\
      "name": "spot"\
    },\
    {\
      "read_only": false,\
      "name": "delivery"\
    },\
    {\
      "read_only": false,\
      "name": "wallet"\
    },\
    {\
      "read_only": false,\
      "name": "futures"\
    }\
  ],\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#delete-sub-account-api-key-pair) Delete sub-account API key pair\
\
`DELETE /sub_accounts/{user_id}/keys/{key}`\
\
_Delete sub-account API key pair_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Deleted successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specific-api-key-pair-of-the-sub-account) Get specific API key pair of the sub-account\
\
`GET /sub_accounts/{user_id}/keys/{key}`\
\
_Get specific API key pair of the sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer | true | Sub-account user ID |\
| key | path | string | true | Sub-account API key |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | [SubAccountKey](https://www.gate.com/docs/developers/apiv4/en/#schemasubaccountkey) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/keys/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/0/keys/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "state": 1,\
  "name": "spot",\
  "user_id": 1000000,\
  "perms": [\
    {\
      "name": "futures",\
      "read_only": false\
    },\
    {\
      "name": "wallet",\
      "read_only": false\
    },\
    {\
      "name": "delivery",\
      "read_only": false\
    },\
    {\
      "name": "options",\
      "read_only": false\
    },\
    {\
      "name": "spot",\
      "read_only": false\
    }\
  ],\
  "mode": 1,\
  "ip_whitelist": [\
    "127.0.0.1",\
    "127.0.0.2"\
  ],\
  "key": "75c3264105b74693d8cb5c7f1a8e2420",\
  "created_at": 1663642892,\
  "last_access": 1663642892,\
  "update_at": 1663642892\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#lock-sub-account) Lock sub-account\
\
`POST /sub_accounts/{user_id}/lock`\
\
_Lock sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Locked successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/lock'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/lock"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#unlock-sub-account) Unlock sub-account\
\
`POST /sub_accounts/{user_id}/unlock`\
\
_Unlock sub-account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | path | integer(int64) | true | Sub-account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Unlocked successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/0/unlock'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/sub_accounts/0/unlock"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-sub-account-mode) Get sub-account mode\
\
`GET /sub_accounts/unified_mode`\
\
_Get sub-account mode_\
\
Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Multi-currency margin mode\
- `portfolio`: Portfolio margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » is\_unified | boolean | Whether it is a unified account |\
| » mode | string | Unified account mode:<br>\- `classic`: Classic account mode<br>\- `multi_currency`: Multi-currency margin mode<br>\- `portfolio`: Portfolio margin mode |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/sub_accounts/unified_mode'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/sub_accounts/unified_mode"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "user_id": 110285555,\
    "is_unified": true,\
    "mode": "multi_currency"\
  }\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#unified) Unified\
\
Unified account\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-unified-account-information) Get unified account information\
\
`GET /unified/accounts`\
\
_Get unified account information_\
\
The assets of each currency in the account will be adjusted according to their liquidity, defined by corresponding adjustment coefficients, and then uniformly converted to USD to calculate the total asset value and position value of the account.\
\
For specific formulas, please refer to [Margin Formula](https://www.gate.com/docs/developers/apiv4/en/#margin-formula)\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| sub\_uid | query | string | false | Sub account user ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » refresh\_time | integer(int64) | Last refresh time |\
| » locked | boolean | Whether the account is locked, valid in cross-currency margin/combined margin mode, false in other modes such as single-currency margin mode |\
| » balances | object | none |\
| »» UnifiedBalance | object | none |\
| »»» available | string | Available balance, valid in single currency margin/cross-currency margin/combined margin mode, calculation varies by mode |\
| »»» freeze | string | Locked balance, valid in single currency margin/cross-currency margin/combined margin mode |\
| »»» borrowed | string | Borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» negative\_liab | string | Negative balance borrowing, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» futures\_pos\_liab | string | Contract opening position borrowing currency (abandoned, to be offline field) |\
| »»» equity | string | Equity, valid in single currency margin/cross currency margin/combined margin mode |\
| »»» total\_freeze | string | Total frozen (deprecated, to be removed) |\
| »»» total\_liab | string | Total borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »»» spot\_in\_use | string | The amount of spot hedging is valid in the combined margin mode, and is 0 in other margin modes such as single currency and cross-currency margin modes |\
| »»» funding | string | Uniloan financial management amount, effective when turned on as a unified account margin switch |\
| »»» funding\_version | string | Funding version |\
| »»» cross\_balance | string | Full margin balance is valid in single currency margin mode, and is 0 in other modes such as cross currency margin/combined margin mode |\
| »»» iso\_balance | string | Isolated margin balance is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» im | string | Full-position initial margin is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» mm | string | Cross margin maintenance margin, valid in single-currency margin mode, 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» imr | string | Full-position initial margin rate is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» mmr | string | Full-position maintenance margin rate is valid in single-currency margin mode and is 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» margin\_balance | string | Full margin balance is valid in single currency margin mode and is 0 in other modes such as cross currency margin/combined margin mode |\
| »»» available\_margin | string | Cross margin available balance, valid in single currency margin mode, 0 in other modes such as cross-currency margin/combined margin mode |\
| »»» enabled\_collateral | boolean | Currency enabled as margin: true - Enabled, false - Disabled |\
| »» total | string | Total account assets converted to USD, i.e. the sum of `(available + freeze) * price` in all currencies (deprecated, to be removed, replaced by unified\_account\_total) |\
| »» borrowed | string | Total borrowed amount converted to USD, i.e. the sum of `borrowed * price` of all currencies (excluding point cards), valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_initial\_margin | string | Total initial margin, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_margin\_balance | string | Total margin balance, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_maintenance\_margin | string | Total maintenance margin is valid in cross-currency margin/combined margin mode, and is 0 in other modes such as single-currency margin mode |\
| »» total\_initial\_margin\_rate | string | Total initial margin rate, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_maintenance\_margin\_rate | string | Total maintenance margin rate, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» total\_available\_margin | string | Available margin amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» unified\_account\_total | string | Total unified account assets, valid in single currency margin/cross-currency margin/combined margin mode |\
| »» unified\_account\_total\_liab | string | Total unified account borrowed amount, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» unified\_account\_total\_equity | string | Total unified account equity, valid in single currency margin/cross-currency margin/combined margin mode |\
| »» leverage | string | Actual leverage ratio, valid in cross-currency margin/combined margin mode |\
| »» spot\_order\_loss | string | Total pending order loss, in USDT, valid in cross-currency margin/combined margin mode, 0 in other modes such as single-currency margin mode |\
| »» spot\_hedge | boolean | Spot hedging status: true - enabled, false - disabled |\
| »» use\_funding | boolean | Whether to use Earn funds as margin |\
| »» is\_all\_collateral | boolean | Whether all currencies are used as margin: true - all currencies as margin, false - no |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 10001,\
  "locked": false,\
  "balances": {\
    "ETH": {\
      "available": "0",\
      "freeze": "0",\
      "borrowed": "0.075393666654",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "1016.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "1.111"\
    },\
    "POINT": {\
      "available": "9999999999.017023138734",\
      "freeze": "0",\
      "borrowed": "0",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "12016.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "12"\
    },\
    "USDT": {\
      "available": "0.00000062023",\
      "freeze": "0",\
      "borrowed": "0",\
      "negative_liab": "0",\
      "futures_pos_liab": "0",\
      "equity": "16.1",\
      "total_freeze": "0",\
      "total_liab": "0",\
      "spot_in_use": "12"\
    }\
  },\
  "total": "230.94621713",\
  "borrowed": "161.66395521",\
  "total_initial_margin": "1025.0524665088",\
  "total_margin_balance": "3382495.944473949183",\
  "total_maintenance_margin": "205.01049330176",\
  "total_initial_margin_rate": "3299.827135672679",\
  "total_maintenance_margin_rate": "16499.135678363399",\
  "total_available_margin": "3381470.892007440383",\
  "unified_account_total": "3381470.892007440383",\
  "unified_account_total_liab": "0",\
  "unified_account_total_equity": "100016.1",\
  "leverage": "2",\
  "spot_order_loss": "12",\
  "spot_hedge": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-borrowable-amount-for-unified-account) Query maximum borrowable amount for unified account\
\
`GET /unified/borrowable`\
\
_Query maximum borrowable amount for unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UnifiedBorrowable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » amount | string | Max borrowable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/borrowable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/borrowable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "ETH",\
  "amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-transferable-amount-for-unified-account) Query maximum transferable amount for unified account\
\
`GET /unified/transferable`\
\
_Query maximum transferable amount for unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UnifiedTransferable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » amount | string | Maximum transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/transferable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/transferable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "currency": "ETH",\
  "amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-maximum-transferable-amount-for-unified-accounts-each-currency-shows-the-maximum-value-after-user-withdrawal-the-transferable-amount-for-all-currencies-will-change) Batch query maximum transferable amount for unified accounts. Each currency shows the maximum value. After user withdrawal, the transferable amount for all currencies will change\
\
`GET /unified/transferables`\
\
_Batch query maximum transferable amount for unified accounts. Each currency shows the maximum value. After user withdrawal, the transferable amount for all currencies will change_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | string | true | Specify the currency name to query in batches, and support up to 100 pass parameters at a time |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » TransferablesResult | object | Batch query unified account maximum transferable results |\
| »» currency | string | Currency detail |\
| »» amount | string | Maximum transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/transferables'\
query_param = 'currencies=BTC,ETH'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/transferables"\
query_param="currencies=BTC,ETH"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "BTC",\
    "amount": "123456"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-unified-account-maximum-borrowable-amount) Batch query unified account maximum borrowable amount\
\
`GET /unified/batch_borrowable`\
\
_Batch query unified account maximum borrowable amount_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency names for querying in an array, separated by commas, maximum 10 currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » UnifiedBorrowable | object | Batch query unified account maximum borrowable results |\
| »» currency | string | Currency detail |\
| »» amount | string | Maximum borrowable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/batch_borrowable'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/batch_borrowable"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "BTC",\
    "amount": "123456"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#borrow-or-repay) Borrow or repay\
\
`POST /unified/loans`\
\
_Borrow or repay_\
\
When borrowing, ensure the borrowed amount is not below the minimum borrowing threshold for the specific cryptocurrency and does not exceed the maximum borrowing limit set by the platform and user.\
\
Loan interest will be automatically deducted from the account at regular intervals. Users are responsible for managing repayment of borrowed amounts.\
\
For repayment, use `repaid_all=true` to repay all available amounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency |\
| » type | body | string | true | Type: `borrow` \- borrow, `repay` \- repay |\
| » amount | body | string | true | Borrow or repayment amount |\
| » repaid\_all | body | boolean | false | Full repayment, only used for repayment operations. When set to `true`, overrides `amount` and directly repays the full amount |\
| » text | body | string | false | User defined custom ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-4) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | borrow |\
| » type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Unified account borrowing and repayment response result_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » tran\_id | integer(int64) | Transaction ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loans'\
query_param = ''\
body='{"currency":"BTC","amount":"0.1","type":"borrow","repaid_all":false,"text":"t-test"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/loans"\
query_param=""\
body_param='{"currency":"BTC","amount":"0.1","type":"borrow","repaid_all":false,"text":"t-test"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
  "currency": "BTC",\
  "amount": "0.1",\
  "type": "borrow",\
  "repaid_all": false,\
  "text": "t-test"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "tran_id": 9527\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loans) Query loans\
\
`GET /unified/loans`\
\
_Query loans_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| type | query | string | false | Loan type: platform borrowing - platform, margin borrowing - margin |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Borrowing\] |\
| » _None_ | object | Borrowing |\
| »» currency | string | Currency |\
| »» currency\_pair | string | Trading pair |\
| »» amount | string | Amount to Repay |\
| »» type | string | Loan type: platform borrowing - platform, margin borrowing - margin |\
| »» create\_time | integer(int64) | Created time |\
| »» update\_time | integer(int64) | Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loans'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/loans"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "currency": "USDT",\
    "currency_pari": "GT_USDT",\
    "amount": "1",\
    "type": "margin",\
    "change_time": 1673247054000,\
    "create_time": 1673247054000\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loan-records) Query loan records\
\
`GET /unified/loan_records`\
\
_Query loan records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Loan record type: borrow - borrowing, repay - repayment |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Borrowing Records |\
| »» id | integer(int64) | id |\
| »» type | string | Type: `borrow` \- borrow, `repay` \- repay |\
| »» repayment\_type | string | Repayment type: none - No repayment type, manual\_repay - Manual repayment, auto\_repay - Automatic repayment, cancel\_auto\_repay - Automatic repayment after order cancellation, different\_currencies\_repayment - Cross-currency repayment |\
| »» borrow\_type | string | Borrowing type, returned when querying loan records: manual\_borrow - Manual borrowing, auto\_borrow - Automatic borrowing |\
| »» currency\_pair | string | Trading pair |\
| »» currency | string | Currency |\
| »» amount | string | Borrow or repayment amount |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loan_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/loan_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "id": 16442,\
    "type": "borrow",\
    "margin_mode": "cross",\
    "currency_pair": "AE_USDT",\
    "currency": "USDT",\
    "amount": "1000",\
    "create_time": 1673247054000,\
    "repayment_type": "auto_repay"\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-interest-deduction-records) Query interest deduction records\
\
`GET /unified/interest_records`\
\
_Query interest deduction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| type | query | string | false | Loan type: platform borrowing - platform, margin borrowing - margin. Defaults to margin if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Interest Deduction Record\] |\
| » _None_ | object | Interest Deduction Record |\
| »» currency | string | Currency name |\
| »» currency\_pair | string | Trading pair |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» type | string | Type: platform - Platform borrowing, margin - Margin borrowing |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
  {\
    "status": 1,\
    "currency_pair": "BTC_USDT",\
    "currency": "USDT",\
    "actual_rate": "0.00000236",\
    "interest": "0.00006136",\
    "type": "platform",\
    "create_time": 1673247054000\
  }\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-risk-unit-details) Get user risk unit details\
\
`GET /unified/risk_units`\
\
_Get user risk unit details_\
\
Get user risk unit details, only valid in portfolio margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » spot\_hedge | boolean | Spot hedging status: true - enabled, false - disabled |\
| » risk\_units | array | Risk unit |\
| »» RiskUnits | object | none |\
| »»» symbol | string | Risk unit flag |\
| »»» spot\_in\_use | string | Spot hedging occupied amount |\
| »»» maintain\_margin | string | Maintenance margin for risk unit |\
| »»» initial\_margin | string | Initial margin for risk unit |\
| »»» delta | string | Total Delta of risk unit |\
| »»» gamma | string | Total Gamma of risk unit |\
| »»» theta | string | Total Theta of risk unit |\
| »»» vega | string | Total Vega of risk unit |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/risk_units'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/risk_units"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
  "user_id": 0,\
  "spot_hedge": true,\
  "risk_units": [\
    {\
      "symbol": "BTC",\
      "spot_in_use": "-13500.000001223",\
      "maintain_margin": "2334.002",\
      "initial_margin": "2334.002",\
      "delta": "0.22",\
      "gamma": "0.42",\
      "theta": "0.29",\
      "vega": "0.22"\
    }\
  ]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-unified-account-mode) Set unified account mode\
\
`PUT /unified/unified_mode`\
\
_Set unified account mode_\
\
Each account mode switch only requires passing the corresponding account mode parameter, and also supports turning on or off the configuration switches under the corresponding account mode during the switch.\
\
- When enabling the classic account mode, mode=classic\
\
```\
 PUT /unified/unified_mode\
 {\
 "mode": "classic"\
 }\
\
```\
\
- When enabling the cross-currency margin "multi\_currency",\
"settings": {\
"usdt\_futures": true\
}\
}\
\
```\
- When enabling the portfolio margin mode, mode=portfolio\
\
```\
\
PUT /unified/unified\_mode\
{\
"mode": "portfolio",\
"settings": {\
"spot\_hedge": true\
}\
}\
\
```\
- When enabling the single-currency margin mode, mode=single_currency\
\
```\
\
PUT /unified/unified\_mode\
{\
"mode": "single\_currency"\
}\
\
````\
\
<Example>\
\
> Body parameter\
\
```json\
{\
"mode": "portfolio",\
"settings": {\
    "spot_hedge": true,\
    "usdt_futures": true,\
    "options": true\
}\
}\
\
````\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » mode | body | string | true | Unified account mode: |\
| » settings | body | object | false | none |\
| »» usdt\_futures | body | boolean | false | USDT futures switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
| »» spot\_hedge | body | boolean | false | Spot hedging switch |\
| »» use\_funding | body | boolean | false | Earn switch, when mode is cross-currency margin mode, whether to use Earn funds as margin |\
| »» options | body | boolean | false | Options switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-7) Detailed descriptions\
\
**» mode**: Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Cross-currency margin mode\
- `portfolio`: Portfolio margin mode\
- `single_currency`: Single-currency margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/unified_mode'\
query_param = ''\
body='{"mode":"portfolio","settings":{"spot_hedge":true,"usdt_futures":true,"options":true}}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/unified/unified_mode"\
query_param=""\
body_param='{"mode":"portfolio","settings":{"spot_hedge":true,"usdt_futures":true,"options":true}}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-mode-of-the-unified-account) Query mode of the unified account\
\
`GET /unified/unified_mode`\
\
_Query mode of the unified account_\
\
Unified account mode:\
\
- `classic`: Classic account mode\
- `multi_currency`: Cross-currency margin mode\
- `portfolio`: Portfolio margin mode\
- `single_currency`: Single-currency margin mode\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » mode | string | Unified account mode: <br>\- `classic`: Classic account mode<br>\- `multi_currency`: Cross-currency margin mode<br>\- `portfolio`: Portfolio margin mode<br>\- `single_currency`: Single-currency margin mode |\
| » settings | object | none |\
| »» usdt\_futures | boolean | USDT futures switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
| »» spot\_hedge | boolean | Spot hedging switch |\
| »» use\_funding | boolean | Earn switch, when mode is cross-currency margin mode, whether to use Earn funds as margin |\
| »» options | boolean | Options switch. In cross-currency margin mode, can only be enabled and cannot be disabled |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/unified_mode'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/unified_mode"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"mode": "portfolio",\
"settings": {\
    "spot_hedge": true,\
    "usdt_futures": true,\
    "options": true\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-estimated-interest-rate) Query unified account estimated interest rate\
\
`GET /unified/estimate_rate`\
\
_Query unified account estimated interest rate_\
\
Interest rates fluctuate hourly based on lending depth, so exact rates cannot be provided. When a currency is not supported, the interest rate returned will be an empty string\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency names for querying in an array, separated by commas, maximum 10 currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Estimate current hourly lending rates, returned by currency_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/estimate_rate'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/estimate_rate"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC": "0.000002",\
"GT": "0.000001",\
"ETH": ""\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-tiered) Query unified account tiered\
\
`GET /unified/currency_discount_tiers`\
\
_Query unified account tiered_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Unified account tiered discount |\
| »» currency | string | Currency name |\
| »» discount\_tiers | array | Tiered discount |\
| »»» tier | string | Tier |\
| »»» discount | string | Discount |\
| »»» lower\_limit | string | Lower limit |\
| »»» upper\_limit | string | Upper limit, + indicates positive infinity |\
| »»» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/currency_discount_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/currency_discount_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
[\
    {\
      "currency": "USDT",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "1",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "USDC",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "1",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "10000000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.98",\
          "lower_limit": "10000000",\
          "leverage": "10",\
          "upper_limit": "15000000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.95",\
          "lower_limit": "15000000",\
          "leverage": "10",\
          "upper_limit": "20000000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.925",\
          "lower_limit": "20000000",\
          "leverage": "10",\
          "upper_limit": "50000000"\
        },\
        {\
          "tier": "5",\
          "discount": "0.9",\
          "lower_limit": "50000000",\
          "leverage": "10",\
          "upper_limit": "100000000"\
        },\
        {\
          "tier": "6",\
          "discount": "0",\
          "lower_limit": "100000000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "BTC",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "0.98",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "1000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.95",\
          "lower_limit": "1000",\
          "leverage": "10",\
          "upper_limit": "10000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.9",\
          "lower_limit": "10000",\
          "leverage": "10",\
          "upper_limit": "50000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.85",\
          "lower_limit": "50000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    },\
    {\
      "currency": "ETH",\
      "discount_tiers": [\
        {\
          "tier": "1",\
          "discount": "0.98",\
          "lower_limit": "0",\
          "leverage": "10",\
          "upper_limit": "1000"\
        },\
        {\
          "tier": "2",\
          "discount": "0.95",\
          "lower_limit": "1000",\
          "leverage": "10",\
          "upper_limit": "10000"\
        },\
        {\
          "tier": "3",\
          "discount": "0.9",\
          "lower_limit": "10000",\
          "leverage": "10",\
          "upper_limit": "50000"\
        },\
        {\
          "tier": "4",\
          "discount": "0.85",\
          "lower_limit": "50000",\
          "leverage": "10",\
          "upper_limit": "+"\
        }\
      ]\
    }\
]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-unified-account-tiered-loan-margin) Query unified account tiered loan margin\
\
`GET /unified/loan_margin_tiers`\
\
_Query unified account tiered loan margin_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Unified account borrowing margin tiers |\
| »» currency | string | Currency name |\
| »» margin\_tiers | array | Tiered margin |\
| »»» MarginTiers | object | none |\
| »»»» tier | string | Tier |\
| »»»» margin\_rate | string | Discount |\
| »»»» lower\_limit | string | Lower limit |\
| »»»» upper\_limit | string | Upper limit, "" indicates greater than (the last tier) |\
| »»»» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/loan_margin_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/loan_margin_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "margin_tiers": [\
      {\
        "tier": "1",\
        "margin_rate": "0.02",\
        "lower_limit": "200000",\
        "upper_limit": "400000",\
        "leverage": "3"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#portfolio-margin-calculator) Portfolio margin calculator\
\
`POST /unified/portfolio_calculator`\
\
_Portfolio margin calculator_\
\
Portfolio Margin Calculator\
\
When inputting simulated position portfolios, each position includes the position name and quantity held, supporting markets within the range of BTC and ETH perpetual contracts, options, and spot markets.\
When inputting simulated orders, each order includes the market identifier, order price, and order quantity, supporting markets within the range of BTC and ETH perpetual contracts, options, and spot markets. Market orders are not included.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » spot\_balances | body | array | false | Spot |\
| »» _None_ | body | object | false | Spot |\
| »»» currency | body | string | true | Currency name |\
| »»» equity | body | string | true | Currency equity, where equity = balance - borrowed, represents the net delta exposure of your spot positions, which can be negative. Currently only supports BTC and ETH |\
| »» spot\_orders | body | array | false | Spot orders |\
| »»» _None_ | body | object | false | Spot orders |\
| »»»» currency\_pairs | body | string | true | Market |\
| »»»» order\_price | body | string | true | Price |\
| »»»» count | body | string | false | Initial order quantity for spot trading pairs, not involved in actual calculation. Currently only supports BTC and ETH Currently only supports three currencies: BTC, ETH |\
| »»»» left | body | string | true | Unfilled quantity, involved in actual calculation |\
| »»»» type | body | string | true | Order type, sell - sell order, buy - buy order |\
| »»» futures\_positions | body | array | false | Futures positions |\
| »»»» _None_ | body | object | false | Futures positions |\
| »»»»» contract | body | string | true | Futures name, currently only supports USDT perpetual contracts for BTC and ETH |\
| »»»»» size | body | string | true | Position size, measured in contract quantity |\
| »»»» futures\_orders | body | array | false | Futures order |\
| »»»»» _None_ | body | object | false | Futures order |\
| »»»»»» contract | body | string | true | Futures name, currently only supports USDT perpetual contracts for BTC and ETH |\
| »»»»»» size | body | string | true | Contract quantity, representing the initial order quantity, not involved in actual settlement |\
| »»»»»» left | body | string | true | Unfilled contract quantity, involved in actual calculation |\
| »»»»» options\_positions | body | array | false | Options positions |\
| »»»»»» _None_ | body | object | false | Options positions |\
| »»»»»»» options\_name | body | string | true | Option name, currently only supports USDT options for BTC and ETH |\
| »»»»»»» size | body | string | true | Position size, measured in contract quantity |\
| »»»»»» options\_orders | body | array | false | Option orders |\
| »»»»»»» _None_ | body | object | false | Option orders |\
| »»»»»»»» options\_name | body | string | true | Option name, currently only supports USDT options for BTC and ETH |\
| »»»»»»»» size | body | string | true | Initial order quantity, not involved in actual calculation |\
| »»»»»»»» left | body | string | true | Unfilled contract quantity, involved in actual calculation |\
| »»»»»»» spot\_hedge | body | boolean | false | Whether to enable spot hedging |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Portfolio margin calculator output_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » maintain\_margin\_total | string | Total maintenance margin, including only portfolio margin calculation results for positions in risk units, excluding borrowing margin. If borrowing exists, conventional borrowing margin requirements will still apply |\
| » initial\_margin\_total | string | Total initial margin, calculated as the maximum of the following three combinations: position, position + positive delta orders, position + negative delta orders |\
| » calculate\_time | integer(int64) | Calculation time |\
| » risk\_unit | array | Risk unit |\
| »» _None_ | object | Risk unit |\
| »»» symbol | string | Risk unit name |\
| »»» spot\_in\_use | string | Spot hedge usage |\
| »»» maintain\_margin | string | Maintenance margin |\
| »»» initial\_margin | string | Initial margin |\
| »»» margin\_result | array | Margin result |\
| »»»» _None_ | object | Margin result |\
| »»»»» type | string | Position combination type<br>`original_position` \- Original position<br>`long_delta_original_position` \- Positive delta + Original position<br>`short_delta_original_position` \- Negative delta + Original position |\
| »»»»» profit\_loss\_ranges | array | Results of 33 stress scenarios for MR1 |\
| »»»»»» _None_ | object | Profit and loss range |\
| »»»»»»» price\_percentage | string | Percentage change in price |\
| »»»»»»» implied\_volatility\_percentage | string | Percentage change in implied volatility |\
| »»»»»»» profit\_loss | string | PnL |\
| »»»»»» max\_loss | object | Profit and loss range |\
| »»»»»»» price\_percentage | string | Percentage change in price |\
| »»»»»»» implied\_volatility\_percentage | string | Percentage change in implied volatility |\
| »»»»»»» profit\_loss | string | PnL |\
| »»»»»» mr1 | string | Stress testing |\
| »»»»»» mr2 | string | Basis spread risk |\
| »»»»»» mr3 | string | Volatility spread risk |\
| »»»»»» mr4 | string | Option short risk |\
| »»»»» delta | string | Total Delta of risk unit |\
| »»»»» gamma | string | Total Gamma of risk unit |\
| »»»»» theta | string | Total Theta of risk unit |\
| »»»»» vega | string | Total Vega of risk unit |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/portfolio_calculator'\
query_param = ''\
body='{"spot_balances":[{"currency":"BTC","equity":"-1","freeze":"10"}],"spot_orders":[{"currency_pairs":"BTC_USDT","order_price":"344","size":"100","left":"100","type":"sell"}],"futures_positions":[{"contract":"BTC_USDT","size":"100"}],"futures_orders":[{"contract":"BTC_USDT","size":"10","left":"8"}],"options_positions":[{"options_name":"BTC_USDT-20240329-32000-C","size":"10"}],"options_orders":[{"options_name":"BTC_USDT-20240329-32000-C","size":"100","left":"80"}],"spot_hedge":false}'\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
\
curl -X POST https://api.gateio.ws/api/v4/unified/portfolio_calculator \\
  -H 'Content-Type: application/json' \\
  -H 'Accept: application/json'\
\
```\
\
> Body parameter\
\
```\
{\
"spot_balances": [\
    {\
      "currency": "BTC",\
      "equity": "-1",\
      "freeze": "10"\
    }\
],\
"spot_orders": [\
    {\
      "currency_pairs": "BTC_USDT",\
      "order_price": "344",\
      "size": "100",\
      "left": "100",\
      "type": "sell"\
    }\
],\
"futures_positions": [\
    {\
      "contract": "BTC_USDT",\
      "size": "100"\
    }\
],\
"futures_orders": [\
    {\
      "contract": "BTC_USDT",\
      "size": "10",\
      "left": "8"\
    }\
],\
"options_positions": [\
    {\
      "options_name": "BTC_USDT-20240329-32000-C",\
      "size": "10"\
    }\
],\
"options_orders": [\
    {\
      "options_name": "BTC_USDT-20240329-32000-C",\
      "size": "100",\
      "left": "80"\
    }\
],\
"spot_hedge": false\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"maintain_margin_total": "0.000000000000",\
"initial_margin_total": "0.000000000000",\
"calculate_time": "1709014486",\
"risk_unit": [\
    {\
      "symbol": "BTC",\
      "margin_result": [\
        {\
          "type": "original_position",\
          "profit_loss_ranges": [\
            {\
              "price_percentage": "-0.200000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.160000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.120000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.080000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "-0.040000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.000000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.040000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.080000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.120000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.160000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            },\
            {\
              "price_percentage": "0.200000000000",\
              "implied_volatility_percentage": "-0.300000000000",\
              "profit_loss": "0.000000000000"\
            }\
          ],\
          "max_loss": {\
            "price_percentage": "-0.200000000000",\
            "implied_volatility_percentage": "-0.300000000000",\
            "profit_loss": "0.000000000000"\
          },\
          "mr1": "0.000000000000",\
          "mr2": "0.000000000000",\
          "mr3": "0.000000000000",\
          "mr4": "0.000000000000"\
        }\
      ],\
      "maintain_margin": "0.000000000000",\
      "initial_margin": "0.000000000000"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#maximum-and-minimum-currency-leverage-that-can-be-set) Maximum and minimum currency leverage that can be set\
\
`GET /unified/leverage/user_currency_config`\
\
_Maximum and minimum currency leverage that can be set_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » current\_leverage | string | Current leverage ratio |\
| » min\_leverage | string | Minimum adjustable leverage ratio |\
| » max\_leverage | string | Maximum adjustable leverage ratio |\
| » debit | string | Current liabilities |\
| » available\_margin | string | Available Margin |\
| » borrowable | string | Maximum borrowable amount at current leverage |\
| » except\_leverage\_borrowable | string | Maximum borrowable from margin and maximum borrowable from Earn, whichever is smaller |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_config'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/leverage/user_currency_config"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"current_leverage": "2",\
"min_leverage": "0",\
"max_leverage": "0",\
"debit": "0",\
"available_margin": "0",\
"borrowable": "0",\
"except_leverage_borrowable": "0"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-currency-leverage) Get user currency leverage\
\
`GET /unified/leverage/user_currency_setting`\
\
_Get user currency leverage_\
\
Get user currency leverage. If currency is not specified, query all currencies\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Leverage multiplier for borrowing currency\] |\
| » _None_ | object | Leverage multiplier for borrowing currency |\
| »» currency | string | Currency name |\
| »» leverage | string | Multiplier |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_setting'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/unified/leverage/user_currency_setting"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "leverage": "3"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-loan-currency-leverage) Set loan currency leverage\
\
`POST /unified/leverage/user_currency_setting`\
\
_Set loan currency leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency name |\
| » leverage | body | string | true | Multiplier |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/leverage/user_currency_setting'\
query_param = ''\
body='{"currency":"BTC","leverage":"3"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/leverage/user_currency_setting"\
query_param=""\
body_param='{"currency":"BTC","leverage":"3"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "BTC",\
"leverage": "3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-of-loan-currencies-supported-by-unified-account) List of loan currencies supported by unified account\
\
`GET /unified/currencies`\
\
_List of loan currencies supported by unified account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Currency name |\
| » prec | string | Currency precision |\
| » min\_borrow\_amount | string | Minimum borrowable limit, in currency units |\
| » user\_max\_borrow\_amount | string | User's maximum borrowable limit, in USDT |\
| » total\_max\_borrow\_amount | string | Platform's maximum borrowable limit, in USDT |\
| » loan\_status | string | Lending status<br> \- `disable` : Lending prohibited<br> \- `enable` : Lending supported |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC",\
    "prec": "0.000001",\
    "min_borrow_amount": "0.01",\
    "user_max_borrow_amount": "1000000",\
    "total_max_borrow_amount": "1000000",\
    "loan_status": "enable"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-historical-lending-rates) Get historical lending rates\
\
`GET /unified/history_loan_rate`\
\
_Get historical lending rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| tier | query | string | false | VIP level for the floating rate to be queried |\
| currency | query | string | true | Currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » tier | string | VIP level for the floating rate to be retrieved |\
| » tier\_up\_rate | string | Floating rate corresponding to VIP level |\
| » rates | array | Historical interest rate information, one data point per hour, array size determined by page and limit parameters from the API request, sorted by time from recent to distant |\
| »» time | integer(int64) | Hourly timestamp corresponding to this interest rate, in milliseconds |\
| »» rate | string | Historical interest rate for this hour |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/history_loan_rate'\
query_param = 'currency=USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/unified/history_loan_rate?currency=USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "USDT",\
"tier": "1",\
"tier_up_rate": "1.18",\
"rates": [\
    {\
      "time": 1729047616000,\
      "rate": "0.00010287"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-collateral-currency) Set collateral currency\
\
`POST /unified/collateral_currencies`\
\
_Set collateral currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » collateral\_type | body | integer | false | User-set collateral mode: 0(all)-All currencies as collateral, 1(custom)-Custom currencies as collateral. When collateral\_type is 0(all), enable\_list and disable\_list parameters are invalid |\
| » enable\_list | body | array | false | Currency list, where collateral\_type=1(custom) indicates the addition logic |\
| » disable\_list | body | array | false | Disable list, indicating the disable logic |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-5) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » collateral\_type | 0 |\
| » collateral\_type | 1 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Unified account collateral mode settings response_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » is\_success | boolean | Whether the setting was successful |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/unified/collateral_currencies'\
query_param = ''\
body='{"collateral_type":1,"enable_list":["BTC","ETH"],"disable_list":["SOL","GT"]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/unified/collateral_currencies"\
query_param=""\
body_param='{"collateral_type":1,"enable_list":["BTC","ETH"],"disable_list":["SOL","GT"]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_type": 1,\
"enable_list": [\
    "BTC",\
    "ETH"\
],\
"disable_list": [\
    "SOL",\
    "GT"\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"is_success": true\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#isolated-margin) Isolated-Margin\
\
Isolated Margin\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#margin-account-list) Margin account list\
\
`GET /margin/accounts`\
\
_Margin account list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information\] |\
| » _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »» currency\_pair | string | Trading pair |\
| »» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »» leverage | string | User's current market leverage multiplier |\
| »» locked | boolean | Whether the account is locked |\
| »» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »» base | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
| »» quote | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "account_type": "mmr",\
    "leverage": "20",\
    "locked": false,\
    "risk": "1.3318",\
    "mmr": "16.5949188975473644",\
    "base": {\
      "currency": "BTC",\
      "available": "0.047060413211",\
      "locked": "0",\
      "borrowed": "0.047233",\
      "interest": "0"\
    },\
    "quote": {\
      "currency": "USDT",\
      "available": "1234",\
      "locked": "0",\
      "borrowed": "0",\
      "interest": "0"\
    }\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-margin-account-balance-change-history) Query margin account balance change history\
\
`GET /margin/account_book`\
\
_Query margin account balance change history_\
\
Currently only provides transfer history to and from margin accounts. Query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query history for specified currency. If `currency` is specified, `currency_pair` must also be specified. |\
| currency\_pair | query | string | false | Specify margin account currency pair. Used in combination with `currency`. Ignored if `currency` is not specified |\
| type | query | string | false | Query by specified account change type. If not specified, all change types will be included. |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-8) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Balance change record ID |\
| » time | string | Account change timestamp |\
| » time\_ms | integer(int64) | The timestamp of the change (in milliseconds) |\
| » currency | string | Currency changed |\
| » currency\_pair | string | Account trading pair |\
| » change | string | Amount changed. Positive value means transferring in, while negative out |\
| » balance | string | Balance after change |\
| » type | string | Account book type. Please refer to [account book type](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type) for more detail |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "123456",\
    "time": "1547633726",\
    "time_ms": 1547633726123,\
    "currency": "BTC",\
    "currency_pair": "BTC_USDT",\
    "change": "1.03",\
    "balance": "4.59316525194"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#funding-account-list) Funding account list\
\
`GET /margin/funding_accounts`\
\
_Funding account list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » available | string | Available assets to lend, which is identical to spot account `available` |\
| » locked | string | Locked amount. i.e. amount in `open` loans |\
| » lent | string | Outstanding loan amount yet to be repaid |\
| » total\_lent | string | Amount used for lending. total\_lent = lent + locked |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/funding_accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/funding_accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "available": "1.238",\
    "locked": "0",\
    "lent": "3.32",\
    "total_lent": "3.32"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-user-auto-repayment-settings) Update user auto repayment settings\
\
`POST /margin/auto_repay`\
\
_Update user auto repayment settings_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Whether to enable auto repayment: `on` \- enabled, `off` \- disabled |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User's current auto repayment settings | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AutoRepaySetting_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » status | string | Auto repayment status: `on` \- enabled, `off` \- disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-6) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | on |\
| status | off |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/auto_repay'\
query_param = 'status=on'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/auto_repay"\
query_param="status=on"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "on"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-auto-repayment-settings) Query user auto repayment settings\
\
`GET /margin/auto_repay`\
\
_Query user auto repayment settings_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User's current auto repayment settings | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AutoRepaySetting_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » status | string | Auto repayment status: `on` \- enabled, `off` \- disabled |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-7) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | on |\
| status | off |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/auto_repay'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/auto_repay"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "on"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-maximum-transferable-amount-for-isolated-margin) Get maximum transferable amount for isolated margin\
\
`GET /margin/transferable`\
\
_Get maximum transferable amount for isolated margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MarginTransferable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » currency\_pair | string | Trading pair |\
| » amount | string | Max transferable amount |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/transferable'\
query_param = 'currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/transferable"\
query_param="currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "ETH",\
"currency_pair": "ETH_USDT",\
"amount": "10000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-lending-markets) List lending markets\
\
`GET /margin/uni/currency_pairs`\
\
_List lending markets_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Currency pair of the loan\] |\
| » _None_ | object | Currency pair of the loan |\
| »» currency\_pair | string | Trading pair |\
| »» base\_min\_borrow\_amount | string | Minimum borrow amount of base currency |\
| »» quote\_min\_borrow\_amount | string | Minimum borrow amount of quote currency |\
| »» leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/uni/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "AE_USDT",\
    "base_min_borrow_amount": "100",\
    "quote_min_borrow_amount": "100",\
    "leverage": "3"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-lending-market-details) Get lending market details\
\
`GET /margin/uni/currency_pairs/{currency_pair}`\
\
_Get lending market details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | path | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Currency pair of the loan_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » base\_min\_borrow\_amount | string | Minimum borrow amount of base currency |\
| » quote\_min\_borrow\_amount | string | Minimum borrow amount of quote currency |\
| » leverage | string | Position leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/currency_pairs/AE_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/uni/currency_pairs/AE_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency_pair": "AE_USDT",\
"base_min_borrow_amount": "100",\
"quote_min_borrow_amount": "100",\
"leverage": "3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#estimate-interest-rate-for-isolated-margin-currencies) Estimate interest rate for isolated margin currencies\
\
`GET /margin/uni/estimate_rate`\
\
_Estimate interest rate for isolated margin currencies_\
\
Interest rates change hourly based on lending depth, so completely accurate rates cannot be provided.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Array of currency names to query, maximum 10 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Estimate current hourly lending rates, returned by currency_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/estimate_rate'\
query_param = 'currencies=BTC,GT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/estimate_rate"\
query_param="currencies=BTC,GT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC": "0.000002",\
"GT": "0.000001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#borrow-or-repay-2) Borrow or repay\
\
`POST /margin/uni/loans`\
\
_Borrow or repay_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency |\
| » type | body | string | true | Type: `borrow` \- borrow, `repay` \- repay |\
| » amount | body | string | true | Borrow or repayment amount |\
| » repaid\_all | body | boolean | false | Full repayment. For repayment operations only. When `true`, overrides `amount` and repays the full amount |\
| » currency\_pair | body | string | true | Trading pair |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-8) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | borrow |\
| » type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loans'\
query_param = ''\
body='{"currency":"BTC","amount":"0.1","type":"borrow","currency_pair":"BTC_USDT","repaid_all":false}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/uni/loans"\
query_param=""\
body_param='{"currency":"BTC","amount":"0.1","type":"borrow","currency_pair":"BTC_USDT","repaid_all":false}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "BTC",\
"amount": "0.1",\
"type": "borrow",\
"currency_pair": "BTC_USDT",\
"repaid_all": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loans-2) Query loans\
\
`GET /margin/uni/loans`\
\
_Query loans_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Borrowing\] |\
| » _None_ | object | Borrowing |\
| »» currency | string | Currency |\
| »» currency\_pair | string | Trading pair |\
| »» amount | string | Amount to Repay |\
| »» type | string | Loan type: platform borrowing - platform, margin borrowing - margin |\
| »» create\_time | integer(int64) | Created time |\
| »» update\_time | integer(int64) | Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loans'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/loans"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "currency_pari": "GT_USDT",\
    "amount": "1",\
    "type": "margin",\
    "change_time": 1673247054000,\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-loan-records-2) Query loan records\
\
`GET /margin/uni/loan_records`\
\
_Query loan records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Type: `borrow` \- borrow, `repay` \- repay |\
| currency | query | string | false | Query by specified currency name |\
| currency\_pair | query | string | false | Trading pair |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-9) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | borrow |\
| type | repay |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Borrowing Records |\
| »» type | string | Type: `borrow` \- borrow, `repay` \- repay |\
| »» currency\_pair | string | Trading pair |\
| »» currency | string | Currency |\
| »» amount | string | Borrow or repayment amount |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/loan_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/loan_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "borrow",\
    "currency_pair": "AE_USDT",\
    "currency": "USDT",\
    "amount": "1000",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-interest-deduction-records-2) Query interest deduction records\
\
`GET /margin/uni/interest_records`\
\
_Query interest deduction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-9) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Interest Deduction Record\] |\
| » _None_ | object | Interest Deduction Record |\
| »» currency | string | Currency name |\
| »» currency\_pair | string | Trading pair |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» type | string | Type: platform - Platform borrowing, margin - Margin borrowing |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": 1,\
    "currency_pair": "BTC_USDT",\
    "currency": "USDT",\
    "actual_rate": "0.00000236",\
    "interest": "0.00006136",\
    "type": "platform",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-maximum-borrowable-amount-by-currency) Query maximum borrowable amount by currency\
\
`GET /margin/uni/borrowable`\
\
_Query maximum borrowable amount by currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | true | Query by specified currency name |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MaxUniBorrowable_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » currency\_pair | string | Trading pair |\
| » borrowable | string | Maximum borrowable |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/uni/borrowable'\
query_param = 'currency=BTC&currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/uni/borrowable"\
query_param="currency=BTC&currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"borrowable": "1123.344",\
"currency_pair": "AE_USDT"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-own-leverage-lending-tiers-in-current-market) Query user's own leverage lending tiers in current market\
\
`GET /margin/user/loan_margin_tiers`\
\
_Query user's own leverage lending tiers in current market_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Market gradient information\] |\
| » _None_ | object | Market gradient information |\
| »» upper\_limit | string | Maximum loan limit |\
| »» mmr | string | Maintenance margin rate |\
| »» leverage | string | Maximum leverage multiple |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/user/loan_margin_tiers'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/user/loan_margin_tiers"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier_amount": "100",\
    "mmr": "0.9",\
    "leverage": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-current-market-leverage-lending-tiers) Query current market leverage lending tiers\
\
`GET /margin/loan_margin_tiers`\
\
_Query current market leverage lending tiers_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Market gradient information\] |\
| » _None_ | object | Market gradient information |\
| »» upper\_limit | string | Maximum loan limit |\
| »» mmr | string | Maintenance margin rate |\
| »» leverage | string | Maximum leverage multiple |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/loan_margin_tiers'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/margin/loan_margin_tiers?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier_amount": "100",\
    "mmr": "0.9",\
    "leverage": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-user-market-leverage-multiplier) Set user market leverage multiplier\
\
`POST /margin/leverage/user_market_setting`\
\
_Set user market leverage multiplier_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency\_pair | body | string | false | Market |\
| » leverage | body | string | true | Position leverage |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Set successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/leverage/user_market_setting'\
query_param = ''\
body='{"currency_pair":"BTC_USDT","leverage":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/margin/leverage/user_market_setting"\
query_param=""\
body_param='{"currency_pair":"BTC_USDT","leverage":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "BTC_USDT",\
"leverage": "10"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-isolated-margin-account-list) Query user's isolated margin account list\
\
`GET /margin/user/account`\
\
_Query user's isolated margin account list_\
\
Supports querying risk ratio isolated accounts and margin ratio isolated accounts\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information\] |\
| » _None_ | object | Margin account information for a trading pair. `base` corresponds to base currency account information, `quote` corresponds to quote currency account information |\
| »» currency\_pair | string | Trading pair |\
| »» account\_type | string | Account type: risk - risk rate account, mmr - maintenance margin rate account, inactive - market not activated |\
| »» leverage | string | User's current market leverage multiplier |\
| »» locked | boolean | Whether the account is locked |\
| »» risk | string | Current risk rate of the margin account (returned when the account is a risk rate account) |\
| »» mmr | string | Leveraged Account Current Maintenance Margin Rate (returned when the Account is Account) |\
| »» base | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
| »» quote | object | Currency account information |\
| »»» currency | string | Currency name |\
| »»» available | string | Amount available for margin trading, available = margin + borrowed |\
| »»» locked | string | Frozen funds, such as amounts already placed in margin market for order trading |\
| »»» borrowed | string | Borrowed funds |\
| »»» interest | string | Unpaid interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/margin/user/account'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/margin/user/account"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "account_type": "mmr",\
    "leverage": "20",\
    "locked": false,\
    "risk": "1.3318",\
    "mmr": "16.5949188975473644",\
    "base": {\
      "currency": "BTC",\
      "available": "0.047060413211",\
      "locked": "0",\
      "borrowed": "0.047233",\
      "interest": "0"\
    },\
    "quote": {\
      "currency": "USDT",\
      "available": "1234",\
      "locked": "0",\
      "borrowed": "0",\
      "interest": "0"\
    }\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#spot) Spot\
\
Spot trading\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-currency-information) Query all currency information\
\
`GET /spot/currencies`\
\
_Query all currency information_\
\
When a currency corresponds to multiple chains, you can query the information of multiple chains through the `chains` field, such as the charging and recharge status, identification, etc. of the chain\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » currency | string | Currency symbol |\
| » name | string | Currency name |\
| » delisted | boolean | Whether currency is de-listed |\
| » withdraw\_disabled | boolean | Whether withdrawal is suspended (deprecated) |\
| » withdraw\_delayed | boolean | Whether withdrawal has delay (deprecated) |\
| » deposit\_disabled | boolean | Whether deposit is suspended (deprecated) |\
| » trade\_disabled | boolean | Whether currency's trading is disabled |\
| » fixed\_rate | string | Fixed fee rate. Only for fixed rate currencies, not valid for normal currencies |\
| » chain | string | The main chain corresponding to the coin |\
| » is\_private | boolean | Is it a privacy currency? |\
| » chains | array | All links corresponding to coins |\
| »» SpotCurrencyChain | object | none |\
| »»» name | string | Blockchain name |\
| »»» addr | string | token address |\
| »»» withdraw\_disabled | boolean | Whether currency's withdrawal is disabled |\
| »»» withdraw\_delayed | boolean | Whether currency's withdrawal is delayed |\
| »»» deposit\_disabled | boolean | Whether currency's deposit is disabled |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "GT",\
    "name": "GateToken",\
    "delisted": false,\
    "withdraw_disabled": false,\
    "withdraw_delayed": false,\
    "deposit_disabled": false,\
    "trade_disabled": false,\
    "chain": "GT",\
    "chains": [\
      {\
        "name": "GT",\
        "addr": "",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false\
      },\
      {\
        "name": "ETH",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false,\
        "addr": "0xE66747a101bFF2dBA3697199DCcE5b743b454759"\
      },\
      {\
        "name": "GTEVM",\
        "withdraw_disabled": false,\
        "withdraw_delayed": false,\
        "deposit_disabled": false,\
        "addr": ""\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-currency-information) Query single currency information\
\
`GET /spot/currencies/{currency}`\
\
_Query single currency information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency symbol |\
| » name | string | Currency name |\
| » delisted | boolean | Whether currency is de-listed |\
| » withdraw\_disabled | boolean | Whether withdrawal is suspended (deprecated) |\
| » withdraw\_delayed | boolean | Whether withdrawal has delay (deprecated) |\
| » deposit\_disabled | boolean | Whether deposit is suspended (deprecated) |\
| » trade\_disabled | boolean | Whether currency's trading is disabled |\
| » fixed\_rate | string | Fixed fee rate. Only for fixed rate currencies, not valid for normal currencies |\
| » chain | string | The main chain corresponding to the coin |\
| » is\_private | boolean | Is it a privacy currency? |\
| » chains | array | All links corresponding to coins |\
| »» SpotCurrencyChain | object | none |\
| »»» name | string | Blockchain name |\
| »»» addr | string | token address |\
| »»» withdraw\_disabled | boolean | Whether currency's withdrawal is disabled |\
| »»» withdraw\_delayed | boolean | Whether currency's withdrawal is delayed |\
| »»» deposit\_disabled | boolean | Whether currency's deposit is disabled |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currencies/GT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currencies/GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "GT",\
"name": "GateToken",\
"delisted": false,\
"withdraw_disabled": false,\
"withdraw_delayed": false,\
"deposit_disabled": false,\
"trade_disabled": false,\
"chain": "GT",\
"chains": [\
    {\
      "name": "GT",\
      "addr": "",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false\
    },\
    {\
      "name": "ETH",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false,\
      "addr": "0xE66747a101bFF2dBA3697199DCcE5b743b454759"\
    },\
    {\
      "name": "GTEVM",\
      "withdraw_disabled": false,\
      "withdraw_delayed": false,\
      "deposit_disabled": false,\
      "addr": ""\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-supported-currency-pairs) Query all supported currency pairs\
\
`GET /spot/currency_pairs`\
\
_Query all supported currency pairs_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | All currency pairs retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Spot currency pair\] |\
| » _None_ | object | Spot currency pair |\
| »» id | string | Trading pair |\
| »» base | string | Base currency |\
| »» base\_name | string | Base currency name |\
| »» quote | string | Quote currency |\
| »» quote\_name | string | Quote currency name |\
| »» fee | string | Trading fee rate |\
| »» min\_base\_amount | string | Minimum amount of base currency to trade, `null` means no limit |\
| »» min\_quote\_amount | string | Minimum amount of quote currency to trade, `null` means no limit |\
| »» max\_base\_amount | string | Maximum amount of base currency to trade, `null` means no limit |\
| »» max\_quote\_amount | string | Maximum amount of quote currency to trade, `null` means no limit |\
| »» amount\_precision | integer | Amount scale |\
| »» precision | integer | Price scale |\
| »» trade\_status | string | Trading status<br>\- untradable: cannot be traded<br>\- buyable: can be bought<br>\- sellable: can be sold<br>\- tradable: can be bought and sold |\
| »» sell\_start | integer(int64) | Sell start unix timestamp in seconds |\
| »» buy\_start | integer(int64) | Buy start unix timestamp in seconds |\
| »» delisting\_time | integer(int64) | Expected time to remove the shelves, Unix timestamp in seconds |\
| »» type | string | Trading pair type, normal: normal, premarket: pre-market |\
| »» trade\_url | string | Transaction link |\
| »» st\_tag | boolean | Whether the trading pair is in ST risk assessment, false - No, true - Yes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-10) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| trade\_status | untradable |\
| trade\_status | buyable |\
| trade\_status | sellable |\
| trade\_status | tradable |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "ETH_USDT",\
    "base": "ETH",\
    "base_name": "Ethereum",\
    "quote": "USDT",\
    "quote_name": "Tether",\
    "fee": "0.2",\
    "min_base_amount": "0.001",\
    "min_quote_amount": "1.0",\
    "max_base_amount": "10000",\
    "max_quote_amount": "10000000",\
    "amount_precision": 3,\
    "precision": 6,\
    "trade_status": "tradable",\
    "sell_start": 1516378650,\
    "buy_start": 1516378650,\
    "delisting_time": 0,\
    "trade_url": "https://www.gate.io/trade/ETH_USDT",\
    "st_tag": false\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-currency-pair-details) Query single currency pair details\
\
`GET /spot/currency_pairs/{currency_pair}`\
\
_Query single currency pair details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | path | string | true | Trading pair |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot currency pair_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Trading pair |\
| » base | string | Base currency |\
| » base\_name | string | Base currency name |\
| » quote | string | Quote currency |\
| » quote\_name | string | Quote currency name |\
| » fee | string | Trading fee rate |\
| » min\_base\_amount | string | Minimum amount of base currency to trade, `null` means no limit |\
| » min\_quote\_amount | string | Minimum amount of quote currency to trade, `null` means no limit |\
| » max\_base\_amount | string | Maximum amount of base currency to trade, `null` means no limit |\
| » max\_quote\_amount | string | Maximum amount of quote currency to trade, `null` means no limit |\
| » amount\_precision | integer | Amount scale |\
| » precision | integer | Price scale |\
| » trade\_status | string | Trading status<br>\- untradable: cannot be traded<br>\- buyable: can be bought<br>\- sellable: can be sold<br>\- tradable: can be bought and sold |\
| » sell\_start | integer(int64) | Sell start unix timestamp in seconds |\
| » buy\_start | integer(int64) | Buy start unix timestamp in seconds |\
| » delisting\_time | integer(int64) | Expected time to remove the shelves, Unix timestamp in seconds |\
| » type | string | Trading pair type, normal: normal, premarket: pre-market |\
| » trade\_url | string | Transaction link |\
| » st\_tag | boolean | Whether the trading pair is in ST risk assessment, false - No, true - Yes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-11) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| trade\_status | untradable |\
| trade\_status | buyable |\
| trade\_status | sellable |\
| trade\_status | tradable |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/currency_pairs/ETH_BTC'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/currency_pairs/ETH_BTC \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "ETH_USDT",\
"base": "ETH",\
"base_name": "Ethereum",\
"quote": "USDT",\
"quote_name": "Tether",\
"fee": "0.2",\
"min_base_amount": "0.001",\
"min_quote_amount": "1.0",\
"max_base_amount": "10000",\
"max_quote_amount": "10000000",\
"amount_precision": 3,\
"precision": 6,\
"trade_status": "tradable",\
"sell_start": 1516378650,\
"buy_start": 1516378650,\
"delisting_time": 0,\
"trade_url": "https://www.gate.io/trade/ETH_USDT",\
"st_tag": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-currency-pair-ticker-information) Get currency pair ticker information\
\
`GET /spot/tickers`\
\
_Get currency pair ticker information_\
\
If `currency_pair` is specified, only query that currency pair; otherwise return all information\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| timezone | query | string | false | Timezone |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-12) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| timezone | utc0 |\
| timezone | utc8 |\
| timezone | all |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » last | string | Last trading price |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | Latest seller's lowest price quantity; not available for batch queries; available for single queries, empty if no data |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | Latest buyer's highest price quantity; not available for batch queries; available for single queries, empty if no data |\
| » change\_percentage | string | 24h price change percentage (negative for decrease, e.g., -7.45) |\
| » change\_utc0 | string | UTC+0 timezone, 24h price change percentage, negative for decline (e.g., -7.45) |\
| » change\_utc8 | string | UTC+8 timezone, 24h price change percentage, negative for decline (e.g., -7.45) |\
| » base\_volume | string | Base currency trading volume in the last 24h |\
| » quote\_volume | string | Quote currency trading volume in the last 24h |\
| » high\_24h | string | 24h High |\
| » low\_24h | string | 24h Low |\
| » etf\_net\_value | string | ETF net value |\
| » etf\_pre\_net\_value | string\|null | ETF net value at previous rebalancing point |\
| » etf\_pre\_timestamp | integer(int64)\|null | ETF previous rebalancing time |\
| » etf\_leverage | string\|null | ETF current leverage |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC3L_USDT",\
    "last": "2.46140352",\
    "lowest_ask": "2.477",\
    "highest_bid": "2.4606821",\
    "change_percentage": "-8.91",\
    "change_utc0": "-8.91",\
    "change_utc8": "-8.91",\
    "base_volume": "656614.0845820589",\
    "quote_volume": "1602221.66468375534639404191",\
    "high_24h": "2.7431",\
    "low_24h": "1.9863",\
    "etf_net_value": "2.46316141",\
    "etf_pre_net_value": "2.43201848",\
    "etf_pre_timestamp": 1611244800,\
    "etf_leverage": "2.2803019447281203"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-market-depth-information) Get market depth information\
\
`GET /spot/order_book`\
\
_Get market depth information_\
\
Market depth buy orders are sorted by price from high to low, sell orders are sorted from low to high\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Return order book update ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order book ID, which is updated whenever the order book is changed. Valid only when `with_id` is set to `true` |\
| » current | integer(int64) | The timestamp of the response data being generated (in milliseconds) |\
| » update | integer(int64) | The timestamp of when the orderbook last changed (in milliseconds) |\
| » asks | array | Ask Depth |\
| »» _None_ | array | Price and Quantity Pair |\
| » bids | array | Bid Depth |\
| »» _None_ | array | Price and Quantity Pair |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/order_book'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993123,\
"update": 1623898993121,\
"asks": [\
    [\
      "1.52",\
      "1.151"\
    ],\
    [\
      "1.53",\
      "1.218"\
    ]\
],\
"bids": [\
    [\
      "1.17",\
      "201.863"\
    ],\
    [\
      "1.16",\
      "725.464"\
    ]\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-market-transaction-records) Query market transaction records\
\
`GET /spot/trades`\
\
_Query market transaction records_\
\
Supports querying by time range using `from` and `to` parameters or pagination based on `last_id`. By default, queries the last 30 days.\
\
Pagination based on `last_id` is no longer recommended. If `last_id` is specified, the time range query parameters will be ignored.\
\
When using limit&page pagination to retrieve data, the maximum number of pages is 100,000, that is, limit \* (page - 1) <= 100,000.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| limit | query | integer(int32) | false | Maximum number of items returned in list. Default: 100, minimum: 1, maximum: 1000 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| reverse | query | boolean | false | Whether to retrieve data less than `last_id`. Default returns records greater than `last_id`. |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| page | query | integer(int32) | false | Page number |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-10) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
**reverse**: Whether to retrieve data less than `last_id`. Default returns records greater than `last_id`.\
\
Set to `true` to trace back market trade records, `false` to get latest trades.\
\
No effect when `last_id` is not set.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | string | Fill ID |\
| » create\_time | string | Fill Time |\
| » create\_time\_ms | string | Trading time, with millisecond precision |\
| » currency\_pair | string | Currency pair |\
| » side | string | Buy or sell order |\
| » role | string | Trade role, not returned in public endpoints |\
| » amount | string | Trade amount |\
| » price | string | Order price |\
| » order\_id | string | Related order ID, not returned in public endpoints |\
| » fee | string | Fee deducted, not returned in public endpoints |\
| » fee\_currency | string | Fee currency unit, not returned in public endpoints |\
| » point\_fee | string | Points used to deduct fee, not returned in public endpoints |\
| » gt\_fee | string | GT used to deduct fee, not returned in public endpoints |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » sequence\_id | string | Consecutive trade ID within a single market.<br>Used to track and identify trades in the specific market |\
| » text | string | User-defined information, not returned in public endpoints |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-13) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | buy |\
| side | sell |\
| role | taker |\
| role | maker |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/trades'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/trades?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1232893232",\
    "create_time": "1548000000",\
    "create_time_ms": "1548000000123.456",\
    "order_id": "4128442423",\
    "side": "buy",\
    "role": "maker",\
    "amount": "0.15",\
    "price": "0.03",\
    "fee": "0.0005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "sequence_id": "588018",\
    "text": "t-test"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#market-k-line-chart) Market K-line chart\
\
`GET /spot/candlesticks`\
\
_Market K-line chart_\
\
Maximum of 1000 points can be returned in a query. Be sure not to exceed the limit when specifying from, to and interval\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Trading pair |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| interval | query | string | false | Time interval between data points. Note that `30d` represents a calendar month, not aligned to 30 days |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-14) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1s |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
| interval | 30d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[\[string\]\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | array | Candlestick data for each time granularity, from left to right:<br>\- Unix timestamp with second precision<br>\- Trading volume in quote currency<br>\- Closing price<br>\- Highest price<br>\- Lowest price<br>\- Opening price<br>\- Trading volume in base currency<br>\- Whether window is closed; true means this candlestick data segment is complete, false means not yet complete |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/candlesticks'\
query_param = 'currency_pair=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/candlesticks?currency_pair=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
[\
    "1539852480",\
    "971519.677",\
    "0.0021724",\
    "0.0021922",\
    "0.0021724",\
    "0.0021737",\
    "true"\
]\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-fee-rates) Query account fee rates\
\
`GET /spot/fee`\
\
_Query account fee rates_\
\
This API is deprecated. The new fee query API is `/wallet/fee`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify currency pair to get more accurate fee settings. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-11) Detailed descriptions\
\
**currency\_pair**: Specify currency pair to get more accurate fee settings.\
\
This field is optional. Usually fee settings are the same for all currency pairs.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user\_id | integer(int64) | User ID |\
| » taker\_fee | string | taker fee rate |\
| » maker\_fee | string | maker fee rate |\
| » gt\_discount | boolean | Whether GT deduction discount is enabled |\
| » gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| » gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| » loan\_fee | string | Loan fee rate of margin lending |\
| » point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| » currency\_pair | string | Trading pair |\
| » debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user_id": 10001,\
"taker_fee": "0.002",\
"maker_fee": "0.002",\
"gt_discount": false,\
"gt_taker_fee": "0",\
"gt_maker_fee": "0",\
"loan_fee": "0.18",\
"point_type": "1",\
"currency_pair": "BTC_USDT",\
"debit_fee": 3\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-query-account-fee-rates) Batch query account fee rates\
\
`GET /spot/batch_fee`\
\
_Batch query account fee rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pairs | query | string | true | Maximum 50 currency pairs per request |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | object | none |\
| »» user\_id | integer(int64) | User ID |\
| »» taker\_fee | string | taker fee rate |\
| »» maker\_fee | string | maker fee rate |\
| »» gt\_discount | boolean | Whether GT deduction discount is enabled |\
| »» gt\_taker\_fee | string | Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled |\
| »» gt\_maker\_fee | string | Maker fee rate with GT deduction. Returns 0 if GT deduction is disabled |\
| »» loan\_fee | string | Loan fee rate of margin lending |\
| »» point\_type | string | Point card type: 0 - Original version, 1 - New version since 202009 |\
| »» currency\_pair | string | Trading pair |\
| »» debit\_fee | integer | Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/batch_fee'\
query_param = 'currency_pairs=BTC_USDT,ETH_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/batch_fee"\
query_param="currency_pairs=BTC_USDT,ETH_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"BTC_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "BTC_USDT",\
    "debit_fee": 3\
},\
"GT_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "GT_USDT",\
    "debit_fee": 3\
},\
"ETH_USDT": {\
    "user_id": 10001,\
    "taker_fee": "0.002",\
    "maker_fee": "0.002",\
    "gt_discount": false,\
    "gt_taker_fee": "0",\
    "gt_maker_fee": "0",\
    "loan_fee": "0.18",\
    "point_type": "1",\
    "currency_pair": "ETH_USDT",\
    "debit_fee": 3\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-spot-trading-accounts) List spot trading accounts\
\
`GET /spot/accounts`\
\
_List spot trading accounts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency detail |\
| » available | string | Available amount |\
| » locked | string | Locked amount, used in trading |\
| » update\_id | integer(int64) | Version number |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "ETH",\
    "available": "968.8",\
    "locked": "0",\
    "update_id": 98\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-spot-account-transaction-history) Query spot account transaction history\
\
`GET /spot/account_book`\
\
_Query spot account transaction history_\
\
Record query time range cannot exceed 30 days.\
\
When using limit&page pagination to retrieve data, the maximum number of pages is 100,000, that is, limit \* (page - 1) <= 100,000.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| type | query | string | false | Query by specified account change type. If not specified, all change types will be included. |\
| code | query | string | false | Specify account change code for query. If not specified, all change types are included. This parameter has higher priority than `type` |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Balance change record ID |\
| » time | integer(int64) | The timestamp of the change (in milliseconds) |\
| » currency | string | Currency changed |\
| » change | string | Amount changed. Positive value means transferring in, while negative out |\
| » balance | string | Balance after change |\
| » type | string | Account book type. Please refer to [account book type](https://www.gate.com/docs/developers/apiv4/en/#accountbook-type) for more detail |\
| » code | string | Account change code, see \[Asset Record Code\] (Asset Record Code) |\
| » text | string | Additional information |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "123456",\
    "time": 1547633726123,\
    "currency": "BTC",\
    "change": "1.03",\
    "balance": "4.59316525194",\
    "type": "margin_in",\
    "text": "3815099"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-place-orders) Batch place orders\
\
`POST /spot/batch_orders`\
\
_Batch place orders_\
\
Batch order requirements:\
\
1. Custom order field `text` is required\
2. At most 4 trading pairs, maximum 10 orders each, are allowed in one request\
3. No mixture of spot orders and margin orders, i.e. `account` must be identical for all orders\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Batch order details\] |\
| » _None_ | object | Batch order details |\
| »» order\_id | string | Order ID |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» text | string | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:<br>1\. Must start with `t-`<br>2\. Excluding `t-`, length cannot exceed 28 bytes<br>3\. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.) |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» id | string | Order ID |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trade amount |\
| »» price | string | Order price |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevetion strategies<br>1\. After users join the `STP Group`, he can pass `stp_act` to limit the user's self-trade prevetion strategy. If `stp_act` is not passed, the default is `cn` strategy。<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter。<br>3\. If the user did not use 'stp\_act' when placing the order, 'stp\_act' will return '-'<br>\- cn: Cancel newest, Cancel new orders and keep old ones<br>\- co: Cancel oldest, new ones<br>\- cb: Cancel both, Both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-15) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| account | spot |\
| account | margin |\
| account | cross\_margin |\
| account | unified |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/batch_orders'\
query_param = ''\
body='[{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/batch_orders"\
query_param=""\
body_param='[{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "text": "t-abc123",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "12332324",\
    "amend_text": "t-123456",\
    "text": "t-123456",\
    "succeeded": true,\
    "label": "",\
    "message": "",\
    "id": "12332324",\
    "create_time": "1548000000",\
    "update_time": "1548000100",\
    "create_time_ms": 1548000000123,\
    "update_time_ms": 1548000100123,\
    "currency_pair": "ETC_BTC",\
    "status": "cancelled",\
    "type": "limit",\
    "account": "spot",\
    "side": "buy",\
    "amount": "1",\
    "price": "5.00032",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0.5",\
    "filled_amount": "1.242",\
    "filled_total": "2.50016",\
    "avg_deal_price": "5.00032",\
    "fee": "0.005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "BTC",\
    "stp_act": "cn",\
    "finish_as": "stp",\
    "stp_id": 10240\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-open-orders) List all open orders\
\
`GET /spot/open_orders`\
\
_List all open orders_\
\
Query the current order list of all trading pairs.\
Please note that the paging parameter controls the number of pending orders in each trading pair. There is no paging control trading pairs. All trading pairs with pending orders will be returned.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in one page in each currency pair |\
| account | query | string | false | Specify query account |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer | Total number of open orders for this trading pair on the current page |\
| » orders | array | none |\
| »» _None_ | object | Spot order details |\
| »»» id | string | Order ID |\
| »»» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »»» amend\_text | string | The custom data that the user remarked when amending the order |\
| »»» create\_time | string | Creation time of order |\
| »»» update\_time | string | Last modification time of order |\
| »»» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »»» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »»» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »»» currency\_pair | string | Currency pair |\
| »»» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »»» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »»» side | string | Buy or sell order |\
| »»» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »»» price | string | Trading price, required when `type` = `limit` |\
| »»» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »»» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »»» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »»» left | string | Amount left to fill |\
| »»» filled\_amount | string | Amount filled |\
| »»» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »»» filled\_total | string | Total filled in quote currency |\
| »»» avg\_deal\_price | string | Average fill price |\
| »»» fee | string | Fee deducted |\
| »»» fee\_currency | string | Fee currency unit |\
| »»» point\_fee | string | Points used to deduct fee |\
| »»» gt\_fee | string | GT used to deduct fee |\
| »»» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »»» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »»» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »»» rebated\_fee | string | Rebated fee |\
| »»» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »»» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »»» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »»» finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| »»» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-16) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/open_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/open_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "ETH_BTC",\
    "total": 1,\
    "orders": [\
      {\
        "id": "12332324",\
        "text": "t-123456",\
        "create_time": "1548000000",\
        "update_time": "1548000100",\
        "currency_pair": "ETH_BTC",\
        "status": "open",\
        "type": "limit",\
        "account": "spot",\
        "side": "buy",\
        "amount": "1",\
        "price": "5.00032",\
        "time_in_force": "gtc",\
        "left": "0.5",\
        "filled_total": "2.50016",\
        "fee": "0.005",\
        "fee_currency": "ETH",\
        "point_fee": "0",\
        "gt_fee": "0",\
        "gt_discount": false,\
        "rebated_fee": "0",\
        "rebated_fee_currency": "BTC"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#close-position-when-cross-currency-is-disabled) Close position when cross-currency is disabled\
\
`POST /spot/cross_liquidate_orders`\
\
_Close position when cross-currency is disabled_\
\
Currently, only cross-margin accounts are supported to place buy orders for disabled currencies.\
Maximum buy quantity = (unpaid principal and interest - currency balance - the amount of the currency in pending orders) / 0.998\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » text | body | string | false | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions: |\
| » currency\_pair | body | string | true | Currency pair |\
| » amount | body | string | true | Trade amount |\
| » price | body | string | true | Order price |\
| » action\_mode | body | string | false | Processing mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-12) Detailed descriptions\
\
**» text**: Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:\
\
1. Must start with `t-`\
2. Excluding `t-`, length cannot exceed 28 bytes\
3. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.)\
\
**» action\_mode**: Processing mode:\
\
Different fields are returned when placing an order based on action\_mode. This field is only valid during the request and is not included in the response\
`ACK`: Asynchronous mode, only returns key order fields\
`RESULT`: No liquidation information\
`FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-17) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/cross_liquidate_orders'\
query_param = ''\
body='{"currency_pair":"GT_USDT","amount":"12","price":"10.15","text":"t-34535"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/cross_liquidate_orders"\
query_param=""\
body_param='{"currency_pair":"GT_USDT","amount":"12","price":"10.15","text":"t-34535"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "GT_USDT",\
"amount": "12",\
"price": "10.15",\
"text": "t-34535"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-an-order) Create an order\
\
`POST /spot/orders`\
\
_Create an order_\
\
Supports spot, margin, leverage, and cross-margin leverage orders. Use different accounts through the `account` field. Default is `spot`, which means using the spot account to place orders. If the user has a `unified` account, the default is to place orders with the unified account.\
\
When using leveraged account trading (i.e., when `account` is set to `margin`), you can set `auto_borrow` to `true`.\
In case of insufficient account balance, the system will automatically execute `POST /margin/uni/loans` to borrow the insufficient amount.\
Whether assets obtained after leveraged order execution are automatically used to repay borrowing orders of the isolated margin account depends on the automatic repayment settings of the user's isolated margin account.\
Account automatic repayment settings can be queried and set through `/margin/auto_repay`.\
\
When using unified account trading (i.e., when `account` is set to `unified`), `auto_borrow` can also be enabled to realize automatic borrowing of insufficient amounts. However, unlike the isolated margin account, whether unified account orders are automatically repaid depends on the `auto_repay` setting when placing the order. This setting only applies to the current order, meaning only assets obtained after order execution will be used to repay borrowing orders of the cross-margin account.\
Unified account ordering currently supports enabling both `auto_borrow` and `auto_repay` simultaneously.\
\
Auto repayment will be triggered when the order ends, i.e., when `status` is `cancelled` or `closed`.\
\
**Order Status**\
\
The order status in pending orders is `open`, which remains `open` until all quantity is filled. If fully filled, the order ends and status becomes `closed`.\
If the order is cancelled before all transactions are completed, regardless of partial fills, the status will become `cancelled`.\
\
**Iceberg Orders**\
\
`iceberg` is used to set the displayed quantity of iceberg orders and does not support complete hiding. Note that hidden portions are charged according to the taker's fee rate.\
\
**Self-Trade Prevention**\
\
Set `stp_act` to determine the self-trade prevention strategy to use\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » text | body | string | false | User defined information. If not empty, must follow the rules below: |\
| » currency\_pair | body | string | true | Currency pair |\
| » type | body | string | false | Order Type |\
| » account | body | string | false | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | body | string | true | Buy or sell order |\
| » amount | body | string | true | Trading quantity |\
| » price | body | string | false | Trading price, required when `type` = `limit` |\
| » time\_in\_force | body | string | false | Time in force |\
| » iceberg | body | string | false | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_borrow | body | boolean | false | Used in margin or cross margin trading to allow automatic loan of insufficient amount if balance is not enough |\
| » auto\_repay | body | boolean | false | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that: |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
| » fee\_discount | body | string | false | Fee rate discount |\
| » action\_mode | body | string | false | Processing Mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-13) Detailed descriptions\
\
**» text**: User defined information. If not empty, must follow the rules below:\
\
1. prefixed with `t-`\
2. no longer than 28 bytes without `t-` prefix\
3. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
Besides user defined information, reserved contents are listed below, denoting how the order is created:\
\
- 101: from android\
- 102: from IOS\
- 103: from IPAD\
- 104: from webapp\
- 3: from web\
- 2: from apiv2\
- apiv4: from apiv4\
\
**» type**: Order Type\
\
- limit : Limit Order\
- market : Market Order\
\
**» amount**: Trading quantity\
When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`\
When `type` is `market`, it refers to different currencies based on the side:\
\
- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`\
- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC`\
\
**» time\_in\_force**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
Only `ioc` and `fok` are supported when `type` = `market`\
\
**» auto\_repay**: Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:\
\
1. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.\
2. `auto_borrow` and `auto_repay` can be both set to true in one order\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
**» action\_mode**: Processing Mode:\
When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result\
ACK: Asynchronous mode, only returns key order fields\
RESULT: No clearing information\
FULL: Full mode (default)\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-18) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | limit |\
| » type | market |\
| » side | buy |\
| » side | sell |\
| » time\_in\_force | gtc |\
| » time\_in\_force | ioc |\
| » time\_in\_force | poc |\
| » time\_in\_force | fok |\
| » stp\_act | cn |\
| » stp\_act | co |\
| » stp\_act | cb |\
| » stp\_act | - |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_borrow | boolean | Used in margin or cross margin trading to allow automatic loan of insufficient amount if balance is not enough |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
| » action\_mode | string | Processing Mode:<br>When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result<br>ACK: Asynchronous mode, only returns key order fields<br>RESULT: No clearing information<br>FULL: Full mode (default) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-19) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = ''\
body='{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/orders"\
query_param=""\
body_param='{"text":"t-abc123","currency_pair":"BTC_USDT","type":"limit","account":"unified","side":"buy","amount":"0.001","price":"65000","time_in_force":"gtc","iceberg":"0"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"text": "t-abc123",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0"\
}\
\
```\
\
> Example responses\
\
> ACK response body example\
\
```\
{\
"id": "12332324",\
"text": "t-123456",\
"amend_text": "test2"\
}\
\
```\
\
> RESULT response body example\
\
```\
{\
"id": "12332324",\
"text": "t-123456",\
"create_time": "1548000000",\
"update_time": "1548000100",\
"create_time_ms": 1548000000123,\
"update_time_ms": 1548000100123,\
"currency_pair": "ETH_BTC",\
"status": "cancelled",\
"type": "limit",\
"account": "spot",\
"side": "buy",\
"iceberg": "0",\
"amount": "1",\
"price": "5.00032",\
"time_in_force": "gtc",\
"auto_borrow": false,\
"left": "0.5",\
"filled_total": "2.50016",\
"avg_deal_price": "5.00032",\
"stp_act": "cn",\
"finish_as": "stp",\
"stp_id": 10240\
}\
\
```\
\
> FULL response body example\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-orders) List orders\
\
`GET /spot/orders`\
\
_List orders_\
\
`status` is set to `open`, that is, when querying the pending order list, only `page` and `limit` paging control are supported. `limit` The maximum setting is only 100.\
Does not support `side` and `from`, `to` parameters for querying by time range.\
\
`status` when querying historical orders, in addition to paging query, it also supports `from` and `to` query by time range.\
In addition, it also supports setting the `side` parameter to filter unilateral history.\
\
The parameters for time range filtering are all processed according to the **end** time of the order.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | true | Query by specified currency pair. Required for open orders, optional for filled orders |\
| status | query | string | true | List orders based on status |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records to be returned. If `status` is `open`, maximum of `limit` is 100 |\
| account | query | string | false | Specify query account |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-14) Detailed descriptions\
\
**status**: List orders based on status\
\
`open` \- order is waiting to be filled\
`finished` \- order has been filled or cancelled\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Spot order details\] |\
| » _None_ | object | Spot order details |\
| »» id | string | Order ID |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »» price | string | Trading price, required when `type` = `limit` |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| »» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-20) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = 'currency_pair=BTC_USDT&status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/orders"\
query_param="currency_pair=BTC_USDT&status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1852454420",\
    "text": "t-abc123",\
    "amend_text": "-",\
    "create_time": "1710488334",\
    "update_time": "1710488334",\
    "create_time_ms": 1710488334073,\
    "update_time_ms": 1710488334074,\
    "status": "closed",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0",\
    "filled_amount": "0.001",\
    "fill_price": "63.4693",\
    "filled_total": "63.4693",\
    "avg_deal_price": "63469.3",\
    "fee": "0.00000022",\
    "fee_currency": "BTC",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_maker_fee": "0",\
    "gt_taker_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "USDT",\
    "finish_as": "filled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-open-orders-in-specified-currency-pair) Cancel all `open` orders in specified currency pair\
\
`DELETE /spot/orders`\
\
_Cancel all `open` orders in specified currency pair_\
\
When the `account` parameter is not specified, all pending orders including spot, unified account, and isolated margin will be cancelled.\
When `currency_pair` is not specified, all trading pair pending orders will be cancelled.\
You can specify a particular account to cancel all pending orders under that account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Trading pair |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
| account | query | string | false | Specify account type |\
| action\_mode | query | string | false | Processing Mode |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-15) Detailed descriptions\
\
**account**: Specify account type\
\
Classic account: All are included if not specified\
Unified account: Specify `unified`\
\
**action\_mode**: Processing Mode\
\
When placing an order, different fields are returned based on the action\_mode\
\
- `ACK`: Asynchronous mode, returns only key order fields\
- `RESULT`: No clearing information\
- `FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Spot order details |\
| »» id | string | Order ID |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| »» price | string | Trading price, required when `type` = `limit` |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| »» gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
| »» fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-21) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1852454420",\
    "text": "t-abc123",\
    "amend_text": "-",\
    "succeeded": true,\
    "create_time": "1710488334",\
    "update_time": "1710488334",\
    "create_time_ms": 1710488334073,\
    "update_time_ms": 1710488334074,\
    "status": "closed",\
    "currency_pair": "BTC_USDT",\
    "type": "limit",\
    "account": "unified",\
    "side": "buy",\
    "amount": "0.001",\
    "price": "65000",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0",\
    "filled_amount": "0.001",\
    "fill_price": "63.4693",\
    "filled_total": "63.4693",\
    "avg_deal_price": "63469.3",\
    "fee": "0.00000022",\
    "fee_currency": "BTC",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_maker_fee": "0",\
    "gt_taker_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "USDT",\
    "finish_as": "filled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-batch-orders-by-specified-id-list) Cancel batch orders by specified ID list\
\
`POST /spot/cancel_batch_orders`\
\
_Cancel batch orders by specified ID list_\
\
Multiple currency pairs can be specified, but maximum 20 orders are allowed per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[object\] | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » CancelOrderResult | object | Order cancellation result |\
| »» currency\_pair | string | Order currency pair |\
| »» id | string | Order ID |\
| »» text | string | Custom order information |\
| »» succeeded | boolean | Whether cancellation succeeded |\
| »» label | string | Error label when failed to cancel the order; emtpy if succeeded |\
| »» message | string | Error description when cancellation fails, empty if successful |\
| »» account | string | Default is empty (deprecated) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/cancel_batch_orders'\
query_param = ''\
body='[{"currency_pair":"BTC_USDT","id":"123456"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/cancel_batch_orders"\
query_param=""\
body_param='[{"currency_pair":"BTC_USDT","id":"123456"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "id": "123456"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "id": "123456",\
    "text": "123456",\
    "succeeded": true,\
    "label": null,\
    "message": null\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details) Query single order details\
\
`GET /spot/orders/{order_id}`\
\
_Query single order details_\
\
By default, queries orders for spot, unified account, and isolated margin accounts.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | true | Specify the trading pair to query. This field is required when querying pending order records. This field can be omitted when querying filled order records. |\
| account | query | string | false | Specify query account |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-16) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Detail retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-22) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/orders/12345"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-single-order) Amend single order\
\
`PATCH /spot/orders/{order_id}`\
\
_Amend single order_\
\
Modify orders in spot, unified account and isolated margin account by default.\
\
Currently both request body and query support currency\_pair and account parameters, but request body has higher priority.\
\
currency\_pair must be filled in one of the request body or query parameters.\
\
About rate limit: Order modification and order creation share the same rate limit rules.\
\
About matching priority: Only reducing the quantity does not affect the matching priority. Modifying the price or increasing the quantity will adjust the priority to the end of the new price level.\
\
Note: Modifying the quantity to be less than the filled quantity will trigger a cancellation and isolated margin account by default.\
\
Currently both request body and query support currency\_pair and account parameters, but request body has higher priority.\
\
currency\_pair must be filled in one of the request body or query parameters.\
\
About rate limit: Order modification and order creation share the same rate limit rules.\
\
About matching priority: Only reducing the quantity does not affect the matching priority. Modifying the price or increasing the quantity will adjust the priority to the end of the new price level.\
\
Note: Modifying the quantity to be less than the filled quantity will trigger a cancellation operation.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | false | Trading pair |\
| account | query | string | false | Specify query account |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » currency\_pair | body | string | false | Trading pair |\
| » account | body | string | false | Specify query account |\
| » amount | body | string | false | Trading quantity. Either `amount` or `price` must be specified |\
| » price | body | string | false | Trading price. Either `amount` or `price` must be specified |\
| » amend\_text | body | string | false | Custom info during order amendment |\
| » action\_mode | body | string | false | Processing Mode: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-17) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
**» action\_mode**: Processing Mode:\
When placing an order, different fields are returned based on action\_mode. This field is only valid during the request and is not included in the response result\
ACK: Asynchronous mode, only returns key order fields\
RESULT: No clearing information\
FULL: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-23) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = ''\
body='{"currency_pair":"BTC_USDT","account":"spot","amount":"1"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PATCH', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PATCH', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PATCH"\
url="/spot/orders/12345"\
query_param=""\
body_param='{"currency_pair":"BTC_USDT","account":"spot","amount":"1"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency_pair": "BTC_USDT",\
"account": "spot",\
"amount": "1"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order) Cancel single order\
\
`DELETE /spot/orders/{order_id}`\
\
_Cancel single order_\
\
By default, orders for spot, unified accounts and leveraged accounts are revoked.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field). |\
| currency\_pair | query | string | true | Trading pair |\
| account | query | string | false | Specify query account |\
| action\_mode | query | string | false | Processing Mode |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-18) Detailed descriptions\
\
**order\_id**: The order ID returned when the order was successfully created or the custom ID specified by the user's creation (i.e. the `text` field).\
Operations based on custom IDs can only be checked in pending orders. Only order ID can be used after the order is finished (transaction/cancel)\
\
**action\_mode**: Processing Mode\
\
When placing an order, different fields are returned based on the action\_mode\
\
- `ACK`: Asynchronous mode, returns only key order fields\
- `RESULT`: No clearing information\
- `FULL`: Full mode (default)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order cancelled | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Spot order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | string | Order ID |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- 101: from android<br>\- 102: from IOS<br>\- 103: from IPAD<br>\- 104: from webapp<br>\- 3: from web<br>\- 2: from apiv2<br>\- apiv4: from apiv4 |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » create\_time | string | Creation time of order |\
| » update\_time | string | Last modification time of order |\
| » create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| » update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| » status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| » currency\_pair | string | Currency pair |\
| » type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| » account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| » side | string | Buy or sell order |\
| » amount | string | Trading quantity<br>When `type` is `limit`, it refers to the base currency (the currency being traded), such as `BTC` in `BTC_USDT`<br>When `type` is `market`, it refers to different currencies based on the side:<br>\- `side`: `buy` refers to quote currency, `BTC_USDT` means `USDT`<br>\- `side`: `sell` refers to base currency, `BTC_USDT` means `BTC` |\
| » price | string | Trading price, required when `type` = `limit` |\
| » time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none<br>Only `ioc` and `fok` are supported when `type` = `market` |\
| » iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| » auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| » left | string | Amount left to fill |\
| » filled\_amount | string | Amount filled |\
| » fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| » filled\_total | string | Total filled in quote currency |\
| » avg\_deal\_price | string | Average fill price |\
| » fee | string | Fee deducted |\
| » fee\_currency | string | Fee currency unit |\
| » point\_fee | string | Points used to deduct fee |\
| » gt\_fee | string | GT used to deduct fee |\
| » gt\_maker\_fee | string | GT amount used to deduct maker fee |\
| » gt\_taker\_fee | string | GT amount used to deduct taker fee |\
| » gt\_discount | boolean | Whether GT fee deduction is enabled |\
| » rebated\_fee | string | Rebated fee |\
| » rebated\_fee\_currency | string | Rebated fee currency unit |\
| » stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| » stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| » finish\_as | string | Order completion statuses include:<br>\- open: Awaiting processing<br>\- filled: Fully filled<br>\- cancelled: Cancelled by user<br>\- liquidate\_cancelled: Cancelled due to liquidation<br>\- small: Order quantity too small<br>\- depth\_not\_enough: Cancelled due to insufficient market depth<br>\- trader\_not\_enough: Cancelled due to insufficient counterparty<br>\- ioc: Not immediately filled because tif is set to ioc<br>\- poc: Not met the order poc<br>\- fok: Not fully filled immediately because tif is set to fok<br>\- stp: Cancelled due to self-trade prevention<br>\- unknown: Unknown |\
| » fee\_discount | string | Fee rate discount |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-24) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidate\_cancelled |\
| finish\_as | depth\_not\_enough |\
| finish\_as | trader\_not\_enough |\
| finish\_as | small |\
| finish\_as | ioc |\
| finish\_as | poc |\
| finish\_as | fok |\
| finish\_as | stp |\
| finish\_as | unknown |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/orders/12345'\
query_param = 'currency_pair=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/orders/12345"\
query_param="currency_pair=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": "1852454420",\
"text": "t-abc123",\
"amend_text": "-",\
"create_time": "1710488334",\
"update_time": "1710488334",\
"create_time_ms": 1710488334073,\
"update_time_ms": 1710488334074,\
"status": "closed",\
"currency_pair": "BTC_USDT",\
"type": "limit",\
"account": "unified",\
"side": "buy",\
"amount": "0.001",\
"price": "65000",\
"time_in_force": "gtc",\
"iceberg": "0",\
"left": "0",\
"filled_amount": "0.001",\
"fill_price": "63.4693",\
"filled_total": "63.4693",\
"avg_deal_price": "63469.3",\
"fee": "0.00000022",\
"fee_currency": "BTC",\
"point_fee": "0",\
"gt_fee": "0",\
"gt_maker_fee": "0",\
"gt_taker_fee": "0",\
"gt_discount": false,\
"rebated_fee": "0",\
"rebated_fee_currency": "USDT",\
"finish_as": "filled"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records) Query personal trading records\
\
`GET /spot/my_trades`\
\
_Query personal trading records_\
\
By default query of transaction records for spot, unified account and warehouse-by-site leverage accounts.\
\
The history within a specified time range can be queried by specifying `from` or (and) `to`.\
\
- If no time parameters are specified, only data for the last 7 days can be obtained.\
- If only any parameter of `from` or `to` is specified, only 7-day data from the start (or end) of the specified time is returned.\
- The range not allowed to exceed 30 days.\
\
The parameters of the time range filter are processed according to the order end time.\
\
The maximum number of pages when searching data using limit&page paging function is 100,0, that is, limit \* (page - 1) <= 100,0.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Retrieve results with specified currency pair |\
| limit | query | integer | false | Maximum number of items returned in list. Default: 100, minimum: 1, maximum: 1000 |\
| page | query | integer(int32) | false | Page number |\
| order\_id | query | string | false | Filter trades with specified order ID. `currency_pair` is also required if this field is present |\
| account | query | string | false | The accountparameter has been deprecated. The interface supports querying all transaction records of the account. |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | string | Fill ID |\
| » create\_time | string | Fill Time |\
| » create\_time\_ms | string | Trading time, with millisecond precision |\
| » currency\_pair | string | Currency pair |\
| » side | string | Buy or sell order |\
| » role | string | Trade role, not returned in public endpoints |\
| » amount | string | Trade amount |\
| » price | string | Order price |\
| » order\_id | string | Related order ID, not returned in public endpoints |\
| » fee | string | Fee deducted, not returned in public endpoints |\
| » fee\_currency | string | Fee currency unit, not returned in public endpoints |\
| » point\_fee | string | Points used to deduct fee, not returned in public endpoints |\
| » gt\_fee | string | GT used to deduct fee, not returned in public endpoints |\
| » amend\_text | string | The custom data that the user remarked when amending the order |\
| » sequence\_id | string | Consecutive trade ID within a single market.<br>Used to track and identify trades in the specific market |\
| » text | string | User-defined information, not returned in public endpoints |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-25) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | buy |\
| side | sell |\
| role | taker |\
| role | maker |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": "1232893232",\
    "create_time": "1548000000",\
    "create_time_ms": "1548000000123.456",\
    "order_id": "4128442423",\
    "side": "buy",\
    "role": "maker",\
    "amount": "0.15",\
    "price": "0.03",\
    "fee": "0.0005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "sequence_id": "588018",\
    "text": "t-test"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-server-current-time) Get server current time\
\
`GET /spot/time`\
\
_Get server current time_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_SystemTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » server\_time | integer(int64) | Server current time(ms) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/time'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/time \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"server_time": 1597026383085\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders) Countdown cancel orders\
\
`POST /spot/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Spot order heartbeat detection. If there is no "cancel existing countdown" or "set new countdown" when the user-set `timeout` time is reached, the related `spot pending orders` will be automatically cancelled.\
This interface can be called repeatedly to set a new countdown or cancel the countdown.\
Usage example: Repeat this interface at 30s intervals, setting the countdown `timeout` to `30 (seconds)` each time.\
If this interface is not called again within 30 seconds, all pending orders on the `market` you specified will be automatically cancelled. If no `market` is specified, all market cancelled.\
If the `timeout` is set to 0 within 30 seconds, the countdown timer will be terminated and the automatic order cancellation function will be cancelled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » currency\_pair | body | string | false | Currency pair |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-19) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"currency_pair":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"currency_pair":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"currency_pair": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-modification-of-orders) Batch modification of orders\
\
`POST /spot/amend_batch_orders`\
\
_Batch modification of orders_\
\
Modify orders in spot, unified account and isolated margin account by default.\
Modify uncompleted orders, up to 5 orders can be modified at a time. Request parameters should be passed in array format.\
If there are order modification failures during the batch modification process, the modification of the next order will continue to be executed, and the execution will return with the corresponding order failure information.\
The call order of batch modification orders is consistent with the order list order.\
The return content order of batch modification orders is consistent with the order list order.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[object\] | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order modification executed successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Batch order details\] |\
| » _None_ | object | Batch order details |\
| »» order\_id | string | Order ID |\
| »» amend\_text | string | The custom data that the user remarked when amending the order |\
| »» text | string | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:<br>1\. Must start with `t-`<br>2\. Excluding `t-`, length cannot exceed 28 bytes<br>3\. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.) |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, if any, otherwise an empty string |\
| »» message | string | Detailed error message, if any, otherwise an empty string |\
| »» id | string | Order ID |\
| »» create\_time | string | Creation time of order |\
| »» update\_time | string | Last modification time of order |\
| »» create\_time\_ms | integer(int64) | Creation time of order (in milliseconds) |\
| »» update\_time\_ms | integer(int64) | Last modification time of order (in milliseconds) |\
| »» status | string | Order status<br>\- `open`: to be filled<br>\- `closed`: filled<br>\- `cancelled`: cancelled |\
| »» currency\_pair | string | Currency pair |\
| »» type | string | Order Type <br>\- limit : Limit Order<br>\- market : Market Order |\
| »» account | string | Account type, spot - spot account, margin - leveraged account, unified - unified account |\
| »» side | string | Buy or sell order |\
| »» amount | string | Trade amount |\
| »» price | string | Order price |\
| »» time\_in\_force | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» iceberg | string | Amount to display for the iceberg order. Null or 0 for normal orders. Hiding all amount is not supported |\
| »» auto\_repay | boolean | Enable or disable automatic repayment for automatic borrow loan generated by cross margin order. Default is disabled. Note that:<br>1\. This field is only effective for cross margin orders. Margin account does not support setting auto repayment for orders.<br>2\. `auto_borrow` and `auto_repay` can be both set to true in one order |\
| »» left | string | Amount left to fill |\
| »» filled\_amount | string | Amount filled |\
| »» fill\_price | string | Total filled in quote currency. Deprecated in favor of `filled_total` |\
| »» filled\_total | string | Total filled in quote currency |\
| »» avg\_deal\_price | string | Average fill price |\
| »» fee | string | Fee deducted |\
| »» fee\_currency | string | Fee currency unit |\
| »» point\_fee | string | Points used to deduct fee |\
| »» gt\_fee | string | GT used to deduct fee |\
| »» gt\_discount | boolean | Whether GT fee deduction is enabled |\
| »» rebated\_fee | string | Rebated fee |\
| »» rebated\_fee\_currency | string | Rebated fee currency unit |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevetion strategies<br>1\. After users join the `STP Group`, he can pass `stp_act` to limit the user's self-trade prevetion strategy. If `stp_act` is not passed, the default is `cn` strategy。<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter。<br>3\. If the user did not use 'stp\_act' when placing the order, 'stp\_act' will return '-'<br>\- cn: Cancel newest, Cancel new orders and keep old ones<br>\- co: Cancel oldest, new ones<br>\- cb: Cancel both, Both old and new orders will be cancelled |\
| »» finish\_as | string | How the order was finished.<br>\- open: processing<br>\- filled: filled totally<br>\- cancelled: manually cancelled<br>\- ioc: time in force is `IOC`, finish immediately<br>\- stp: cancelled because self trade prevention |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-26) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| status | open |\
| status | closed |\
| status | cancelled |\
| type | limit |\
| type | market |\
| account | spot |\
| account | margin |\
| account | cross\_margin |\
| account | unified |\
| side | buy |\
| side | sell |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
| time\_in\_force | poc |\
| time\_in\_force | fok |\
| stp\_act | cn |\
| stp\_act | co |\
| stp\_act | cb |\
| stp\_act | - |\
| finish\_as | open |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | ioc |\
| finish\_as | stp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/amend_batch_orders'\
query_param = ''\
body='[{"order_id":"121212","currency_pair":"BTC_USDT","account":"spot","amount":"1","amend_text":"test"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/amend_batch_orders"\
query_param=""\
body_param='[{"order_id":"121212","currency_pair":"BTC_USDT","account":"spot","amount":"1","amend_text":"test"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "order_id": "121212",\
    "currency_pair": "BTC_USDT",\
    "account": "spot",\
    "amount": "1",\
    "amend_text": "test"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "12332324",\
    "amend_text": "t-123456",\
    "text": "t-123456",\
    "succeeded": true,\
    "label": "",\
    "message": "",\
    "id": "12332324",\
    "create_time": "1548000000",\
    "update_time": "1548000100",\
    "create_time_ms": 1548000000123,\
    "update_time_ms": 1548000100123,\
    "currency_pair": "ETC_BTC",\
    "status": "cancelled",\
    "type": "limit",\
    "account": "spot",\
    "side": "buy",\
    "amount": "1",\
    "price": "5.00032",\
    "time_in_force": "gtc",\
    "iceberg": "0",\
    "left": "0.5",\
    "filled_amount": "1.242",\
    "filled_total": "2.50016",\
    "avg_deal_price": "5.00032",\
    "fee": "0.005",\
    "fee_currency": "ETH",\
    "point_fee": "0",\
    "gt_fee": "0",\
    "gt_discount": false,\
    "rebated_fee": "0",\
    "rebated_fee_currency": "BTC",\
    "stp_act": "cn",\
    "finish_as": "stp",\
    "stp_id": 10240\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-spot-insurance-fund-historical-data) Query spot insurance fund historical data\
\
`GET /spot/insurance_history`\
\
_Query spot insurance fund historical data_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| business | query | string | true | Leverage business, margin - position by position; unified - unified account |\
| currency | query | string | true | Currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | The maximum number of items returned in the list, the default value is 30 |\
| from | query | integer(int64) | true | Start timestamp in seconds |\
| to | query | integer(int64) | true | End timestamp in seconds |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » balance | string | Balance |\
| » time | integer(int64) | Creation time, timestamp, milliseconds |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/insurance_history'\
query_param = 'business=margin&currency=BTC&from=1547706332&to=1547706332'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/spot/insurance_history?business=margin&currency=BTC&from=1547706332&to=1547706332 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "balance": "1021.21",\
    "time": 1727054547\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order) Create price-triggered order\
\
`POST /spot/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) | true | none |\
| » trigger | body | object | true | none |\
| »» price | body | string | true | Trigger price |\
| »» rule | body | string | true | Price trigger condition |\
| »» expiration | body | integer | true | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » put | body | object | true | none |\
| »» type | body | string | false | Order type，default to `limit` |\
| »» side | body | string | true | Order side |\
| »» price | body | string | true | Order price |\
| »» amount | body | string | true | Trading quantity, refers to the trading quantity of the trading currency, i.e., the currency that needs to be traded, for example, the quantity of BTC in BTC\_USDT. |\
| »» account | body | string | true | Trading account type. Unified account must be set to `unified` |\
| »» time\_in\_force | body | string | false | time\_in\_force |\
| »» auto\_borrow | body | boolean | false | Whether to borrow coins automatically |\
| »» auto\_repay | body | boolean | false | Whether to repay the loan automatically |\
| »» text | body | string | false | The source of the order, including: |\
| » market | body | string | true | Market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-20) Detailed descriptions\
\
**»» rule**: Price trigger condition\
\
- `>=`: triggered when market price is greater than or equal to `price`\
- `<=`: triggered when market price is less than or equal to `price`\
\
**»» type**: Order type，default to `limit`\
\
- limit : Limit Order\
- market : Market Order\
\
**»» side**: Order side\
\
- buy: buy side\
- sell: sell side\
\
**»» account**: Trading account type. Unified account must be set to `unified`\
\
- normal: spot trading\
- margin: margin trading\
- unified: unified account\
\
**»» time\_in\_force**: time\_in\_force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-27) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» rule | >= |\
| »» rule | <= |\
| »» type | limit |\
| »» type | market |\
| »» side | buy |\
| »» side | sell |\
| »» account | normal |\
| »» account | margin |\
| »» account | unified |\
| »» time\_in\_force | gtc |\
| »» time\_in\_force | ioc |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = ''\
body='{"trigger":{"price":"100","rule":">=","expiration":3600},"put":{"type":"limit","side":"buy","price":"2.15","amount":"2.00000000","account":"normal","time_in_force":"gtc","text":"api"},"market":"GT_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/spot/price_orders"\
query_param=""\
body_param='{"trigger":{"price":"100","rule":">=","expiration":3600},"put":{"type":"limit","side":"buy","price":"2.15","amount":"2.00000000","account":"normal","time_in_force":"gtc","text":"api"},"market":"GT_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"market": "GT_USDT"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-running-auto-order-list) Query running auto order list\
\
`GET /spot/price_orders`\
\
_Query running auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| market | query | string | false | Trading market |\
| account | query | string | false | Trading account type. Unified account must be set to `unified` |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-28) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| account | normal |\
| account | margin |\
| account | unified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trigger": {\
      "price": "100",\
      "rule": ">=",\
      "expiration": 3600\
    },\
    "put": {\
      "type": "limit",\
      "side": "buy",\
      "price": "2.15",\
      "amount": "2.00000000",\
      "account": "normal",\
      "time_in_force": "gtc",\
      "text": "api"\
    },\
    "id": 1283293,\
    "user": 1234,\
    "market": "GT_USDT",\
    "ctime": 1616397800,\
    "ftime": 1616397801,\
    "fired_order_id": 0,\
    "status": "",\
    "reason": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders) Cancel all auto orders\
\
`DELETE /spot/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| market | query | string | false | Trading market |\
| account | query | string | false | Trading account type. Unified account must be set to `unified` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-29) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| account | normal |\
| account | margin |\
| account | unified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/price_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trigger": {\
      "price": "100",\
      "rule": ">=",\
      "expiration": 3600\
    },\
    "put": {\
      "type": "limit",\
      "side": "buy",\
      "price": "2.15",\
      "amount": "2.00000000",\
      "account": "normal",\
      "time_in_force": "gtc",\
      "text": "api"\
    },\
    "id": 1283293,\
    "user": 1234,\
    "market": "GT_USDT",\
    "ctime": 1616397800,\
    "ftime": 1616397801,\
    "fired_order_id": 0,\
    "status": "",\
    "reason": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details) Query single auto order details\
\
`GET /spot/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/spot/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"id": 1283293,\
"user": 1234,\
"market": "GT_USDT",\
"ctime": 1616397800,\
"ftime": 1616397801,\
"fired_order_id": 0,\
"status": "",\
"reason": ""\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order) Cancel single auto order\
\
`DELETE /spot/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [SpotPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemaspotpricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/spot/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/spot/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trigger": {\
    "price": "100",\
    "rule": ">=",\
    "expiration": 3600\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "2.15",\
    "amount": "2.00000000",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "text": "api"\
},\
"id": 1283293,\
"user": 1234,\
"market": "GT_USDT",\
"ctime": 1616397800,\
"ftime": 1616397801,\
"fired_order_id": 0,\
"status": "",\
"reason": ""\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#flash-swap) Flash\_swap\
\
Flash exchange\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-supported-currency-pairs-in-flash-swap) List All Supported Currency Pairs In Flash Swap\
\
`GET /flash_swap/currency_pairs`\
\
_List All Supported Currency Pairs In Flash Swap_\
\
`BTC_GT` represents selling BTC and buying GT. The limits for each currency may vary across different currency pairs.\
\
It is not necessary that two currencies that can be swapped instantaneously can be exchanged with each other. For example, it is possible to sell BTC and buy GT, but it does not necessarily mean that GT can be sold to buy BTC.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 1000, minimum: 1, maximum: 1000 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | List all supported currencies in flash swap |\
| »» currency\_pair | string | Currency pair, `BTC_USDT` represents selling `BTC` and buying `USDT` |\
| »» sell\_currency | string | Currency to sell |\
| »» buy\_currency | string | Currency to buy |\
| »» sell\_min\_amount | string | Minimum sell quantity |\
| »» sell\_max\_amount | string | Maximum sell quantity |\
| »» buy\_min\_amount | string | Minimum buy quantity |\
| »» buy\_max\_amount | string | Maximum buy quantity |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/currency_pairs'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/flash_swap/currency_pairs \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency_pair": "BTC_USDT",\
    "sell_currency": "BTC",\
    "buy_currency": "USDT",\
    "sell_min_amount": "0.00001",\
    "sell_max_amount": "100",\
    "buy_min_amount": "10",\
    "buy_max_amount": "10000000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-a-flash-swap-order) Create a flash swap order\
\
`POST /flash_swap/orders`\
\
_Create a flash swap order_\
\
Initiate a flash swap preview in advance because order creation requires a preview result\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » preview\_id | body | string | true | Preview result ID |\
| » sell\_currency | body | string | true | Name of the asset to be sold, obtained from the interface GET /flash\_swap/currency\_pairs: Query the list of all trading pairs supporting flash swap |\
| » sell\_amount | body | string | true | Amount to sell (based on the preview result) |\
| » buy\_currency | body | string | true | Name of the asset to be bought, obtained from the interface GET /flash\_swap/currency\_pairs: Query the list of all trading pairs supporting flash swap |\
| » buy\_amount | body | string | true | Amount to buy (based on the preview result) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Flash swap order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Flash swap order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Flash swap order ID |\
| » create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| » user\_id | integer(int64) | User ID |\
| » sell\_currency | string | Currency to sell |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Currency to buy |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
| » status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders'\
query_param = ''\
body='{"preview_id":"4564564","sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT","buy_amount":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/flash_swap/orders"\
query_param=""\
body_param='{"preview_id":"4564564","sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT","buy_amount":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"preview_id": "4564564",\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT",\
"buy_amount": "10"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 54646,\
"create_time": 1651116876378,\
"update_time": 1651116876378,\
"user_id": 11135567,\
"sell_currency": "BTC",\
"sell_amount": "0.01",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100",\
"status": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-flash-swap-order-list) Query flash swap order list\
\
`GET /flash_swap/orders`\
\
_Query flash swap order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | integer | false | Flash swap order status |\
| sell\_currency | query | string | false | Asset name to sell |\
| buy\_currency | query | string | false | Asset name to buy |\
| reverse | query | boolean | false | Sort by ID in ascending or descending order, default `true` |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| page | query | integer(int32) | false | Page number |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-21) Detailed descriptions\
\
**status**: Flash swap order status\
\
`1` \- success\
`2` \- failed\
\
**sell\_currency**: Asset name to sell\
\
- Retrieved from API `GET /flash_swap/currencies` for supported flash swap currencies\
\
**buy\_currency**: Asset name to buy\
\
- Retrieved from API `GET /flash_swap/currencies` for supported flash swap currencies\
\
**reverse**: Sort by ID in ascending or descending order, default `true`\
\
- `true`: ID descending order (most recent data first)\
- `false`: ID ascending order (oldest data first)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Flash swap order\] |\
| » _None_ | object | Flash swap order |\
| »» id | integer(int64) | Flash swap order ID |\
| »» create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| »» user\_id | integer(int64) | User ID |\
| »» sell\_currency | string | Currency to sell |\
| »» sell\_amount | string | Amount to sell |\
| »» buy\_currency | string | Currency to buy |\
| »» buy\_amount | string | Amount to buy |\
| »» price | string | Price |\
| »» status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/flash_swap/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 54646,\
    "create_time": 1651116876378,\
    "update_time": 1651116876378,\
    "user_id": 11135567,\
    "sell_currency": "BTC",\
    "sell_amount": "0.01",\
    "buy_currency": "USDT",\
    "buy_amount": "10",\
    "price": "100",\
    "status": 1\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-flash-swap-order) Query single flash swap order\
\
`GET /flash_swap/orders/{order_id}`\
\
_Query single flash swap order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer | true | Flash swap order ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Flash swap order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Flash swap order ID |\
| » create\_time | integer(int64) | Creation time of order (in milliseconds) |\
| » user\_id | integer(int64) | User ID |\
| » sell\_currency | string | Currency to sell |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Currency to buy |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
| » status | integer | Flash swap order status<br>`1` \- success<br>`2` \- failure |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders/1'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/flash_swap/orders/1"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 54646,\
"create_time": 1651116876378,\
"update_time": 1651116876378,\
"user_id": 11135567,\
"sell_currency": "BTC",\
"sell_amount": "0.01",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100",\
"status": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#flash-swap-order-preview) Flash swap order preview\
\
`POST /flash_swap/orders/preview`\
\
_Flash swap order preview_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » sell\_currency | body | string | true | The name of the asset being sold, as obtained from the "GET /flash\_swap/currency\_pairs" API, which retrieves a list of supported flash swap currency pairs |\
| » sell\_amount | body | string | false | Amount to sell. |\
| » buy\_currency | body | string | true | The name of the asset being purchased, as obtained from the "GET /flash\_swap/currency\_pairs" API, which provides a list of supported flash swap currency pairs |\
| » buy\_amount | body | string | false | Amount to buy. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-22) Detailed descriptions\
\
**» sell\_amount**: Amount to sell.\
It is required to choose one parameter between `sell_amount` and `buy_amount`\
\
**» buy\_amount**: Amount to buy.\
It is required to choose one parameter between `sell_amount` and `buy_amount`\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Flash swap order preview successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Flash swap order preview_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » preview\_id | string | Preview result ID |\
| » sell\_currency | string | Name of the sold asset,<br> Refer to the interface Query the list of currencies supported for flash swap GET /flash\_swap/currenciesto obtain |\
| » sell\_amount | string | Amount to sell |\
| » buy\_currency | string | Name of the purchased asset,<br> Refer to the interface Query the list of currencies supported for flash swap GET /flash\_swap/currenciesto obtain |\
| » buy\_amount | string | Amount to buy |\
| » price | string | Price |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/flash_swap/orders/preview'\
query_param = ''\
body='{"sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/flash_swap/orders/preview"\
query_param=""\
body_param='{"sell_currency":"BTC","sell_amount":"0.1","buy_currency":"USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"preview_id": "3453434",\
"sell_currency": "BTC",\
"sell_amount": "0.1",\
"buy_currency": "USDT",\
"buy_amount": "10",\
"price": "100"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures) Futures\
\
Perpetual futures\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-futures-contracts) Query all futures contracts\
\
`GET /futures/{settle}/contracts`\
\
_Query all futures contracts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-30) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Contract](https://www.gate.com/docs/developers/apiv4/en/#schemacontract)\] |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contracts'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contracts \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT",\
    "type": "direct",\
    "quanto_multiplier": "0.0001",\
    "ref_discount_rate": "0",\
    "order_price_deviate": "0.5",\
    "maintenance_rate": "0.005",\
    "mark_type": "index",\
    "last_price": "38026",\
    "mark_price": "37985.6",\
    "index_price": "37954.92",\
    "funding_rate_indicative": "0.000219",\
    "mark_price_round": "0.01",\
    "funding_offset": 0,\
    "in_delisting": false,\
    "risk_limit_base": "1000000",\
    "interest_rate": "0.0003",\
    "order_price_round": "0.1",\
    "order_size_min": 1,\
    "ref_rebate_rate": "0.2",\
    "funding_interval": 28800,\
    "risk_limit_step": "1000000",\
    "leverage_min": "1",\
    "leverage_max": "100",\
    "risk_limit_max": "8000000",\
    "maker_fee_rate": "-0.00025",\
    "taker_fee_rate": "0.00075",\
    "funding_rate": "0.002053",\
    "order_size_max": 1000000,\
    "funding_next_apply": 1610035200,\
    "short_users": 977,\
    "config_change_time": 1609899548,\
    "trade_size": 28530850594,\
    "position_size": 5223816,\
    "long_users": 455,\
    "funding_impact_value": "60000",\
    "orders_limit": 50,\
    "trade_id": 10851092,\
    "orderbook_id": 2129638396,\
    "enable_bonus": true,\
    "enable_credit": true,\
    "create_time": 1669688556,\
    "funding_cap_ratio": "0.75",\
    "status": "trading",\
    "launch_time": 1609899548,\
    "delisting_time": 1609899548,\
    "delisted_time": 1609899548\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-contract-information) Query single contract information\
\
`GET /futures/{settle}/contracts/{contract}`\
\
_Query single contract information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-31) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Contract information | [Contract](https://www.gate.com/docs/developers/apiv4/en/#schemacontract) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contracts/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contracts/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT",\
"type": "direct",\
"quanto_multiplier": "0.0001",\
"ref_discount_rate": "0",\
"order_price_deviate": "0.5",\
"maintenance_rate": "0.005",\
"mark_type": "index",\
"last_price": "38026",\
"mark_price": "37985.6",\
"index_price": "37954.92",\
"funding_rate_indicative": "0.000219",\
"mark_price_round": "0.01",\
"funding_offset": 0,\
"in_delisting": false,\
"risk_limit_base": "1000000",\
"interest_rate": "0.0003",\
"order_price_round": "0.1",\
"order_size_min": 1,\
"ref_rebate_rate": "0.2",\
"funding_interval": 28800,\
"risk_limit_step": "1000000",\
"leverage_min": "1",\
"leverage_max": "100",\
"risk_limit_max": "8000000",\
"maker_fee_rate": "-0.00025",\
"taker_fee_rate": "0.00075",\
"funding_rate": "0.002053",\
"order_size_max": 1000000,\
"funding_next_apply": 1610035200,\
"short_users": 977,\
"config_change_time": 1609899548,\
"trade_size": 28530850594,\
"position_size": 5223816,\
"long_users": 455,\
"funding_impact_value": "60000",\
"orders_limit": 50,\
"trade_id": 10851092,\
"orderbook_id": 2129638396,\
"enable_bonus": true,\
"enable_credit": true,\
"create_time": 1669688556,\
"funding_cap_ratio": "0.75",\
"status": "trading",\
"launch_time": 1609899548,\
"delisting_time": 1609899548,\
"delisted_time": 1609899548\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-depth-information) Query futures market depth information\
\
`GET /futures/{settle}/order_book`\
\
_Query futures market depth information_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-32) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/order_book'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/order_book?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-transaction-records) Futures market transaction records\
\
`GET /futures/{settle}/trades`\
\
_Futures market transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list.This field is no longer supported. For new requests, please use the fromand tofields to specify the time rang |\
| from | query | integer(int64) | false | Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items. |\
| to | query | integer(int64) | false | Specify end time in Unix seconds, default to current time. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-23) Detailed descriptions\
\
**from**: Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items.\
If items between `from` and `to` are more than `limit`, only `limit` number will be returned.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-33) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/trades'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/trades?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-k-line-chart) Futures market K-line chart\
\
`GET /futures/{settle}/candlesticks`\
\
_Futures market K-line chart_\
\
Return specified contract candlesticks.\
If prefix `contract` with `mark_`, the contract's mark price candlesticks are returned;\
if prefix with `index_`, index price candlesticks will be returned.\
\
Maximum of 2000 points are returned in one query. Be sure not to exceed the limit when specifying `from`, `to` and `interval`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Interval time between data points. Note that `1w` means natural week(Mon-Sun), while `7d` means every 7d since unix 0. 30d represents a natural month, not 30 days |\
| timezone | query | string | false | Time zone: all/utc0/utc8, default utc0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-34) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[data point in every timestamp\] |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
| »» sum | string | Trading volume (unit: Quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/candlesticks'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/candlesticks?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032",\
    "sum": "3580"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#premium-index-k-line-chart) Premium Index K-line chart\
\
`GET /futures/{settle}/premium_index`\
\
_Premium Index K-line chart_\
\
Maximum of 1000 points can be returned in a query. Be sure not to exceed the limit when specifying from, to and interval\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-35) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
| interval | 10s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 4h |\
| interval | 8h |\
| interval | 1d |\
| interval | 7d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» c | string | Close price |\
| »» h | string | Highest price |\
| »» l | string | Lowest price |\
| »» o | string | Open price |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/premium_index'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/premium_index?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "c": "0",\
    "h": "0.00023",\
    "l": "0",\
    "o": "0"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-all-futures-trading-statistics) Get all futures trading statistics\
\
`GET /futures/{settle}/tickers`\
\
_Get all futures trading statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-36) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » contract | string | Futures contract |\
| » last | string | Last trading price |\
| » change\_percentage | string | Price change percentage. Negative values indicate price decrease, e.g. -7.45 |\
| » total\_size | string | Contract total size |\
| » low\_24h | string | 24-hour lowest price |\
| » high\_24h | string | 24-hour highest price |\
| » volume\_24h | string | 24-hour trading volume |\
| » volume\_24h\_btc | string | 24-hour trading volume in BTC (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_usd | string | 24-hour trading volume in USD (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_base | string | 24-hour trading volume in base currency |\
| » volume\_24h\_quote | string | 24-hour trading volume in quote currency |\
| » volume\_24h\_settle | string | 24-hour trading volume in settle currency |\
| » mark\_price | string | Recent mark price |\
| » funding\_rate | string | Funding rate |\
| » funding\_rate\_indicative | string | Indicative Funding rate in next period. (deprecated. use `funding_rate`) |\
| » index\_price | string | Index price |\
| » quanto\_base\_rate | string | Exchange rate of base currency and settlement currency in Quanto contract. Does not exists in contracts of other types |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | The latest seller's lowest price order quantity |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | The latest buyer's highest price order volume |\
| » change\_utc0 | string | Percentage change at utc0. Negative values indicate a drop, e.g., -7.45% |\
| » change\_utc8 | string | Percentage change at utc8. Negative values indicate a drop, e.g., -7.45% |\
| » change\_price | string | 24h change amount. Negative values indicate a drop, e.g., -7.45 |\
| » change\_utc0\_price | string | Change amount at utc0. Negative values indicate a drop, e.g., -7.45 |\
| » change\_utc8\_price | string | Change amount at utc8. Negative values indicate a drop, e.g., -7.45 |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "last": "6432",\
    "low_24h": "6278",\
    "high_24h": "6790",\
    "change_percentage": "4.43",\
    "total_size": "32323904",\
    "volume_24h": "184040233284",\
    "volume_24h_btc": "28613220",\
    "volume_24h_usd": "184040233284",\
    "volume_24h_base": "28613220",\
    "volume_24h_quote": "184040233284",\
    "volume_24h_settle": "28613220",\
    "mark_price": "6534",\
    "funding_rate": "0.0001",\
    "funding_rate_indicative": "0.0001",\
    "index_price": "6531",\
    "highest_bid": "34089.7",\
    "highest_size": "100",\
    "lowest_ask": "34217.9",\
    "lowest_size": "1000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-historical-funding-rate) Futures market historical funding rate\
\
`GET /futures/{settle}/funding_rate`\
\
_Futures market historical funding rate_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-24) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-37) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | History query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » r | string | Funding rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/funding_rate'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/funding_rate?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "r": "0.000157"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-insurance-fund-history) Futures market insurance fund history\
\
`GET /futures/{settle}/insurance`\
\
_Futures market insurance fund history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-38) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » b | string | Insurance balance |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/insurance'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/insurance \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "b": "83.0031"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-statistics) Futures statistics\
\
`GET /futures/{settle}/contract_stats`\
\
_Futures statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start timestamp |\
| interval | query | string | false | none |\
| limit | query | integer | false | none |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-39) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Stat timestamp |\
| » lsr\_taker | number | Long/short taker ratio |\
| » lsr\_account | number | Long/short position user ratio |\
| » long\_liq\_size | integer(int64) | Long liquidation size (contracts) |\
| » long\_liq\_amount | number(double) | Long liquidation amount (base currency) |\
| » long\_liq\_usd | number(double) | Long liquidation volume (quote currency) |\
| » short\_liq\_size | integer(int64) | Short liquidation size (contracts) |\
| » short\_liq\_amount | number(double) | Short liquidation amount (base currency) |\
| » short\_liq\_usd | number(double) | Short liquidation volume (quote currency) |\
| » open\_interest | integer(int64) | Total open interest size (contracts) |\
| » open\_interest\_usd | number(double) | Total open interest volume (quote currency) |\
| » top\_lsr\_account | number(double) | Top trader long/short account ratio |\
| » top\_lsr\_size | number(double) | Top trader long/short position ratio |\
| » mark\_price | number(double) | Mark price |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/contract_stats'\
query_param = 'contract=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/contract_stats?contract=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1603865400,\
    "lsr_taker": 100,\
    "lsr_account": 0.5,\
    "long_liq_size": 0,\
    "short_liq_size": 0,\
    "open_interest": 124724,\
    "short_liq_usd": 0,\
    "mark_price": "8865",\
    "top_lsr_size": 1.02,\
    "short_liq_amount": 0,\
    "long_liq_amount": 0,\
    "open_interest_usd": 1511,\
    "top_lsr_account": 1.5,\
    "long_liq_usd": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-index-constituents) Query index constituents\
\
`GET /futures/{settle}/index_constituents/{index}`\
\
_Query index constituents_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| index | path | string | true | Index name |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-40) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » index | string | Index name |\
| » constituents | array | Constituents |\
| »» IndexConstituent | object | none |\
| »»» exchange | string | Exchange |\
| »»» symbols | array | Symbol list |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/index_constituents/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/index_constituents/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"index": "BTC_USDT",\
"constituents": [\
    {\
      "exchange": "Binance",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    },\
    {\
      "exchange": "Gate.com",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    },\
    {\
      "exchange": "Huobi",\
      "symbols": [\
        "BTC_USDT"\
      ]\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-order-history) Query liquidation order history\
\
`GET /futures/{settle}/liq_orders`\
\
_Query liquidation order history_\
\
The time interval between from and to is maximum 3600. Some private fields are not returned by public interfaces, refer to field descriptions for details\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-25) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-41) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » size | integer(int64) | User position size |\
| » order\_size | integer(int64) | Number of forced liquidation orders |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | System liquidation order maker size |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/liq_orders'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/liq_orders \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "order_size": -600,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-tiers) Query risk limit tiers\
\
`GET /futures/{settle}/risk_limit_tiers`\
\
_Query risk limit tiers_\
\
When the 'contract' parameter is not passed, the default is to query the risk limits for the top 100 markets. 'Limit' and 'offset' correspond to pagination queries at the market level, not to the length of the returned array. This only takes effect when the contract parameter is empty.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-42) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Retrieve risk limit configurations for different tiers under a specified contract\] |\
| » _None_ | object | Retrieve risk limit configurations for different tiers under a specified contract |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» contract | string | Market, only visible when market pagination is requested |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/risk_limit_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/risk_limit_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "maintenance_rate": "0.01",\
    "tier": 1,\
    "initial_rate": "0.02",\
    "leverage_max": "50",\
    "risk_limit": "20000",\
    "contract": "ZTX_USDT",\
    "deduction": "0"\
},\
{\
    "maintenance_rate": "0.013",\
    "tier": 2,\
    "initial_rate": "0.025",\
    "leverage_max": "40",\
    "risk_limit": "30000",\
    "contract": "ZTX_USDT",\
    "deduction": "60"\
},\
{\
    "maintenance_rate": "0.015",\
    "tier": 3,\
    "initial_rate": "0.02857",\
    "leverage_max": "35",\
    "risk_limit": "50000",\
    "contract": "ZTX_USDT",\
    "deduction": "120"\
},\
{\
    "maintenance_rate": "0.02",\
    "tier": 4,\
    "initial_rate": "0.03333",\
    "leverage_max": "30",\
    "risk_limit": "70000",\
    "contract": "ZTX_USDT",\
    "deduction": "370"\
},\
{\
    "maintenance_rate": "0.025",\
    "tier": 5,\
    "initial_rate": "0.04",\
    "leverage_max": "25",\
    "risk_limit": "100000",\
    "contract": "ZTX_USDT",\
    "deduction": "720"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-futures-account) Get futures account\
\
`GET /futures/{settle}/accounts`\
\
_Get futures account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-43) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-account-change-history) Query futures account change history\
\
`GET /futures/{settle}/account_book`\
\
_Query futures account change history_\
\
If the contract field is passed, only records containing this field after 2023-10-30 can be filtered.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-26) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit and withdrawal\
- pnl: Profit and loss from position reduction\
- fee: Trading fees\
- refr: Referrer rebates\
- fund: Funding fees\
- point\_dnw: Point card deposit and withdrawal\
- point\_fee: Point card trading fees\
- point\_refr: Point card referrer rebates\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-44) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Change time |\
| » change | string | Change amount |\
| » balance | string | Balance after change |\
| » type | string | Change types:<br>\- dnw: Deposit and withdrawal<br>\- pnl: Profit and loss from position reduction<br>\- fee: Trading fees<br>\- refr: Referrer rebates<br>\- fund: Funding fees<br>\- point\_dnw: Point card deposit and withdrawal<br>\- point\_fee: Point card trading fees<br>\- point\_refr: Point card referrer rebates<br>\- bonus\_offset: Trial fund deduction |\
| » text | string | Comment |\
| » contract | string | Futures contract, the field is only available for data after 2023-10-30 |\
| » trade\_id | string | trade id |\
| » id | string | Account change record ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-45) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
| type | bonus\_offset |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1682294400.123456,\
    "change": "0.000010152188",\
    "balance": "4.59316525194",\
    "text": "ETH_USD:6086261",\
    "type": "fee",\
    "contract": "ETH_USD",\
    "trade_id": "1",\
    "id": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-position-list) Get user position list\
\
`GET /futures/{settle}/positions`\
\
_Get user position list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| holding | query | boolean | false | Return only real positions - true, return all - false |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-46) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-single-position-information) Get single position information\
\
`GET /futures/{settle}/positions/{contract}`\
\
_Get single position information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-47) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/positions/BTC_USDT"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin) Update position margin\
\
`POST /futures/{settle}/positions/{contract}/margin`\
\
_Update position margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-48) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/margin'\
query_param = 'change=0.01'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/margin"\
query_param="change=0.01"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage) Update position leverage\
\
`POST /futures/{settle}/positions/{contract}/leverage`\
\
_Update position leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
| cross\_leverage\_limit | query | string | false | Cross margin leverage (valid only when `leverage` is 0) |\
| pid | query | integer(int32) | false | Product ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-49) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#switch-position-margin-mode) Switch Position Margin Mode\
\
`POST /futures/{settle}/positions/cross_mode`\
\
_Switch Position Margin Mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| body | body | object | true | none |\
| » mode | body | string | true | Cross margin or isolated margin mode. ISOLATED - isolated margin mode, CROSS - cross margin mode |\
| » contract | body | string | true | Futures market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-50) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/cross_mode'\
query_param = ''\
body='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/cross_mode"\
query_param=""\
body_param='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"mode": "ISOLATED",\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#switch-between-cross-and-isolated-margin-modes-under-hedge-mode) Switch Between Cross and Isolated Margin Modes Under Hedge Mode\
\
`POST /futures/{settle}/dual_comp/positions/cross_mode`\
\
_Switch Between Cross and Isolated Margin Modes Under Hedge Mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| body | body | object | true | none |\
| » mode | body | string | true | Cross margin or isolated margin mode. ISOLATED - isolated margin mode, CROSS - cross margin mode |\
| » contract | body | string | true | Futures market |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-51) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/cross_mode'\
query_param = ''\
body='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/cross_mode"\
query_param=""\
body_param='{"mode":"ISOLATED","contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"mode": "ISOLATED",\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit) Update position risk limit\
\
`POST /futures/{settle}/positions/{contract}/risk_limit`\
\
_Update position risk limit_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New risk limit value |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-52) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/positions/BTC_USDT/risk_limit'\
query_param = 'risk_limit=1000000'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/positions/BTC_USDT/risk_limit"\
query_param="risk_limit=1000000"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#set-position-mode) Set position mode\
\
`POST /futures/{settle}/dual_mode`\
\
_Set position mode_\
\
The prerequisite for changing mode is that all positions have no holdings and no pending orders\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| dual\_mode | query | boolean | true | Whether to enable dual mode |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-53) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Updated successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_mode'\
query_param = 'dual_mode=true'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_mode"\
query_param="dual_mode=true"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-position-information-in-dual-mode) Get position information in dual mode\
\
`GET /futures/{settle}/dual_comp/positions/{contract}`\
\
_Get position information in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-54) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/dual_comp/positions/BTC_USDT"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin-in-dual-mode) Update position margin in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/margin`\
\
_Update position margin in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
| dual\_side | query | string | true | Long or short position |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-55) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/margin'\
query_param = 'change=0.01&dual_side=dual_long'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/margin"\
query_param="change=0.01&dual_side=dual_long"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage-in-dual-mode) Update position leverage in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/leverage`\
\
_Update position leverage in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
| cross\_leverage\_limit | query | string | false | Cross margin leverage (valid only when `leverage` is 0) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-56) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit-in-dual-mode) Update position risk limit in dual mode\
\
`POST /futures/{settle}/dual_comp/positions/{contract}/risk_limit`\
\
_Update position risk limit in dual mode_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New risk limit value |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-57) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/dual_comp/positions/BTC_USDT/risk_limit'\
query_param = 'risk_limit=1000000'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/dual_comp/positions/BTC_USDT/risk_limit"\
query_param="risk_limit=1000000"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-futures-order) Place futures order\
\
`POST /futures/{settle}/orders`\
\
_Place futures order_\
\
- When placing an order, the number of contracts is specified `size`, not the number of coins. The number of coins corresponding to each contract is returned in the contract details interface\
`quanto_multiplier`\
- 0 The order that was completed cannot be obtained after 10 minutes of withdrawal, and the order will be mentioned that the order does not exist\
- Setting `reduce_only` to `true` can prevent the position from being penetrated when reducing the position\
- In single-position mode, if you need to close the position, you need to set `size` to 0 and `close` to `true`\
- In dual warehouse mode,\
- Reduce position: reduce\_only=true, size is a positive number that indicates short position, negative number that indicates long position\
- Add number that indicates adding long positions, and negative numbers indicate adding short positions\
- Close position: size=0, set the direction of closing position according to auto\_size, and set `reduce_only` to true\
at the same time - reduce\_only: Make sure to only perform position reduction operations to prevent increased positions\
- Set `stp_act` to determine the use of a strategy that restricts user transactions. For detailed usage, refer to the body parameter `stp_act`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) | true | none |\
| » contract | body | string | true | Futures contract |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » tif | body | string | false | Time in force |\
| » text | body | string | false | Custom order information. If not empty, must follow the rules below: |\
| » auto\_size | body | string | false | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
\
\|» limit\_vip\|body\|integer(int64)\|false\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|» pid\|body\|integer(int64)\|false\|Position ID\|\
\|settle\|path\|string\|true\|Settle currency\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-27) Detailed descriptions\
\
**» tif**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
\
**» text**: Custom order information. If not empty, must follow the rules below:\
\
1. Prefixed with `t-`\
2. No longer than 28 bytes without `t-` prefix\
3. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
In addition to user-defined information, the following are internal reserved fields that identify the order source:\
\
- web: Web\
- api: API call\
- app: Mobile app\
- auto\_deleveraging: Automatic deleveraging\
- liquidation: Forced liquidation of positions under the old classic mode\
- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode\
- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions\
- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode\
- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode\
- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode\
- insurance: Insurance\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-58) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
| » tif | fok |\
| » auto\_size | close\_long |\
| » auto\_size | close\_short |\
| » stp\_act | co |\
| » stp\_act | cn |\
| » stp\_act | cb |\
| » stp\_act | - |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = ''\
body='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/orders"\
query_param=""\
body_param='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"contract": "BTC_USDT",\
"size": 6024,\
"iceberg": 0,\
"price": "3765",\
"tif": "gtc",\
"text": "t-my-custom-id",\
"stp_act": "-"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list) Query futures order list\
\
`GET /futures/{settle}/orders`\
\
_Query futures order list_\
\
- Zero-fill order cannot be retrieved for 10 minutes after cancellation\
- Historical orders, by default, only data within the past 6 months is supported.\
If you need to query data for a longer period, please use `GET /futures/{settle}/orders_timerange`.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-28) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-59) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status) Cancel all orders with 'open' status\
\
`DELETE /futures/{settle}/orders`\
\
_Cancel all orders with 'open' status_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| contract | query | string | true | Futures contract |\
| side | query | string | false | Specify all buy orders or all sell orders, both are included if not specified. Set to bid to cancel all buy orders, set to ask to cancel all sell orders |\
| exclude\_reduce\_only | query | boolean | false | Whether to exclude reduce-only orders |\
| text | query | string | false | Remark for order cancellation |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-60) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders'\
query_param = 'contract=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/orders"\
query_param="contract=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list-by-time-range) Query futures order list by time range\
\
`GET /futures/{settle}/orders_timerange`\
\
_Query futures order list by time range_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-29) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-61) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-2) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders_timerange'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders_timerange"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-batch-futures-orders) Place batch futures orders\
\
`POST /futures/{settle}/batch_orders`\
\
_Place batch futures orders_\
\
- Up to 10 orders per request\
- If any of the order's parameters are missing or in the wrong format, all of them will not be executed, and a http status 400 error will be returned directly\
- If the parameters are checked and passed, all are executed. Even if there is a business logic error in the middle (such as insufficient funds), it will not affect other execution orders\
- The returned result is in array format, and the order corresponds to the orders in the request body\
- In the returned result, the `succeeded` field of type bool indicates whether the execution was successful or not\
- If the execution is successful, the normal order content is included; if the execution fails, the `label` field is included to indicate the cause of the error\
- In the rate limiting, each order is counted individually\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-62) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Futures order details\] |\
| » _None_ | object | Futures order details |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, only exists if execution fails |\
| »» detail | string | Error detail, only present if execution failed and details need to be given |\
| »» id | integer(int64) | Futures order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Futures contract |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» tif | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-63) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_orders'\
query_param = ''\
body='[{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_orders"\
query_param=""\
body_param='[{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "size": 6024,\
    "iceberg": 0,\
    "price": "3765",\
    "tif": "gtc",\
    "text": "t-my-custom-id",\
    "stp_act": "-"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "succeeded": true,\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-2) Query single order details\
\
`GET /futures/{settle}/orders/{order_id}`\
\
_Query single order details_\
\
- Zero-fill order cannot be retrieved for 10 minutes after cancellation\
- Historical orders, by default, only data within the past 6 months is supported.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-30) Detailed descriptions\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-64) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-2) Cancel single order\
\
`DELETE /futures/{settle}/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-31) Detailed descriptions\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-65) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-single-order-2) Amend single order\
\
`PUT /futures/{settle}/orders/{order_id}`\
\
_Amend single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | object | true | none |\
| » size | body | integer(int64) | false | New order size, including filled part. |\
| » price | body | string | false | New order price |\
| » amend\_text | body | string | false | Custom info during order amendment |\
| » text | body | string | false | Internal users can modify information in the text field. |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | Order ID returned, or user custom ID(i.e., `text` field). |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-32) Detailed descriptions\
\
**» size**: New order size, including filled part.\
\
- If new size is less than or equal to filled size, the order will be cancelled.\
- Order side must be identical to the original one.\
- Close order size cannot be changed.\
- For reduce only orders, increasing size may leads to other reduce only orders being cancelled.\
- If price is not changed, decreasing size will not change its precedence in order book, while increasing will move it to the last at current price.\
\
**order\_id**: Order ID returned, or user custom ID(i.e., `text` field).\
Operations based on custom ID can only be checked when the order is in orderbook. finished, it can be checked within 60 seconds after the end of the order. After that, only order ID is accepted.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-66) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/orders/12345'\
query_param = ''\
body='{"size":100,"price":"54321"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PUT', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PUT', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PUT"\
url="/futures/usdt/orders/12345"\
query_param=""\
body_param='{"size":100,"price":"54321"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"size": 100,\
"price": "54321"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-2) Query personal trading records\
\
`GET /futures/{settle}/my_trades`\
\
_Query personal trading records_\
\
By default, only data within the past 6 months is supported.\
If you need to query data for a longer period, please use `GET /futures/{settle}/my_trades_timerange`.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| order | query | integer(int64) | false | Futures order ID, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Specify the starting point for this list based on a previously retrieved id |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-33) Detailed descriptions\
\
**last\_id**: Specify the starting point for this list based on a previously retrieved id\
\
This parameter is deprecated. If you need to iterate through and retrieve more records, we recommend using 'GET /futures/{settle}/my\_trades\_timerange'.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-67) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-68) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-3) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-by-time-range) Query personal trading records by time range\
\
`GET /futures/{settle}/my_trades_timerange`\
\
_Query personal trading records by time range_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| role | query | string | false | Query role, maker or taker |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-34) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-69) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » trade\_id | string | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-70) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-4) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/my_trades_timerange'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/my_trades_timerange"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "trade_id": "121234231",\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-position-close-history) Query position close history\
\
`GET /futures/{settle}/position_close`\
\
_Query position close history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| side | query | string | false | Query side. long or shot |\
| pnl | query | string | false | Query profit or loss |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-35) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-71) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Position close time |\
| » contract | string | Futures contract |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » pnl\_pnl | string | PNL - Position P/L |\
| » pnl\_fund | string | PNL - Funding Fees |\
| » pnl\_fee | string | PNL - Transaction Fees |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » max\_size | string | Max Trade Size |\
| » accum\_size | string | Cumulative closed position volume |\
| » first\_open\_time | integer(int64) | First Open Time |\
| » long\_price | string | When side is 'long', it indicates the opening average price; when side is 'short', it indicates the closing average price |\
| » short\_price | string | When side is 'long', it indicates the closing average price; when side is 'short', it indicates the opening average price |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-72) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/position_close'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/position_close"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1546487347,\
    "pnl": "0.00013",\
    "pnl_pnl": "0.00011",\
    "pnl_fund": "0.00001",\
    "pnl_fee": "0.00001",\
    "side": "long",\
    "contract": "BTC_USDT",\
    "text": "web",\
    "max_size": "100",\
    "accum_size": "100",\
    "first_open_time": 1546487347,\
    "long_price": "2026.87",\
    "short_price": "2544.4"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-history) Query liquidation history\
\
`GET /futures/{settle}/liquidates`\
\
_Query liquidation history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| at | query | integer | false | Specify liquidation timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-36) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-73) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage. Not returned in public endpoints |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin. Not returned in public endpoints |\
| » entry\_price | string | Average entry price. Not returned in public endpoints |\
| » liq\_price | string | Liquidation price. Not returned in public endpoints |\
| » mark\_price | string | Mark price. Not returned in public endpoints |\
| » order\_id | integer(int64) | Liquidation order ID. Not returned in public endpoints |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | Liquidation order maker size |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/liquidates'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/liquidates"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "liq_price": "3421.54",\
    "mark_price": "3420.27",\
    "order_id": 317393847,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-adl-auto-deleveraging-order-information) Query ADL auto-deleveraging order information\
\
`GET /futures/{settle}/auto_deleverages`\
\
_Query ADL auto-deleveraging order information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| at | query | integer | false | Specify auto-deleveraging timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-37) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-74) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Automatic deleveraging time |\
| » user | integer(int64) | User ID |\
| » order\_id | integer(int64) | Order ID. Order IDs before 2023-02-20 are null |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage |\
| » cross\_leverage\_limit | string | Cross margin leverage (valid only when `leverage` is 0) |\
| » entry\_price | string | Average entry price |\
| » fill\_price | string | Average fill price |\
| » trade\_size | integer(int64) | Trading size |\
| » position\_size | integer(int64) | Positions after auto-deleveraging |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/auto_deleverages'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/auto_deleverages"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1675841679,\
    "contract": "ACH_USDT",\
    "order_id": 73873128,\
    "user": 1666,\
    "cross_leverage_limit": "0",\
    "leverage": "0",\
    "entry_price": "2649.648633636364",\
    "fill_price": "2790.8082",\
    "position_size": 1,\
    "trade_size": -10\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders-2) Countdown cancel orders\
\
`POST /futures/{settle}/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Heartbeat detection for contract orders: When the user-set `timeout` time is reached, if neither the existing countdown is canceled nor a new countdown is set, the relevant contract orders will be automatically canceled.\
This API can be called repeatedly to or cancel the countdown.\
Usage example: Repeatedly call this API at 30-second intervals, setting the `timeout` to 30 (seconds) each time.\
If this API is not called again within 30 seconds, all open orders on your specified `market` will be automatically canceled.\
If the `timeout` is set to 0 within 30 seconds, the countdown timer will terminate, and the automatic order cancellation function will be disabled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » contract | body | string | false | Futures contract |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-38) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-75) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"contract":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"contract":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"contract": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-trading-fee-rates) Query futures market trading fee rates\
\
`GET /futures/{settle}/fee`\
\
_Query futures market trading fee rates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract, return related data only if specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-76) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_FuturesFee_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » **additionalProperties** | object | The returned result is a map type, where the key represents the market and taker and maker fee rates |\
| »» taker\_fee | string | Taker fee |\
| »» maker\_fee | string | maker fee |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"1INCH_USDT": {\
    "taker_fee": "0.00025",\
    "maker_fee": "-0.00010"\
},\
"AAVE_USDT": {\
    "taker_fee": "0.00025",\
    "maker_fee": "-0.00010"\
}\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-batch-orders-by-specified-id-list-2) Cancel batch orders by specified ID list\
\
`POST /futures/{settle}/batch_cancel_orders`\
\
_Cancel batch orders by specified ID list_\
\
Multiple different order IDs can be specified, maximum 20 records per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[string\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-77) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order cancellation operation completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » FutureCancelOrderResult | object | Order cancellation result |\
| »» id | string | Order ID |\
| »» user\_id | integer(int64) | User ID |\
| »» succeeded | boolean | Whether cancellation succeeded |\
| »» message | string | Error description when cancellation fails, empty if successful |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_cancel_orders'\
query_param = ''\
body='["1","2","3"]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_cancel_orders"\
query_param=""\
body_param='["1","2","3"]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
"1",\
"2",\
"3"\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 111,\
    "id": "123456",\
    "succeeded": true,\
    "message": ""\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batch-modify-orders-by-specified-ids) Batch modify orders by specified IDs\
\
`POST /futures/{settle}/batch_amend_orders`\
\
_Batch modify orders by specified IDs_\
\
Multiple different order IDs can be specified, maximum 10 orders per request\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| x-gate-exptime | header | string | false | Specify the expiration time (milliseconds); if the GATE receives the request time greater than the expiration time, the request will be rejected |\
| body | body | array\[ [BatchAmendOrderReq](https://www.gate.com/docs/developers/apiv4/en/#schemabatchamendorderreq)\] | true | none |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-78) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Request execution completed | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Futures order details\] |\
| » _None_ | object | Futures order details |\
| »» succeeded | boolean | Request execution result |\
| »» label | string | Error label, only exists if execution fails |\
| »» detail | string | Error detail, only present if execution failed and details need to be given |\
| »» id | integer(int64) | Futures order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Futures contract |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» tif | string | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» stp\_act | string | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| »» stp\_id | integer | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-79) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/batch_amend_orders'\
query_param = ''\
body='[{"order_id":121212,"amend_text":"batch amend text","size":100,"price":"54321"}]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/batch_amend_orders"\
query_param=""\
body_param='[{"order_id":121212,"amend_text":"batch amend text","size":100,"price":"54321"}]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
{\
    "order_id": 121212,\
    "amend_text": "batch amend text",\
    "size": 100,\
    "price": "54321"\
}\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "succeeded": true,\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-table-by-table-id) Query risk limit table by table\_id\
\
`GET /futures/{settle}/risk_limit_table`\
\
_Query risk limit table by table\_id_\
\
Just pass table\_id\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| table\_id | query | string | true | Risk limit table ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-80) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Information for each tier of the gradient risk limit table |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/risk_limit_table'\
query_param = 'table_id=CYBER_USDT_20241122'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/futures/usdt/risk_limit_table?table_id=CYBER_USDT_20241122 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "tier": 1,\
    "risk_limit": "10000",\
    "initial_rate": "0.025",\
    "maintenance_rate": "0.015",\
    "leverage_max": "40",\
    "deduction": "0"\
},\
{\
    "tier": 2,\
    "risk_limit": "30000",\
    "initial_rate": "0.03333",\
    "maintenance_rate": "0.02",\
    "leverage_max": "30",\
    "deduction": "50"\
},\
{\
    "tier": 3,\
    "risk_limit": "50000",\
    "initial_rate": "0.04545",\
    "maintenance_rate": "0.03",\
    "leverage_max": "22",\
    "deduction": "350"\
},\
{\
    "tier": 4,\
    "risk_limit": "70000",\
    "initial_rate": "0.05555",\
    "maintenance_rate": "0.04",\
    "leverage_max": "18",\
    "deduction": "850"\
},\
{\
    "tier": 5,\
    "risk_limit": "100000",\
    "initial_rate": "0.1",\
    "maintenance_rate": "0.085",\
    "leverage_max": "10",\
    "deduction": "4000"\
},\
{\
    "tier": 6,\
    "risk_limit": "150000",\
    "initial_rate": "0.333",\
    "maintenance_rate": "0.3",\
    "leverage_max": "3",\
    "deduction": "25500"\
},\
{\
    "tier": 7,\
    "risk_limit": "200000",\
    "initial_rate": "0.5",\
    "maintenance_rate": "0.45",\
    "leverage_max": "2",\
    "deduction": "48000"\
},\
{\
    "tier": 8,\
    "risk_limit": "300000",\
    "initial_rate": "1",\
    "maintenance_rate": "0.95",\
    "leverage_max": "1",\
    "deduction": "148000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order-2) Create price-triggered order\
\
`POST /futures/{settle}/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) | true | none |\
| » initial | body | object | true | none |\
| »» contract | body | string | true | Futures contract |\
| »» size | body | integer(int64) | false | Represents the number of contracts that need to be closed, full closing: size=0 |\
| »» price | body | string | true | Order price. Set to 0 to use market price |\
| »» close | body | boolean | false | When all positions are closed in a single position mode, it must be set to true to perform the closing operation |\
| »» tif | body | string | false | Time in force strategy, default is gtc, market orders currently only support ioc mode |\
| »» text | body | string | false | The source of the order, including: |\
| »» reduce\_only | body | boolean | false | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| »» auto\_size | body | string | false | Single position mode: auto\_size is not required |\
| » trigger | body | object | true | none |\
| »» strategy\_type | body | integer(int32) | false | Trigger Strategy |\
| »» price\_type | body | integer(int32) | false | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| »» price | body | string | false | Price value for price trigger, or spread value for spread trigger |\
| »» rule | body | integer(int32) | false | Price Condition Type |\
| »» expiration | body | integer | false | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » order\_type | body | string | false | Types of take-profit and stop-loss orders, including: |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-39) Detailed descriptions\
\
**»» size**: Represents the number of contracts that need to be closed, full closing: size=0\
Partial closing: plan-close-short-position size>0\
Partial closing: plan-close-long-position size<0\
\
**»» close**: When all positions are closed in a single position mode, it must be set to true to perform the closing operation\
When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false\
\
**»» tif**: Time in force strategy, default is gtc, market orders currently only support ioc mode\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
**»» auto\_size**: Single position mode: auto\_size is not required\
Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions\
Dual position mode partial closing (size≠0): auto\_size is not required\
\
**»» strategy\_type**: Trigger Strategy\
\
- 0: Price trigger, triggered when price meets conditions\
- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price\
Currently only supports 0 (latest transaction price)\
\
**»» rule**: Price Condition Type\
\
- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price\
- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price\
\
**» order\_type**: Types of take-profit and stop-loss orders, including:\
\
- `close-long-order`: Order take-profit/stop-loss, close long position\
- `close-short-order`: Order take-profit/stop-loss, close short position\
- `close-long-position`: Position take-profit/stop-loss, used to close all long positions\
- `close-short-position`: Position take-profit/stop-loss, used to close all short positions\
- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions\
- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions\
\
The two types of order take-profit/stop-loss are read-only and cannot be passed in requests\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-81) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» tif | gtc |\
| »» tif | ioc |\
| »» strategy\_type | 0 |\
| »» strategy\_type | 1 |\
| »» price\_type | 0 |\
| »» price\_type | 1 |\
| »» price\_type | 2 |\
| »» rule | 1 |\
| »» rule | 2 |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = ''\
body='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/futures/usdt/price_orders"\
query_param=""\
body_param='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"order_type": "close-long-order"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-auto-order-list) Query auto order list\
\
`GET /futures/{settle}/price_orders`\
\
_Query auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-82) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders-2) Cancel all auto orders\
\
`DELETE /futures/{settle}/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-83) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/price_orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details-2) Query single auto order details\
\
`GET /futures/{settle}/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-84) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/futures/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order-2) Cancel single auto order\
\
`DELETE /futures/{settle}/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-85) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | btc |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/futures/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/futures/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#delivery) Delivery\
\
Delivery contract\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-all-futures-contracts-2) Query all futures contracts\
\
`GET /delivery/{settle}/contracts`\
\
_Query all futures contracts_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-86) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [DeliveryContract](https://www.gate.com/docs/developers/apiv4/en/#schemadeliverycontract)\] |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/contracts'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/contracts \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT_20200814",\
    "underlying": "BTC_USDT",\
    "cycle": "WEEKLY",\
    "type": "direct",\
    "quanto_multiplier": "0.0001",\
    "mark_type": "index",\
    "last_price": "9017",\
    "mark_price": "9019",\
    "index_price": "9005.3",\
    "basis_rate": "0.185095",\
    "basis_value": "13.7",\
    "basis_impact_value": "100000",\
    "settle_price": "0",\
    "settle_price_interval": 60,\
    "settle_price_duration": 1800,\
    "settle_fee_rate": "0.0015",\
    "expire_time": 1593763200,\
    "order_price_round": "0.1",\
    "mark_price_round": "0.1",\
    "leverage_min": "1",\
    "leverage_max": "100",\
    "maintenance_rate": "1000000",\
    "risk_limit_base": "140.726652109199",\
    "risk_limit_step": "1000000",\
    "risk_limit_max": "8000000",\
    "maker_fee_rate": "-0.00025",\
    "taker_fee_rate": "0.00075",\
    "ref_discount_rate": "0",\
    "ref_rebate_rate": "0.2",\
    "order_price_deviate": "0.5",\
    "order_size_min": 1,\
    "order_size_max": 1000000,\
    "orders_limit": 50,\
    "orderbook_id": 63,\
    "trade_id": 26,\
    "trade_size": 435,\
    "position_size": 130,\
    "config_change_time": 1593158867,\
    "in_delisting": false\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-contract-information-2) Query single contract information\
\
`GET /delivery/{settle}/contracts/{contract}`\
\
_Query single contract information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-87) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Contract information | [DeliveryContract](https://www.gate.com/docs/developers/apiv4/en/#schemadeliverycontract) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/contracts/BTC_USDT_20200814'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/contracts/BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT_20200814",\
"underlying": "BTC_USDT",\
"cycle": "WEEKLY",\
"type": "direct",\
"quanto_multiplier": "0.0001",\
"mark_type": "index",\
"last_price": "9017",\
"mark_price": "9019",\
"index_price": "9005.3",\
"basis_rate": "0.185095",\
"basis_value": "13.7",\
"basis_impact_value": "100000",\
"settle_price": "0",\
"settle_price_interval": 60,\
"settle_price_duration": 1800,\
"settle_fee_rate": "0.0015",\
"expire_time": 1593763200,\
"order_price_round": "0.1",\
"mark_price_round": "0.1",\
"leverage_min": "1",\
"leverage_max": "100",\
"maintenance_rate": "1000000",\
"risk_limit_base": "140.726652109199",\
"risk_limit_step": "1000000",\
"risk_limit_max": "8000000",\
"maker_fee_rate": "-0.00025",\
"taker_fee_rate": "0.00075",\
"ref_discount_rate": "0",\
"ref_rebate_rate": "0.2",\
"order_price_deviate": "0.5",\
"order_size_min": 1,\
"order_size_max": 1000000,\
"orders_limit": 50,\
"orderbook_id": 63,\
"trade_id": 26,\
"trade_size": 435,\
"position_size": 130,\
"config_change_time": 1593158867,\
"in_delisting": false\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-market-depth-information-2) Query futures market depth information\
\
`GET /delivery/{settle}/order_book`\
\
_Query futures market depth information_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-88) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| interval | 0 |\
| interval | 0.1 |\
| interval | 0.01 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/order_book'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/order_book?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-transaction-records-2) Futures market transaction records\
\
`GET /delivery/{settle}/trades`\
\
_Futures market transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list.This field is no longer supported. For new requests, please use the fromand tofields to specify the time rang |\
| from | query | integer(int64) | false | Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items. |\
| to | query | integer(int64) | false | Specify end time in Unix seconds, default to current time. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-40) Detailed descriptions\
\
**from**: Specify starting time in Unix seconds. If not specified, `to` and `limit` will be used to limit response items.\
If items between `from` and `to` are more than `limit`, only `limit` number will be returned.\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-89) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/trades'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/trades?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-k-line-chart-2) Futures market K-line chart\
\
`GET /delivery/{settle}/candlesticks`\
\
_Futures market K-line chart_\
\
Return specified contract candlesticks.\
If prefix `contract` with `mark_`, the contract's mark price candlesticks are returned;\
if prefix with `index_`, index price candlesticks will be returned.\
\
Maximum of 2000 points are returned in one query. Be sure not to exceed the limit when specifying `from`, `to` and `interval`\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | true | Futures contract |\
| from | query | integer(int64) | false | Start time of candlesticks, formatted in Unix timestamp in seconds. Default to `to - 100 * interval` if not specified |\
| to | query | integer(int64) | false | Specify the end time of the K-line chart, defaults to current time if not specified, note that the time format is Unix timestamp with second precision |\
| limit | query | integer | false | Maximum number of recent data points to return. `limit` conflicts with `from` and `to`. If either `from` or `to` is specified, request will be rejected. |\
| interval | query | string | false | Time interval between data points, note that 1w represents a natural week, 7d time is aligned with Unix initial time |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-90) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| interval | 10s |\
| interval | 30s |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
| interval | 2h |\
| interval | 4h |\
| interval | 6h |\
| interval | 8h |\
| interval | 12h |\
| interval | 1d |\
| interval | 7d |\
| interval | 1w |\
| interval | 30d |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/candlesticks'\
query_param = 'contract=BTC_USDT_20200814'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/candlesticks?contract=BTC_USDT_20200814 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-all-futures-trading-statistics-2) Get all futures trading statistics\
\
`GET /delivery/{settle}/tickers`\
\
_Get all futures trading statistics_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-91) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » contract | string | Futures contract |\
| » last | string | Last trading price |\
| » change\_percentage | string | Price change percentage. Negative values indicate price decrease, e.g. -7.45 |\
| » total\_size | string | Contract total size |\
| » low\_24h | string | 24-hour lowest price |\
| » high\_24h | string | 24-hour highest price |\
| » volume\_24h | string | 24-hour trading volume |\
| » volume\_24h\_btc | string | 24-hour trading volume in BTC (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_usd | string | 24-hour trading volume in USD (deprecated, use `volume_24h_base`, `volume_24h_quote`, `volume_24h_settle` instead) |\
| » volume\_24h\_base | string | 24-hour trading volume in base currency |\
| » volume\_24h\_quote | string | 24-hour trading volume in quote currency |\
| » volume\_24h\_settle | string | 24-hour trading volume in settle currency |\
| » mark\_price | string | Recent mark price |\
| » funding\_rate | string | Funding rate |\
| » funding\_rate\_indicative | string | Indicative Funding rate in next period. (deprecated. use `funding_rate`) |\
| » index\_price | string | Index price |\
| » quanto\_base\_rate | string | Exchange rate of base currency and settlement currency in Quanto contract. Does not exists in contracts of other types |\
| » basis\_rate | string | Basis rate |\
| » basis\_value | string | Basis value |\
| » lowest\_ask | string | Recent lowest ask |\
| » lowest\_size | string | The latest seller's lowest price order quantity |\
| » highest\_bid | string | Recent highest bid |\
| » highest\_size | string | The latest buyer's highest price order volume |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/tickers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/tickers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "contract": "BTC_USDT",\
    "last": "6432",\
    "low_24h": "6278",\
    "high_24h": "6790",\
    "change_percentage": "4.43",\
    "total_size": "32323904",\
    "volume_24h": "184040233284",\
    "volume_24h_btc": "28613220",\
    "volume_24h_usd": "184040233284",\
    "volume_24h_base": "28613220",\
    "volume_24h_quote": "184040233284",\
    "volume_24h_settle": "28613220",\
    "mark_price": "6534",\
    "funding_rate": "0.0001",\
    "funding_rate_indicative": "0.0001",\
    "index_price": "6531",\
    "highest_bid": "34089.7",\
    "highest_size": "100",\
    "lowest_ask": "34217.9",\
    "lowest_size": "1000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futures-market-insurance-fund-history-2) Futures market insurance fund history\
\
`GET /delivery/{settle}/insurance`\
\
_Futures market insurance fund history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-92) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » t | integer(int64) | Unix timestamp in seconds |\
| » b | string | Insurance balance |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/insurance'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/insurance \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1543968000,\
    "b": "83.0031"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-futures-account-2) Get futures account\
\
`GET /delivery/{settle}/accounts`\
\
_Get futures account_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-93) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | string | total is the balance after the user's accumulated deposit, withdraw, profit and loss (including realized profit and loss, fund, fee and referral rebate), excluding unrealized profit and loss. <br>total = SUM(history\_dnw, history\_pnl, history\_fee, history\_refr, history\_fund) |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » position\_margin | string | Position margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » available | string | Refers to the available withdrawal or trading amount in per-position, specifically the per-position available balance under the unified account that includes the credit line (which incorporates trial funds; since trial funds cannot be withdrawn, the actual withdrawal amount needs to deduct the trial fund portion when processing withdrawals) |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » in\_dual\_mode | boolean | Whether dual mode is enabled |\
| » position\_mode | string | Position mode: single - one-way, dual - dual-side, split - sub-positions (in\_dual\_mode is deprecated) |\
| » enable\_credit | boolean | Whether portfolio margin account mode is enabled |\
| » position\_initial\_margin | string | Initial margin occupied by positions, applicable to unified account mode |\
| » maintenance\_margin | string | Maintenance margin occupied by positions, applicable to new classic account margin mode and unified account mode |\
| » bonus | string | Bonus |\
| » enable\_evolved\_classic | boolean | Classic account margin mode, true-new mode, false-old mode |\
| » cross\_order\_margin | string | Cross margin order margin, applicable to new classic account margin mode |\
| » cross\_initial\_margin | string | Cross margin initial margin, applicable to new classic account margin mode |\
| » cross\_maintenance\_margin | string | Cross margin maintenance margin, applicable to new classic account margin mode |\
| » cross\_unrealised\_pnl | string | Cross margin unrealized P&L, applicable to new classic account margin mode |\
| » cross\_available | string | Cross margin available balance, applicable to new classic account margin mode |\
| » cross\_margin\_balance | string | Cross margin balance, applicable to new classic account margin mode |\
| » cross\_mmr | string | Cross margin maintenance margin rate, applicable to new classic account margin mode |\
| » cross\_imr | string | Cross margin initial margin rate, applicable to new classic account margin mode |\
| » isolated\_position\_margin | string | Isolated position margin, applicable to new classic account margin mode |\
| » enable\_new\_dual\_mode | boolean | Whether to open a new two-way position mode |\
| » margin\_mode | integer | Margin mode, 0-classic margin mode, 1-cross-currency margin mode, 2-combined margin mode |\
| » enable\_tiered\_mm | boolean | Whether to enable tiered maintenance margin calculation |\
| » position\_voucher\_total | string | Total Position Experience Coupon Amount in Account |\
| » history | object | Statistical data |\
| »» dnw | string | total amount of deposit and withdraw |\
| »» pnl | string | total amount of trading profit and loss |\
| »» fee | string | total amount of fee |\
| »» refr | string | total amount of referrer rebates |\
| »» fund | string | total amount of funding costs |\
| »» point\_dnw | string | total amount of point deposit and withdraw |\
| »» point\_fee | string | total amount of point fee |\
| »» point\_refr | string | total amount of referrer rebates of point fee |\
| »» bonus\_dnw | string | total amount of perpetual contract bonus transfer |\
| »» bonus\_offset | string | total amount of perpetual contract bonus deduction |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 1666,\
"currency": "USDT",\
"total": "9707.803567115145",\
"unrealised_pnl": "3371.248828",\
"position_margin": "38.712189181",\
"order_margin": "0",\
"available": "9669.091377934145",\
"point": "0",\
"bonus": "0",\
"in_dual_mode": false,\
"enable_evolved_classic": false,\
"cross_initial_margin": "61855.56788525",\
"cross_maintenance_margin": "682.04678105",\
"cross_order_margin": "0",\
"cross_unrealised_pnl": "1501.178222634128",\
"cross_available": "27549.406108813951",\
"cross_margin_balance": "10371.77306201952",\
"cross_mmr": "797.2134",\
"cross_imr": "116.6097",\
"isolated_position_margin": "0",\
"history": {\
    "dnw": "10000",\
    "pnl": "68.3685",\
    "fee": "-1.645812875",\
    "refr": "0",\
    "fund": "-358.919120009855",\
    "point_dnw": "0",\
    "point_fee": "0",\
    "point_refr": "0",\
    "bonus_dnw": "0",\
    "bonus_offset": "0"\
},\
"enable_tiered_mm": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-account-change-history-2) Query futures account change history\
\
`GET /delivery/{settle}/account_book`\
\
_Query futures account change history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-41) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit and withdrawal\
- pnl: Profit and loss from position reduction\
- fee: Trading fees\
- refr: Referrer rebates\
- fund: Funding fees\
- point\_dnw: Point card deposit and withdrawal\
- point\_fee: Point card trading fees\
- point\_refr: Point card referrer rebates\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-94) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Change time |\
| » change | string | Change amount |\
| » balance | string | Balance after change |\
| » type | string | Change types:<br>\- dnw: Deposit and withdrawal<br>\- pnl: Profit and loss from position reduction<br>\- fee: Trading fees<br>\- refr: Referrer rebates<br>\- fund: Funding fees<br>\- point\_dnw: Point card deposit and withdrawal<br>\- point\_fee: Point card trading fees<br>\- point\_refr: Point card referrer rebates<br>\- bonus\_offset: Trial fund deduction |\
| » text | string | Comment |\
| » contract | string | Futures contract, the field is only available for data after 2023-10-30 |\
| » trade\_id | string | trade id |\
| » id | string | Account change record ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-95) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | dnw |\
| type | pnl |\
| type | fee |\
| type | refr |\
| type | fund |\
| type | point\_dnw |\
| type | point\_fee |\
| type | point\_refr |\
| type | bonus\_offset |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1682294400.123456,\
    "change": "0.000010152188",\
    "balance": "4.59316525194",\
    "text": "ETH_USD:6086261",\
    "type": "fee",\
    "contract": "ETH_USD",\
    "trade_id": "1",\
    "id": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-position-list-2) Get user position list\
\
`GET /delivery/{settle}/positions`\
\
_Get user position list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-96) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 10000,\
    "contract": "BTC_USDT",\
    "size": -9440,\
    "leverage": "0",\
    "risk_limit": "100",\
    "leverage_max": "100",\
    "maintenance_rate": "0.005",\
    "value": "3568.62",\
    "margin": "4.431548146258",\
    "entry_price": "3779.55",\
    "liq_price": "99999999",\
    "mark_price": "3780.32",\
    "unrealised_pnl": "-0.000507486844",\
    "realised_pnl": "0.045543982432",\
    "pnl_pnl": "0.045543982432",\
    "pnl_fund": "0",\
    "pnl_fee": "0",\
    "history_pnl": "0",\
    "last_close_pnl": "0",\
    "realised_point": "0",\
    "history_point": "0",\
    "adl_ranking": 5,\
    "pending_orders": 16,\
    "close_order": {\
      "id": 232323,\
      "price": "3779",\
      "is_liq": false\
    },\
    "mode": "single",\
    "update_time": 1684994406,\
    "update_id": 1,\
    "cross_leverage_limit": "0",\
    "risk_limit_table": "BIG_HOT_COIN_50X_V2",\
    "average_maintenance_rate": "0.005"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-single-position-information-2) Get single position information\
\
`GET /delivery/{settle}/positions/{contract}`\
\
_Get single position information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-97) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/positions/BTC_USDT_20200814"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-margin-2) Update position margin\
\
`POST /delivery/{settle}/positions/{contract}/margin`\
\
_Update position margin_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| change | query | string | true | Margin change amount, positive number increases, negative number decreases |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-98) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/margin'\
query_param = 'change=0.01'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/margin"\
query_param="change=0.01"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-leverage-2) Update position leverage\
\
`POST /delivery/{settle}/positions/{contract}/leverage`\
\
_Update position leverage_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| leverage | query | string | true | New position leverage |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-99) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/leverage'\
query_param = 'leverage=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/leverage"\
query_param="leverage=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#update-position-risk-limit-2) Update position risk limit\
\
`POST /delivery/{settle}/positions/{contract}/risk_limit`\
\
_Update position risk limit_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | path | string | true | Futures contract |\
| risk\_limit | query | string | true | New position risk limit |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-100) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Position information | [Position](https://www.gate.com/docs/developers/apiv4/en/#schemaposition) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/positions/BTC_USDT_20200814/risk_limit'\
query_param = 'risk_limit=10'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/positions/BTC_USDT_20200814/risk_limit"\
query_param="risk_limit=10"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 10000,\
"contract": "BTC_USDT",\
"size": -9440,\
"leverage": "0",\
"risk_limit": "100",\
"leverage_max": "100",\
"maintenance_rate": "0.005",\
"value": "3568.62",\
"margin": "4.431548146258",\
"entry_price": "3779.55",\
"liq_price": "99999999",\
"mark_price": "3780.32",\
"unrealised_pnl": "-0.000507486844",\
"realised_pnl": "0.045543982432",\
"pnl_pnl": "0.045543982432",\
"pnl_fund": "0",\
"pnl_fee": "0",\
"history_pnl": "0",\
"last_close_pnl": "0",\
"realised_point": "0",\
"history_point": "0",\
"adl_ranking": 5,\
"pending_orders": 16,\
"close_order": {\
    "id": 232323,\
    "price": "3779",\
    "is_liq": false\
},\
"mode": "single",\
"update_time": 1684994406,\
"update_id": 1,\
"cross_leverage_limit": "0",\
"risk_limit_table": "BIG_HOT_COIN_50X_V2",\
"average_maintenance_rate": "0.005"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-futures-order-2) Place futures order\
\
`POST /delivery/{settle}/orders`\
\
_Place futures order_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) | true | none |\
| » contract | body | string | true | Futures contract |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » tif | body | string | false | Time in force |\
| » text | body | string | false | Custom order information. If not empty, must follow the rules below: |\
| » auto\_size | body | string | false | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| » stp\_act | body | string | false | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies |\
\
\|» limit\_vip\|body\|integer(int64)\|false\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|» pid\|body\|integer(int64)\|false\|Position ID\|\
\|settle\|path\|string\|true\|Settle currency\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-42) Detailed descriptions\
\
**» tif**: Time in force\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled, taker only\
- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee\
- fok: FillOrKill, fill either completely or none\
\
**» text**: Custom order information. If not empty, must follow the rules below:\
\
1. Prefixed with `t-`\
2. No longer than 28 bytes without `t-` prefix\
3. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
\
In addition to user-defined information, the following are internal reserved fields that identify the order source:\
\
- web: Web\
- api: API call\
- app: Mobile app\
- auto\_deleveraging: Automatic deleveraging\
- liquidation: Forced liquidation of positions under the old classic mode\
- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode\
- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions\
- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode\
- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode\
- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode\
- insurance: Insurance\
\
**» stp\_act**: Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies\
\
1. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.\
2. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.\
3. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'\
\
- cn: Cancel newest, cancel new orders and keep old ones\
- co: Cancel oldest, cancel old orders and keep new ones\
- cb: Cancel both, both old and new orders will be cancelled\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-101) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
| » tif | fok |\
| » auto\_size | close\_long |\
| » auto\_size | close\_short |\
| » stp\_act | co |\
| » stp\_act | cn |\
| » stp\_act | cb |\
| » stp\_act | - |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = ''\
body='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/orders"\
query_param=""\
body_param='{"contract":"BTC_USDT","size":6024,"iceberg":0,"price":"3765","tif":"gtc","text":"t-my-custom-id","stp_act":"-"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"contract": "BTC_USDT",\
"size": 6024,\
"iceberg": 0,\
"price": "3765",\
"tif": "gtc",\
"text": "t-my-custom-id",\
"stp_act": "-"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-futures-order-list-2) Query futures order list\
\
`GET /delivery/{settle}/orders`\
\
_Query futures order list_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Futures contract |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| count\_total | query | integer | false | Whether to return total number matched, defaults to 0 (no return) |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-43) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-102) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| count\_total | 0 |\
| count\_total | 1 |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-5) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
| 200 | X-Pagination-Total | integer |  | Total number matched, only returned if `count_total` is set to 1 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status-2) Cancel all orders with 'open' status\
\
`DELETE /delivery/{settle}/orders`\
\
_Cancel all orders with 'open' status_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Futures contract |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-103) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| side | ask |\
| side | bid |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[ [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders'\
query_param = 'contract=BTC_USDT_20200814'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/orders"\
query_param="contract=BTC_USDT_20200814"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 15675394,\
    "user": 100000,\
    "contract": "BTC_USDT",\
    "create_time": 1546569968,\
    "size": 6024,\
    "iceberg": 0,\
    "left": 6024,\
    "price": "3765",\
    "fill_price": "0",\
    "mkfr": "-0.00025",\
    "tkfr": "0.00075",\
    "tif": "gtc",\
    "refu": 0,\
    "is_reduce_only": false,\
    "is_close": false,\
    "is_liq": false,\
    "text": "t-my-custom-id",\
    "status": "finished",\
    "finish_time": 1514764900,\
    "finish_as": "cancelled",\
    "stp_id": 0,\
    "stp_act": "-",\
    "amend_text": "-"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-3) Query single order details\
\
`GET /delivery/{settle}/orders/{order_id}`\
\
_Query single order details_\
\
Zero-fill orders cannot be retrieved 10 minutes after order cancellation\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-104) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-3) Cancel single order\
\
`DELETE /delivery/{settle}/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-105) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details | [FuturesOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturesorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 15675394,\
"user": 100000,\
"contract": "BTC_USDT",\
"create_time": 1546569968,\
"size": 6024,\
"iceberg": 0,\
"left": 6024,\
"price": "3765",\
"fill_price": "0",\
"mkfr": "-0.00025",\
"tkfr": "0.00075",\
"tif": "gtc",\
"refu": 0,\
"is_reduce_only": false,\
"is_close": false,\
"is_liq": false,\
"text": "t-my-custom-id",\
"status": "finished",\
"finish_time": 1514764900,\
"finish_as": "cancelled",\
"stp_id": 0,\
"stp_act": "-",\
"amend_text": "-"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-3) Query personal trading records\
\
`GET /delivery/{settle}/my_trades`\
\
_Query personal trading records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| order | query | integer(int64) | false | Futures order ID, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| last\_id | query | string | false | Use the ID of the last record in the previous list as the starting point for the next list |\
| count\_total | query | integer | false | Whether to return total number matched, defaults to 0 (no return) |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-44) Detailed descriptions\
\
**last\_id**: Use the ID of the last record in the previous list as the starting point for the next list\
\
Operations based on custom IDs can only be checked when orders are pending. After orders are completed (filled/cancelled), they can be checked within 1 hour after completion. After expiration, only order IDs can be used\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-106) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
| count\_total | 0 |\
| count\_total | 1 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Futures contract |\
| » order\_id | string | Related order ID |\
| » size | integer(int64) | Trading size |\
| » close\_size | integer(int64) | Number of closed positions:<br>close\_size=0 && size＞0 Open long position<br>close\_size=0 && size＜0 Open short position<br>close\_size>0 && size>0 && size <= close\_size Close short position<br>close\_size>0 && size>0 && size > close\_size Close short position and open long position<br>close\_size<0 && size<0 && size >= close\_size Close long position<br>close\_size<0 && size<0 && size < close\_size Close long position and open short position |\
| » price | string | Fill Price |\
| » role | string | Trade role. taker - taker, maker - maker |\
| » text | string | Order custom information |\
| » fee | string | Trade fee |\
| » point\_fee | string | Points used to deduct trade fee |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-107) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#response-headers-6) Response Headers\
\
| Status | Header | Type | Format | Description |\
| --- | --- | --- | --- | --- |\
| 200 | X-Pagination-Limit | integer |  | Limit specified for pagination |\
| 200 | X-Pagination-Offset | integer |  | Offset specified for pagination |\
| 200 | X-Pagination-Total | integer |  | Total number matched, only returned if `count_total` is set to 1 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/my_trades'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/my_trades"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800.123,\
    "contract": "BTC_USDT",\
    "order_id": "21893289839",\
    "size": 100,\
    "price": "100.123",\
    "text": "t-123456",\
    "fee": "0.01",\
    "point_fee": "0",\
    "role": "taker",\
    "close_size": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-position-close-history-2) Query position close history\
\
`GET /delivery/{settle}/position_close`\
\
_Query position close history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-108) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Position close time |\
| » contract | string | Futures contract |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » pnl\_pnl | string | PNL - Position P/L |\
| » pnl\_fund | string | PNL - Funding Fees |\
| » pnl\_fee | string | PNL - Transaction Fees |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » max\_size | string | Max Trade Size |\
| » accum\_size | string | Cumulative closed position volume |\
| » first\_open\_time | integer(int64) | First Open Time |\
| » long\_price | string | When side is 'long', it indicates the opening average price; when side is 'short', it indicates the closing average price |\
| » short\_price | string | When side is 'long', it indicates the closing average price; when side is 'short', it indicates the opening average price |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-109) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/position_close'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/position_close"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1546487347,\
    "pnl": "0.00013",\
    "pnl_pnl": "0.00011",\
    "pnl_fund": "0.00001",\
    "pnl_fee": "0.00001",\
    "side": "long",\
    "contract": "BTC_USDT",\
    "text": "web",\
    "max_size": "100",\
    "accum_size": "100",\
    "first_open_time": 1546487347,\
    "long_price": "2026.87",\
    "short_price": "2544.4"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-liquidation-history-2) Query liquidation history\
\
`GET /delivery/{settle}/liquidates`\
\
_Query liquidation history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| at | query | integer | false | Specify liquidation timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-110) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage. Not returned in public endpoints |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin. Not returned in public endpoints |\
| » entry\_price | string | Average entry price. Not returned in public endpoints |\
| » liq\_price | string | Liquidation price. Not returned in public endpoints |\
| » mark\_price | string | Mark price. Not returned in public endpoints |\
| » order\_id | integer(int64) | Liquidation order ID. Not returned in public endpoints |\
| » order\_price | string | Liquidation order price |\
| » fill\_price | string | Liquidation order average taker price |\
| » left | integer(int64) | Liquidation order maker size |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/liquidates'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/liquidates"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "liq_price": "3421.54",\
    "mark_price": "3420.27",\
    "order_id": 317393847,\
    "order_price": "3405",\
    "fill_price": "3424",\
    "left": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-settlement-records) Query settlement records\
\
`GET /delivery/{settle}/settlements`\
\
_Query settlement records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| at | query | integer | false | Specify settlement timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-111) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | Liquidation time |\
| » contract | string | Futures contract |\
| » leverage | string | Position leverage |\
| » size | integer(int64) | Position size |\
| » margin | string | Position margin |\
| » entry\_price | string | Average entry price |\
| » settle\_price | string | Settled price |\
| » profit | string | Profit |\
| » fee | string | Fee deducted |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/settlements'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/settlements"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1548654951,\
    "contract": "BTC_USDT",\
    "size": 600,\
    "leverage": "25",\
    "margin": "0.006705256878",\
    "entry_price": "3536.123",\
    "settle_price": "3421.54",\
    "profit": "-6.87498",\
    "fee": "0.03079386"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-risk-limit-tiers-2) Query risk limit tiers\
\
`GET /delivery/{settle}/risk_limit_tiers`\
\
_Query risk limit tiers_\
\
When the 'contract' parameter is not passed, the default is to query the risk limits for the top 100 markets. 'Limit' and 'offset' correspond to pagination queries at the market level, not to the length of the returned array. This only takes effect when the contract parameter is empty.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| contract | query | string | false | Futures contract |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-112) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Retrieve risk limit configurations for different tiers under a specified contract\] |\
| » _None_ | object | Retrieve risk limit configurations for different tiers under a specified contract |\
| »» tier | integer(int) | Tier |\
| »» risk\_limit | string | Position risk limit |\
| »» initial\_rate | string | Initial margin rate |\
| »» maintenance\_rate | string | Maintenance margin rate |\
| »» leverage\_max | string | Maximum leverage |\
| »» contract | string | Market, only visible when market pagination is requested |\
| »» deduction | string | Maintenance margin quick calculation deduction amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/risk_limit_tiers'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/delivery/usdt/risk_limit_tiers \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "maintenance_rate": "0.01",\
    "tier": 1,\
    "initial_rate": "0.02",\
    "leverage_max": "50",\
    "risk_limit": "20000",\
    "contract": "ZTX_USDT",\
    "deduction": "0"\
},\
{\
    "maintenance_rate": "0.013",\
    "tier": 2,\
    "initial_rate": "0.025",\
    "leverage_max": "40",\
    "risk_limit": "30000",\
    "contract": "ZTX_USDT",\
    "deduction": "60"\
},\
{\
    "maintenance_rate": "0.015",\
    "tier": 3,\
    "initial_rate": "0.02857",\
    "leverage_max": "35",\
    "risk_limit": "50000",\
    "contract": "ZTX_USDT",\
    "deduction": "120"\
},\
{\
    "maintenance_rate": "0.02",\
    "tier": 4,\
    "initial_rate": "0.03333",\
    "leverage_max": "30",\
    "risk_limit": "70000",\
    "contract": "ZTX_USDT",\
    "deduction": "370"\
},\
{\
    "maintenance_rate": "0.025",\
    "tier": 5,\
    "initial_rate": "0.04",\
    "leverage_max": "25",\
    "risk_limit": "100000",\
    "contract": "ZTX_USDT",\
    "deduction": "720"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-price-triggered-order-3) Create price-triggered order\
\
`POST /delivery/{settle}/price_orders`\
\
_Create price-triggered order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) | true | none |\
| » initial | body | object | true | none |\
| »» contract | body | string | true | Futures contract |\
| »» size | body | integer(int64) | false | Represents the number of contracts that need to be closed, full closing: size=0 |\
| »» price | body | string | true | Order price. Set to 0 to use market price |\
| »» close | body | boolean | false | When all positions are closed in a single position mode, it must be set to true to perform the closing operation |\
| »» tif | body | string | false | Time in force strategy, default is gtc, market orders currently only support ioc mode |\
| »» text | body | string | false | The source of the order, including: |\
| »» reduce\_only | body | boolean | false | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| »» auto\_size | body | string | false | Single position mode: auto\_size is not required |\
| » trigger | body | object | true | none |\
| »» strategy\_type | body | integer(int32) | false | Trigger Strategy |\
| »» price\_type | body | integer(int32) | false | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| »» price | body | string | false | Price value for price trigger, or spread value for spread trigger |\
| »» rule | body | integer(int32) | false | Price Condition Type |\
| »» expiration | body | integer | false | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| » order\_type | body | string | false | Types of take-profit and stop-loss orders, including: |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-45) Detailed descriptions\
\
**»» size**: Represents the number of contracts that need to be closed, full closing: size=0\
Partial closing: plan-close-short-position size>0\
Partial closing: plan-close-long-position size<0\
\
**»» close**: When all positions are closed in a single position mode, it must be set to true to perform the closing operation\
When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false\
\
**»» tif**: Time in force strategy, default is gtc, market orders currently only support ioc mode\
\
- gtc: GoodTillCancelled\
- ioc: ImmediateOrCancelled\
\
**»» text**: The source of the order, including:\
\
- web: Web\
- api: API call\
- app: Mobile app\
\
**»» auto\_size**: Single position mode: auto\_size is not required\
Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions\
Dual position mode partial closing (size≠0): auto\_size is not required\
\
**»» strategy\_type**: Trigger Strategy\
\
- 0: Price trigger, triggered when price meets conditions\
- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price\
Currently only supports 0 (latest transaction price)\
\
**»» rule**: Price Condition Type\
\
- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price\
- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price\
\
**» order\_type**: Types of take-profit and stop-loss orders, including:\
\
- `close-long-order`: Order take-profit/stop-loss, close long position\
- `close-short-order`: Order take-profit/stop-loss, close short position\
- `close-long-position`: Position take-profit/stop-loss, used to close all long positions\
- `close-short-position`: Position take-profit/stop-loss, used to close all short positions\
- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions\
- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions\
\
The two types of order take-profit/stop-loss are read-only and cannot be passed in requests\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-113) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| »» tif | gtc |\
| »» tif | ioc |\
| »» strategy\_type | 0 |\
| »» strategy\_type | 1 |\
| »» price\_type | 0 |\
| »» price\_type | 1 |\
| »» price\_type | 2 |\
| »» rule | 1 |\
| »» rule | 2 |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order created successfully | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_TriggerOrderResponse_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Auto order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = ''\
body='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/delivery/usdt/price_orders"\
query_param=""\
body_param='{"initial":{"contract":"BTC_USDT","size":100,"price":"5.03"},"trigger":{"strategy_type":0,"price_type":0,"price":"3000","rule":1,"expiration":86400},"order_type":"close-long-order"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"order_type": "close-long-order"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"id": 1432329\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-auto-order-list-2) Query auto order list\
\
`GET /delivery/{settle}/price_orders`\
\
_Query auto order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| status | query | string | true | Query order list based on status |\
| contract | query | string | false | Futures contract, return related data only if specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-114) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/price_orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-auto-orders-3) Cancel all auto orders\
\
`DELETE /delivery/{settle}/price_orders`\
\
_Cancel all auto orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Futures contract |\
| settle | path | string | true | Settle currency |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-115) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation request accepted and processed, success determined by order list | \[ [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder)\] |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders'\
query_param = 'contract=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/price_orders"\
query_param="contract=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "initial": {\
      "contract": "BTC_USDT",\
      "size": 100,\
      "price": "5.03"\
    },\
    "trigger": {\
      "strategy_type": 0,\
      "price_type": 0,\
      "price": "3000",\
      "rule": 1,\
      "expiration": 86400\
    },\
    "id": 1283293,\
    "user": 1234,\
    "create_time": 1514764800,\
    "finish_time": 1514764900,\
    "trade_id": 13566,\
    "status": "finished",\
    "finish_as": "cancelled",\
    "reason": "",\
    "order_type": "close-long-order"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-auto-order-details-3) Query single auto order details\
\
`GET /delivery/{settle}/price_orders/{order_id}`\
\
_Query single auto order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-116) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/delivery/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-auto-order-3) Cancel single auto order\
\
`DELETE /delivery/{settle}/price_orders/{order_id}`\
\
_Cancel single auto order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| settle | path | string | true | Settle currency |\
| order\_id | path | string | true | ID returned when order is successfully created |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-117) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| settle | usdt |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Auto order details | [FuturesPriceTriggeredOrder](https://www.gate.com/docs/developers/apiv4/en/#schemafuturespricetriggeredorder) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/delivery/usdt/price_orders/string'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/delivery/usdt/price_orders/string"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"initial": {\
    "contract": "BTC_USDT",\
    "size": 100,\
    "price": "5.03"\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "3000",\
    "rule": 1,\
    "expiration": 86400\
},\
"id": 1283293,\
"user": 1234,\
"create_time": 1514764800,\
"finish_time": 1514764900,\
"trade_id": 13566,\
"status": "finished",\
"finish_as": "cancelled",\
"reason": "",\
"order_type": "close-long-order"\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#options) Options\
\
Options API\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-underlying-assets) List all underlying assets\
\
`GET /options/underlyings`\
\
_List all underlying assets_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Underlying name |\
| » index\_price | string | Spot index price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlyings'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlyings \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT",\
    "index_price": "70000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-expiration-dates) List all expiration dates\
\
`GET /options/expirations`\
\
_List all expiration dates_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List expiration dates for specified underlying | \[integer\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | integer(int64) | Unix timestamp of expiration date |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/expirations'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/expirations?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
1637913600\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-all-contracts-for-specified-underlying-and-expiration-date) List all contracts for specified underlying and expiration date\
\
`GET /options/contracts`\
\
_List all contracts for specified underlying and expiration date_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| expiration | query | integer(int64) | false | Unix timestamp of expiration date |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options contract details\] |\
| » _None_ | object | Options contract details |\
| »» name | string | Options contract name |\
| »» tag | string | Tag |\
| »» create\_time | number(double) | Creation time |\
| »» expiration\_time | number(double) | Expiration time |\
| »» is\_call | boolean | `true` means call options, `false` means put options |\
| »» multiplier | string | Multiplier used in converting from invoicing to settlement currency |\
| »» underlying | string | Underlying |\
| »» underlying\_price | string | Underlying price (quote currency) |\
| »» last\_price | string | Last trading price |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» index\_price | string | Current index price (quote currency) |\
| »» maker\_fee\_rate | string | Maker fee rate, negative values indicate rebates |\
| »» taker\_fee\_rate | string | Taker fee rate |\
| »» order\_price\_round | string | Minimum order price increment |\
| »» mark\_price\_round | string | Minimum mark price increment |\
| »» order\_size\_min | integer(int64) | Minimum order size allowed by the contract |\
| »» order\_size\_max | integer(int64) | Maximum order size allowed by the contract |\
| »» order\_price\_deviate | string | The positive and negative offset allowed between the order price and the current mark price, that `order_price` must meet the following conditions:<br>order\_price is within the range of mark\_price +/- order\_price\_deviate \* underlying\_price and does not distinguish between buy and sell orders |\
| »» ref\_discount\_rate | string | Trading fee discount for referred users |\
| »» ref\_rebate\_rate | string | Commission rate for referrers |\
| »» orderbook\_id | integer(int64) | Orderbook update ID |\
| »» trade\_id | integer(int64) | Current trade ID |\
| »» trade\_size | integer(int64) | Historical cumulative trading volume |\
| »» position\_size | integer(int64) | Current total long position size |\
| »» orders\_limit | integer | Maximum number of pending orders |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/contracts'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/contracts?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT-20211130-65000-C",\
    "tag": "WEEK",\
    "create_time": 1636702700,\
    "expiration_time": 1637913600,\
    "is_call": true,\
    "strike_price": "65000",\
    "last_price": "13000",\
    "mark_price": "14010",\
    "orderbook_id": 9,\
    "trade_id": 1,\
    "trade_size": 10,\
    "position_size": 10,\
    "underlying": "BTC_USDT",\
    "underlying_price": "70000",\
    "multiplier": "0.0001",\
    "order_price_round": "0.1",\
    "mark_price_round": "0.1",\
    "maker_fee_rate": "0.0004",\
    "taker_fee_rate": "0.0004",\
    "price_limit_fee_rate": "0.1",\
    "ref_discount_rate": "0",\
    "ref_rebate_rate": "0",\
    "order_price_deviate": "0.5",\
    "order_size_min": 1,\
    "order_size_max": 100000,\
    "orders_limit": 50\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-specified-contract-details) Query specified contract details\
\
`GET /options/contracts/{contract}`\
\
_Query specified contract details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options contract details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » name | string | Options contract name |\
| » tag | string | Tag |\
| » create\_time | number(double) | Creation time |\
| » expiration\_time | number(double) | Expiration time |\
| » is\_call | boolean | `true` means call options, `false` means put options |\
| » multiplier | string | Multiplier used in converting from invoicing to settlement currency |\
| » underlying | string | Underlying |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » last\_price | string | Last trading price |\
| » mark\_price | string | Current mark price (quote currency) |\
| » index\_price | string | Current index price (quote currency) |\
| » maker\_fee\_rate | string | Maker fee rate, negative values indicate rebates |\
| » taker\_fee\_rate | string | Taker fee rate |\
| » order\_price\_round | string | Minimum order price increment |\
| » mark\_price\_round | string | Minimum mark price increment |\
| » order\_size\_min | integer(int64) | Minimum order size allowed by the contract |\
| » order\_size\_max | integer(int64) | Maximum order size allowed by the contract |\
| » order\_price\_deviate | string | The positive and negative offset allowed between the order price and the current mark price, that `order_price` must meet the following conditions:<br>order\_price is within the range of mark\_price +/- order\_price\_deviate \* underlying\_price and does not distinguish between buy and sell orders |\
| » ref\_discount\_rate | string | Trading fee discount for referred users |\
| » ref\_rebate\_rate | string | Commission rate for referrers |\
| » orderbook\_id | integer(int64) | Orderbook update ID |\
| » trade\_id | integer(int64) | Current trade ID |\
| » trade\_size | integer(int64) | Historical cumulative trading volume |\
| » position\_size | integer(int64) | Current total long position size |\
| » orders\_limit | integer | Maximum number of pending orders |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/contracts/BTC_USDT-20211130-65000-C'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/contracts/BTC_USDT-20211130-65000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"name": "BTC_USDT-20211130-65000-C",\
"tag": "WEEK",\
"create_time": 1636702700,\
"expiration_time": 1637913600,\
"is_call": true,\
"strike_price": "65000",\
"last_price": "13000",\
"mark_price": "14010",\
"orderbook_id": 9,\
"trade_id": 1,\
"trade_size": 10,\
"position_size": 10,\
"underlying": "BTC_USDT",\
"underlying_price": "70000",\
"multiplier": "0.0001",\
"order_price_round": "0.1",\
"mark_price_round": "0.1",\
"maker_fee_rate": "0.0004",\
"taker_fee_rate": "0.0004",\
"price_limit_fee_rate": "0.1",\
"ref_discount_rate": "0",\
"ref_rebate_rate": "0",\
"order_price_deviate": "0.5",\
"order_size_min": 1,\
"order_size_max": 100000,\
"orders_limit": 50\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-settlement-history) List settlement history\
\
`GET /options/settlements`\
\
_List settlement history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-46) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » time | number(double) | Last configuration update time |\
| » contract | string | Options contract name |\
| » profit | string | Settlement profit per contract (quote currency) |\
| » fee | string | Settlement fee per contract (quote currency) |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/settlements'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/settlements?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1598839200,\
    "profit": "312.35",\
    "fee": "0.3284",\
    "settle_price": "11687.65",\
    "contract": "BTC-WEEKLY-200824-11000-P",\
    "strike_price": "12000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specified-contract-settlement-information) Get specified contract settlement information\
\
`GET /options/settlements/{contract}`\
\
_Get specified contract settlement information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| at | query | integer(int64) | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Last configuration update time |\
| » contract | string | Options contract name |\
| » profit | string | Settlement profit per contract (quote currency) |\
| » fee | string | Settlement fee per contract (quote currency) |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/settlements/BTC_USDT-20211130-65000-C'\
query_param = 'underlying=BTC_USDT&at=0'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/settlements/BTC_USDT-20211130-65000-C?underlying=BTC_USDT&at=0 \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"time": 1598839200,\
"profit": "312.35",\
"fee": "0.3284",\
"settle_price": "11687.65",\
"contract": "BTC-WEEKLY-200824-11000-P",\
"strike_price": "12000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-settlement-records) Query personal settlement records\
\
`GET /options/my_settlements`\
\
_Query personal settlement records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-47) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Settlement time |\
| » underlying | string | Underlying |\
| » contract | string | Options contract name |\
| » strike\_price | string | Strike price (quote currency) |\
| » settle\_price | string | Settlement price (quote currency) |\
| » size | integer(int64) | Settlement size |\
| » settle\_profit | string | Settlement profit (quote currency) |\
| » fee | string | Settlement fee (quote currency) |\
| » realised\_pnl | string | Accumulated profit and loss from opening positions, including premium, fees, settlement profit, etc. (quote currency) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/my_settlements'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/my_settlements"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "size": -1,\
    "settle_profit": "0",\
    "contract": "BTC_USDT-20220624-26000-C",\
    "strike_price": "26000",\
    "time": 1656057600,\
    "settle_price": "20917.461281337048",\
    "underlying": "BTC_USDT",\
    "realised_pnl": "-0.00116042",\
    "fee": "0"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-options-contract-order-book) Query options contract order book\
\
`GET /options/order_book`\
\
_Query options contract order book_\
\
Bids will be sorted by price from high to low, while asks sorted reversely\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Options contract name |\
| interval | query | string | false | Price precision for depth aggregation, 0 means no aggregation, defaults to 0 if not specified |\
| limit | query | integer | false | Number of depth levels |\
| with\_id | query | boolean | false | Whether to return depth update ID. This ID increments by 1 each time depth changes |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-118) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 0 |\
| interval | 0.1 |\
| interval | 0.01 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Depth query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Order Book ID. Increases by 1 on every order book change. Set `with_id=true` to include this field in response |\
| » current | number(double) | Response data generation timestamp |\
| » update | number(double) | Order book changed timestamp |\
| » asks | array | Ask Depth |\
| »» futures\_order\_book\_item | object | none |\
| »»» p | string | Price (quote currency) |\
| »»» s | integer(int64) | Amount |\
| »» bids | array | Bid Depth |\
| »»» futures\_order\_book\_item | object | none |\
| »»»» p | string | Price (quote currency) |\
| »»»» s | integer(int64) | Amount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/order_book'\
query_param = 'contract=BTC_USDT-20210916-5000-C'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/order_book?contract=BTC_USDT-20210916-5000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123456,\
"current": 1623898993.123,\
"update": 1623898993.121,\
"asks": [\
    {\
      "p": "1.52",\
      "s": 100\
    },\
    {\
      "p": "1.53",\
      "s": 40\
    }\
],\
"bids": [\
    {\
      "p": "1.17",\
      "s": 150\
    },\
    {\
      "p": "1.16",\
      "s": 203\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-options-market-ticker-information) Query options market ticker information\
\
`GET /options/tickers`\
\
_Query options market ticker information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Options contract details |\
| »» name | string | Options contract name |\
| »» last\_price | string | Last trade price (quote currency) |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» index\_price | string | Current index price (quote currency) |\
| »» ask1\_size | integer(int64) | Best ask size |\
| »» ask1\_price | string | Best ask price |\
| »» bid1\_size | integer(int64) | Best bid size |\
| »» bid1\_price | string | Best bid price |\
| »» position\_size | integer(int64) | Current total long position size |\
| »» mark\_iv | string | Implied volatility |\
| »» bid\_iv | string | Bid side implied volatility |\
| »» ask\_iv | string | Ask side implied volatility |\
| »» leverage | string | Current leverage. Formula: underlying\_price / mark\_price \* delta |\
| »» delta | string | Greek letter delta |\
| »» gamma | string | Greek letter gamma |\
| »» vega | string | Greek letter vega |\
| »» theta | string | Greek letter theta |\
| »» rho | string | Rho |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/tickers'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/tickers?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "name": "BTC_USDT-20211130-65000-C",\
    "last_price": "13000",\
    "mark_price": "14010",\
    "position_size": 10,\
    "ask1_size": 0,\
    "ask1_price": "0",\
    "bid1_size": 1,\
    "bid1_price": "11",\
    "vega": "41.41202",\
    "theta": "-120.1506",\
    "rho": "6.52485",\
    "gamma": "0.00004",\
    "delta": "0.33505",\
    "mark_iv": "0.123",\
    "bid_iv": "0.023",\
    "ask_iv": "0.342",\
    "leverage": "13"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-underlying-ticker-information) Query underlying ticker information\
\
`GET /options/underlying/tickers/{underlying}`\
\
_Query underlying ticker information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | path | string | true | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options underlying detail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » trade\_put | integer(int64) | Total put options trades amount in last 24h |\
| » trade\_call | integer(int64) | Total call options trades amount in last 24h |\
| » index\_price | string | Index price (quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlying/tickers/BTC_USDT'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlying/tickers/BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"trade_put": 33505,\
"trade_call": 123,\
"index_price": "76543.3"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#options-contract-market-candlestick-chart) Options contract market candlestick chart\
\
`GET /options/candlesticks`\
\
_Options contract market candlestick chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | true | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-48) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-119) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency, unit: underlying corresponding option price) |\
| »» h | string | Highest price (quote currency, unit: underlying corresponding option price) |\
| »» l | string | Lowest price (quote currency, unit: underlying corresponding option price) |\
| »» o | string | Open price (quote currency, unit: underlying corresponding option price) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/candlesticks'\
query_param = 'contract=BTC_USDT-20210916-5000-C'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/candlesticks?contract=BTC_USDT-20210916-5000-C \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#underlying-index-price-candlestick-chart) Underlying index price candlestick chart\
\
`GET /options/underlying/candlesticks`\
\
_Underlying index price candlestick chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| interval | query | string | false | Time interval between data points |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-49) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-120) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| interval | 1m |\
| interval | 5m |\
| interval | 15m |\
| interval | 30m |\
| interval | 1h |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[data point in every timestamp\] |\
| » _None_ | object | data point in every timestamp |\
| »» t | number(double) | Unix timestamp in seconds |\
| »» v | integer(int64) | size volume (contract size). Only returned if `contract` is not prefixed |\
| »» c | string | Close price (quote currency) |\
| »» h | string | Highest price (quote currency) |\
| »» l | string | Lowest price (quote currency) |\
| »» o | string | Open price (quote currency) |\
| »» sum | string | Trading volume (unit: Quote currency) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/underlying/candlesticks'\
query_param = 'underlying=BTC_USDT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/underlying/candlesticks?underlying=BTC_USDT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "t": 1539852480,\
    "v": 97151,\
    "c": "1.032",\
    "h": "1.032",\
    "l": "1.032",\
    "o": "1.032",\
    "sum": "3580"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#market-trade-records) Market trade records\
\
`GET /options/trades`\
\
_Market trade records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| type | query | string(P) | false | `C` for call, `P` for put |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-50) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » create\_time\_ms | number(double) | Trade time, with millisecond precision to 3 decimal places |\
| » contract | string | Futures contract |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » is\_internal | boolean | Whether it is an internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users. Since it is not a normal matching on the market depth, the trade price may deviate from the market, and it will not be recorded in the K-line. If it is not an internal trade, this field will not be returned |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/trades'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/options/trades \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 121234231,\
    "create_time": 1514764800,\
    "contract": "BTC_USDT",\
    "size": -100,\
    "price": "100.123"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-information) Query account information\
\
`GET /options/accounts`\
\
_Query account information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user | integer(int64) | User ID |\
| » total | string | Account Balance |\
| » position\_value | string | Position value, long position value is positive, short position value is negative |\
| » equity | string | Account equity, the sum of account balance and position value |\
| » short\_enabled | boolean | If the account is allowed to short |\
| » mmp\_enabled | boolean | Whether to enable MMP |\
| » liq\_triggered | boolean | Whether to trigger position liquidation |\
| » margin\_mode | integer(int32) | ｜ Margin模式：<br>\- 0：经典SpotMargin模式 - 1：跨CurrencyMargin模式 - 2：组合Margin模式 |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » init\_margin | string | Initial position margin |\
| » maint\_margin | string | Position maintenance margin |\
| » order\_margin | string | Order margin of unfinished orders |\
| » ask\_order\_margin | string | Margin for outstanding sell orders |\
| » bid\_order\_margin | string | Margin for outstanding buy orders |\
| » available | string | Available balance to transfer out or trade |\
| » point | string | Point card amount |\
| » currency | string | Settlement currency |\
| » orders\_limit | integer(int32) | Maximum number of outstanding orders |\
| » position\_notional\_limit | integer(int64) | Notional value upper limit, including the nominal value of positions and outstanding orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-121) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| margin\_mode | 0 |\
| margin\_mode | 1 |\
| margin\_mode | 2 |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/accounts'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/accounts"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 666,\
"currency": "USDT",\
"short_enabled": true,\
"mmp_enabled": false,\
"liq_triggered": false,\
"margin_mode": 0,\
"total": "1650.443022",\
"position_value": "-40.1136",\
"equity": "1610.329422",\
"unrealised_pnl": "-0.7811",\
"init_margin": "0",\
"maint_margin": "135.541485",\
"order_margin": "139.74496",\
"ask_order_margin": "139.74496",\
"bid_order_margin": "0",\
"available": "1514.901537",\
"point": "0",\
"orders_limit": 10,\
"position_notional_limit": 1000000\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-account-change-history) Query account change history\
\
`GET /options/account_book`\
\
_Query account change history_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Change types: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-51) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
**type**: Change types:\
\
- dnw: Deposit & Withdrawal\
- prem: Trading premium\
- fee: Trading fee\
- refr: Referrer rebate\
- set: Settlement P&L\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-122) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | dnw |\
| type | prem |\
| type | fee |\
| type | refr |\
| type | set |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Change time |\
| » change | string | Amount changed (USDT) |\
| » balance | string | Account total balance after change (USDT) |\
| » type | string | Changing Type:<br>\- dnw: Deposit & Withdraw<br>\- prem: Trading premium<br>\- fee: Trading fee<br>\- refr: Referrer rebate<br>\- point\_dnw: point\_fee: POINT Trading fee<br>\- point\_refr: POINT Referrer rebate |\
| » text | string | Note |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/account_book'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/account_book"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1636426005,\
    "change": "-0.16",\
    "balance": "7378.189",\
    "text": "BTC_USDT-20211216-5000-P:25",\
    "type": "fee"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-user-s-positions-of-specified-underlying) List user's positions of specified underlying\
\
`GET /options/positions`\
\
_List user's positions of specified underlying_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | false | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options contract position details\] |\
| » _None_ | object | Options contract position details |\
| »» user | integer | User ID |\
| »» underlying | string | Underlying |\
| »» underlying\_price | string | Underlying price (quote currency) |\
| »» contract | string | Options contract name |\
| »» size | integer(int64) | Position size (contract quantity) |\
| »» entry\_price | string | Entry size (quote currency) |\
| »» mark\_price | string | Current mark price (quote currency) |\
| »» mark\_iv | string | Implied volatility |\
| »» realised\_pnl | string | Realized PnL |\
| »» unrealised\_pnl | string | Unrealized PNL |\
| »» pending\_orders | integer | Current pending order quantity |\
| »» close\_order | object\|null | Current close order information, or `null` if no close order |\
| »»» id | integer(int64) | Order ID |\
| »»» price | string | Order price (quote currency) |\
| »»» is\_liq | boolean | Whether the close order is from liquidation |\
| »» delta | string | Greek letter delta |\
| »» gamma | string | Greek letter gamma |\
| »» vega | string | Greek letter vega |\
| »» theta | string | Greek letter theta |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/positions'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/positions"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user": 11027586,\
    "underlying": "BTC_USDT",\
    "underlying_price": "70000",\
    "contract": "BTC_USDT-20211216-5000-P",\
    "size": 10,\
    "entry_price": "1234",\
    "realised_pnl": "120",\
    "mark_price": "6000",\
    "mark_iv": "0.9638",\
    "unrealised_pnl": "-320",\
    "pending_orders": 1,\
    "close_order": {\
      "id": 232323,\
      "price": "5779",\
      "is_liq": false\
    },\
    "delta": "-0.0046",\
    "gamma": "0",\
    "vega": "2.87656",\
    "theta": "-1.00247"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-specified-contract-position) Get specified contract position\
\
`GET /options/positions/{contract}`\
\
_Get specified contract position_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | path | string | true | none |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options contract position details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » user | integer | User ID |\
| » underlying | string | Underlying |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » contract | string | Options contract name |\
| » size | integer(int64) | Position size (contract quantity) |\
| » entry\_price | string | Entry size (quote currency) |\
| » mark\_price | string | Current mark price (quote currency) |\
| » mark\_iv | string | Implied volatility |\
| » realised\_pnl | string | Realized PnL |\
| » unrealised\_pnl | string | Unrealized PNL |\
| » pending\_orders | integer | Current pending order quantity |\
| » close\_order | object\|null | Current close order information, or `null` if no close order |\
| »» id | integer(int64) | Order ID |\
| »» price | string | Order price (quote currency) |\
| »» is\_liq | boolean | Whether the close order is from liquidation |\
| » delta | string | Greek letter delta |\
| » gamma | string | Greek letter gamma |\
| » vega | string | Greek letter vega |\
| » theta | string | Greek letter theta |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/positions/BTC_USDT-20211130-65000-C'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/positions/BTC_USDT-20211130-65000-C"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user": 11027586,\
"underlying": "BTC_USDT",\
"underlying_price": "70000",\
"contract": "BTC_USDT-20211216-5000-P",\
"size": 10,\
"entry_price": "1234",\
"realised_pnl": "120",\
"mark_price": "6000",\
"mark_iv": "0.9638",\
"unrealised_pnl": "-320",\
"pending_orders": 1,\
"close_order": {\
    "id": 232323,\
    "price": "5779",\
    "is_liq": false\
},\
"delta": "-0.0046",\
"gamma": "0",\
"vega": "2.87656",\
"theta": "-1.00247"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-user-s-liquidation-history-of-specified-underlying) List user's liquidation history of specified underlying\
\
`GET /options/position_close`\
\
_List user's liquidation history of specified underlying_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | number(double) | Position close time |\
| » contract | string | Options contract name |\
| » side | string | Position side<br>\- `long`: Long position<br>\- `short`: Short position |\
| » pnl | string | PnL |\
| » text | string | Source of close order. See `order.text` field for specific values |\
| » settle\_size | string | Settlement size |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-123) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| side | long |\
| side | short |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/position_close'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/position_close"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1631764800,\
    "pnl": "-42914.291",\
    "settle_size": "-10001",\
    "side": "short",\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "settled"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-an-options-order) Create an options order\
\
`POST /options/orders`\
\
_Create an options order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » contract | body | string | true | Options identifier |\
| » size | body | integer(int64) | true | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | body | integer(int64) | false | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | body | string | false | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » close | body | boolean | false | Set as `true` to close the position, with `size` set to 0 |\
| » reduce\_only | body | boolean | false | Set as `true` to be reduce-only order |\
| » mmp | body | boolean | false | When set to true, it is an MMP order |\
| » tif | body | string | false | Time in force strategy. Market orders currently only support IOC mode |\
| » text | body | string | false | User defined information. If not empty, must follow the rules below: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-52) Detailed descriptions\
\
**» tif**: Time in force strategy. Market orders currently only support IOC mode\
\
- gtc: Good Till Cancelled\
- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only\
- poc: Pending Or Cancelled, passive order, maker only\
\
**» text**: User defined information. If not empty, must follow the rules below:\
\
1. prefixed with `t-`\
2. no longer than 28 bytes without `t-` prefix\
3. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)\
Besides user defined information, reserved contents are listed below, denoting how the order is created:\
\
- web: from web\
- api: from API\
- app: from mobile phones\
- auto\_deleveraging: from ADL\
- liquidation: from liquidation\
- insurance: from insurance\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-124) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » tif | gtc |\
| » tif | ioc |\
| » tif | poc |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 201 | [Created(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.2) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **201**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-125) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = ''\
body='{"size":-1,"iceberg":0,"contract":"BTC_USDT-20210916-5000-C","text":"-","tif":"gtc","price":"100"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/orders"\
query_param=""\
body_param='{"size":-1,"iceberg":0,"contract":"BTC_USDT-20210916-5000-C","text":"-","tif":"gtc","price":"100"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"size": -1,\
"iceberg": 0,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"tif": "gtc",\
"price": "100"\
}\
\
```\
\
> Example responses\
\
> 201 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-options-orders) List options orders\
\
`GET /options/orders`\
\
_List options orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| underlying | query | string | false | Underlying |\
| status | query | string | true | Query order list based on status |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-53) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-126) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| status | open |\
| status | finished |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options order details\] |\
| » _None_ | object | Options order details |\
| »» id | integer(int64) | Options order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Options identifier |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| »» tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-127) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = 'status=open'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/orders"\
query_param="status=open"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": "finished",\
    "size": -1,\
    "id": 2,\
    "iceberg": 0,\
    "is_liq": false,\
    "is_close": false,\
    "is_mmp": false,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "-",\
    "fill_price": "100",\
    "finish_as": "filled",\
    "left": 0,\
    "tif": "gtc",\
    "is_reduce_only": false,\
    "create_time": 1631763361,\
    "finish_time": 1631763397,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-all-orders-with-open-status-3) Cancel all orders with 'open' status\
\
`DELETE /options/orders`\
\
_Cancel all orders with 'open' status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| contract | query | string | false | Options contract name |\
| underlying | query | string | false | Underlying |\
| side | query | string | false | Specify all bids or all asks, both included if not specified |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-128) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| side | ask |\
| side | bid |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Batch cancellation successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Options order details\] |\
| » _None_ | object | Options order details |\
| »» id | integer(int64) | Options order ID |\
| »» user | integer | User ID |\
| »» create\_time | number(double) | Creation time of order |\
| »» finish\_time | number(double) | Order finished time. Not returned if order is open |\
| »» finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| »» status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| »» contract | string | Options identifier |\
| »» size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| »» iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| »» price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| »» is\_close | boolean | Is the order to close position |\
| »» is\_reduce\_only | boolean | Is the order reduce-only |\
| »» is\_liq | boolean | Is the order for liquidation |\
| »» is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| »» tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| »» left | integer(int64) | Unfilled quantity |\
| »» fill\_price | string | Fill price |\
| »» text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| »» tkfr | string | Taker fee |\
| »» mkfr | string | Maker fee |\
| »» refu | integer | Referrer user ID |\
| »» refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-129) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/options/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": "finished",\
    "size": -1,\
    "id": 2,\
    "iceberg": 0,\
    "is_liq": false,\
    "is_close": false,\
    "is_mmp": false,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "text": "-",\
    "fill_price": "100",\
    "finish_as": "filled",\
    "left": 0,\
    "tif": "gtc",\
    "is_reduce_only": false,\
    "create_time": 1631763361,\
    "finish_time": 1631763397,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-4) Query single order details\
\
`GET /options/orders/{order_id}`\
\
_Query single order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-130) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#cancel-single-order-4) Cancel single order\
\
`DELETE /options/orders/{order_id}`\
\
_Cancel single order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order detail | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Options order details_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Options order ID |\
| » user | integer | User ID |\
| » create\_time | number(double) | Creation time of order |\
| » finish\_time | number(double) | Order finished time. Not returned if order is open |\
| » finish\_as | string | Order finish reason:<br>\- filled: Fully filled<br>\- cancelled: User cancelled<br>\- liquidated: Cancelled due to liquidation<br>\- ioc: Not immediately fully filled due to IOC time-in-force setting<br>\- auto\_deleveraged: Cancelled due to auto-deleveraging<br>\- reduce\_only: Cancelled due to position increase while reduce-only is set<br>\- position\_closed: Cancelled because the position was closed<br>\- reduce\_out: Only reduce positions by excluding hard-to-fill orders<br>\- mmp\_cancelled: Cancelled by MMP |\
| » status | string | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| » contract | string | Options identifier |\
| » size | integer(int64) | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| » iceberg | integer(int64) | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| » price | string | Order price. Price of 0 with `tif` set as `ioc` represents market order (quote currency) |\
| » is\_close | boolean | Is the order to close position |\
| » is\_reduce\_only | boolean | Is the order reduce-only |\
| » is\_liq | boolean | Is the order for liquidation |\
| » is\_mmp | boolean | Whether it is an MMP order. Corresponds to `mmp` in the request |\
| » tif | string | Time in force strategy. Market orders currently only support IOC mode<br>\- gtc: Good Till Cancelled<br>\- ioc: Immediate Or Cancelled, execute immediately or cancel, taker only<br>\- poc: Pending Or Cancelled, passive order, maker only |\
| » left | integer(int64) | Unfilled quantity |\
| » fill\_price | string | Fill price |\
| » text | string | User defined information. If not empty, must follow the rules below:<br>1\. prefixed with `t-`<br>2\. no longer than 28 bytes without `t-` prefix<br>3\. can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>Besides user defined information, reserved contents are listed below, denoting how the order is created:<br>\- web: from web<br>\- api: from API<br>\- app: from mobile phones<br>\- auto\_deleveraging: from ADL<br>\- liquidation: from liquidation<br>\- insurance: from insurance |\
| » tkfr | string | Taker fee |\
| » mkfr | string | Maker fee |\
| » refu | integer | Referrer user ID |\
| » refr | string | Referrer rebate |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-131) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | mmp\_cancelled |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/options/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"status": "finished",\
"size": -1,\
"id": 2,\
"iceberg": 0,\
"is_liq": false,\
"is_close": false,\
"is_mmp": false,\
"contract": "BTC_USDT-20210916-5000-C",\
"text": "-",\
"fill_price": "100",\
"finish_as": "filled",\
"left": 0,\
"tif": "gtc",\
"is_reduce_only": false,\
"create_time": 1631763361,\
"finish_time": 1631763397,\
"price": "100"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#countdown-cancel-orders-3) Countdown cancel orders\
\
`POST /options/countdown_cancel_all`\
\
_Countdown cancel orders_\
\
Option order heartbeat detection, when the `timeout` time set by the user is reached, if the existing countdown is not canceled or a new countdown is set, the related `option pending order` will be automatically canceled.\
This interface can be called repeatedly to set a new countdown or cancel the countdown.\
Usage example: Repeat this interface at intervals of 30 seconds, with each countdown `timeout` set to 30 (seconds).\
If this interface is not called again within 30 seconds, all pending orders on the `underlying` `contract` you specified will be automatically cancelled. If `underlying` `contract` is not specified, user will be automatically cancelled\
If `timeout` is set to 0 within 30 seconds, the countdown timer will expire and the automatic order cancellation function will be cancelled.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » timeout | body | integer(int32) | true | Countdown time in seconds |\
| » contract | body | string | false | Options contract name |\
| » underlying | body | string | false | Underlying |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-54) Detailed descriptions\
\
**» timeout**: Countdown time in seconds\
At least 5 seconds, 0 means cancel countdown\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Countdown set successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_triggerTime_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » triggerTime | integer(int64) | Timestamp when countdown ends, in milliseconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/countdown_cancel_all'\
query_param = ''\
body='{"timeout":30,"contract":"BTC_USDT-20241001-46000-C","underlying":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/countdown_cancel_all"\
query_param=""\
body_param='{"timeout":30,"contract":"BTC_USDT-20241001-46000-C","underlying":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"timeout": 30,\
"contract": "BTC_USDT-20241001-46000-C",\
"underlying": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"triggerTime": "1660039145000"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-personal-trading-records-4) Query personal trading records\
\
`GET /options/my_trades`\
\
_Query personal trading records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | true | Underlying (Obtained by listing underlying endpoint) |\
| contract | query | string | false | Options contract name |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-55) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | Fill ID |\
| » create\_time | number(double) | Fill Time |\
| » contract | string | Options contract name |\
| » order\_id | integer | Related order ID |\
| » size | integer(int64) | Trading size |\
| » price | string | Trade price (quote currency) |\
| » underlying\_price | string | Underlying price (quote currency) |\
| » role | string | Trade role. taker - taker, maker - maker |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-132) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| role | taker |\
| role | maker |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/my_trades'\
query_param = 'underlying=BTC_USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/my_trades"\
query_param="underlying=BTC_USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "underlying_price": "48000",\
    "size": 1,\
    "contract": "BTC_USDT-20210916-5000-C",\
    "id": 1,\
    "role": "taker",\
    "create_time": 1631763397,\
    "order_id": 4,\
    "price": "100"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-settings) MMP Settings\
\
`POST /options/mmp`\
\
_MMP Settings_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » underlying | body | string | true | Underlying |\
| » window | body | integer(int32) | true | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | body | integer(int32) | true | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | body | string | true | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | body | string | true | Upper limit of net delta value (positive number, up to 2 decimal places) |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | MMP Information | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MMP Settings_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » underlying | string | Underlying |\
| » window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| » trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| » frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp'\
query_param = ''\
body='{"underlying":"BTC_USDT","window":5000,"frozen_period":200,"qty_limit":"10","delta_limit":"10"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/mmp"\
query_param=""\
body_param='{"underlying":"BTC_USDT","window":5000,"frozen_period":200,"qty_limit":"10","delta_limit":"10"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10",\
"trigger_time_ms": 0,\
"frozen_until_ms": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-query) MMP Query.\
\
`GET /options/mmp`\
\
_MMP Query._\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| underlying | query | string | false | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[MMP Settings\] |\
| » _None_ | object | MMP Settings |\
| »» underlying | string | Underlying |\
| »» window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| »» frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| »» qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| »» delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| »» trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| »» frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/options/mmp"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "underlying": "BTC_USDT",\
    "window": 5000,\
    "frozen_period": 200,\
    "qty_limit": "10",\
    "delta_limit": "10",\
    "trigger_time_ms": 0,\
    "frozen_until_ms": 0\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#mmp-reset) MMP Reset\
\
`POST /options/mmp/reset`\
\
_MMP Reset_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » underlying | body | string | true | Underlying |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | MMP Information | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_MMP Settings_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » underlying | string | Underlying |\
| » window | integer(int32) | Time window (milliseconds), between 1-5000, 0 means disable MMP |\
| » frozen\_period | integer(int32) | Freeze duration (milliseconds), 0 means always frozen, need to call reset API to unfreeze |\
| » qty\_limit | string | Trading volume upper limit (positive number, up to 2 decimal places) |\
| » delta\_limit | string | Upper limit of net delta value (positive number, up to 2 decimal places) |\
| » trigger\_time\_ms | integer(int64) | Trigger freeze time (milliseconds), 0 means no freeze is triggered |\
| » frozen\_until\_ms | integer(int64) | Unfreeze time (milliseconds). If the freeze duration is not configured, there will be no unfreeze time after the freeze is triggered |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/options/mmp/reset'\
query_param = ''\
body='{"underlying":"BTC_USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/options/mmp/reset"\
query_param=""\
body_param='{"underlying":"BTC_USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"underlying": "BTC_USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"underlying": "BTC_USDT",\
"window": 5000,\
"frozen_period": 200,\
"qty_limit": "10",\
"delta_limit": "10",\
"trigger_time_ms": 0,\
"frozen_until_ms": 0\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#earnuni) EarnUni\
\
Lend & Earn\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-lending-currency-list) Query lending currency list\
\
`GET /earn/uni/currencies`\
\
_Query lending currency list_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Currency detail\] |\
| » _None_ | object | Currency detail |\
| »» currency | string | Currency name |\
| »» min\_lend\_amount | string | The minimum lending amount, in the unit of the currency |\
| »» max\_lend\_amount | string | The total maximum lending amount, in USDT |\
| »» max\_rate | string | Maximum rate (Hourly) |\
| »» min\_rate | string | Minimum rate (Hourly) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/uni/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "AE",\
    "min_lend_amount": "100",\
    "max_lend_amount": "200000000",\
    "max_rate": "0.00057",\
    "min_rate": "0.000001"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-lending-currency-details) Query single lending currency details\
\
`GET /earn/uni/currencies/{currency}`\
\
_Query single lending currency details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Currency detail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency name |\
| » min\_lend\_amount | string | The minimum lending amount, in the unit of the currency |\
| » max\_lend\_amount | string | The total maximum lending amount, in USDT |\
| » max\_rate | string | Maximum rate (Hourly) |\
| » min\_rate | string | Minimum rate (Hourly) |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/currencies/btc'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/uni/currencies/btc \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"min_lend_amount": "100",\
"max_lend_amount": "200000000",\
"max_rate": "0.00057",\
"min_rate": "0.000001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-lending-or-redemption) Create lending or redemption\
\
`POST /earn/uni/lends`\
\
_Create lending or redemption_\
\
Lending: When lending, a minimum lending rate must be set. After successful lending is determined on an hourly basis, earnings will be calculated based on the determined rate.\
Earnings for each hour will be settled at the top of the hour. If lending fails due to an excessively high interest rate, no interest will be earned for that hour.\
If funds are redeemed before the hourly for that hour.\
Priority: Under the same interest rate, wealth management products created or modified earlier will be prioritized for lending.\
Redemption: For funds that failed to be lent, redemption will be credited immediately.\
For funds successfully lent, they are entitled to the earnings for that hour, and redemption will be credited in the next hourly interval.\
Note: The two minutes before and after the hourly mark are the settlement period, during which lending and redemption are prohibited.\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | true | Currency name |\
| » amount | body | string | true | Amount to deposit into lending pool |\
| » type | body | string | true | Operation type: lend - Lend, redeem - Redeem |\
| » min\_rate | body | string | false | Minimum interest rate. If set too high, lending may fail and no interest will be earned. Required for lending operations. |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-133) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| » type | lend |\
| » type | redeem |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
body='{"currency":"AE","amount":"100","min_rate":"0.00001","type":"lend"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/uni/lends"\
query_param=""\
body_param='{"currency":"AE","amount":"100","min_rate":"0.00001","type":"lend"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "AE",\
"amount": "100",\
"min_rate": "0.00001",\
"type": "lend"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-lending-order-list) Query user's lending order list\
\
`GET /earn/uni/lends`\
\
_Query user's lending order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Loan record |\
| »» currency | string | Currency |\
| »» current\_amount | string | Current amount |\
| »» amount | string | Total Lending Amount |\
| »» lent\_amount | string | Lent Amount |\
| »» frozen\_amount | string | Pending Redemption Amount |\
| »» min\_rate | string | Minimum interest rate |\
| »» interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
| »» reinvest\_left\_amount | string | Non-reinvested Amount |\
| »» create\_time | integer(int64) | Lending Order Creation Time |\
| »» update\_time | integer(int64) | Lending Order Last Update Time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/lends"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "current_amount": "20.999992",\
    "amount": "20.999992",\
    "lent_amount": "0",\
    "frozen_amount": "0",\
    "min_rate": "0.1",\
    "interest_status": "interest_dividend",\
    "reinvest_left_amount": 0,\
    "create_time": 1673247054000,\
    "update_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#amend-user-lending-information) Amend user lending information\
\
`PATCH /earn/uni/lends`\
\
_Amend user lending information_\
\
Currently only supports amending minimum interest rate (hourly)\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » currency | body | string | false | Currency name |\
| » min\_rate | body | string | false | Minimum interest rate |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Updated successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lends'\
query_param = ''\
body='{"currency":"AE","min_rate":"0.0001"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('PATCH', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('PATCH', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="PATCH"\
url="/earn/uni/lends"\
query_param=""\
body_param='{"currency":"AE","min_rate":"0.0001"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"currency": "AE",\
"min_rate": "0.0001"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-lending-transaction-records) Query lending transaction records\
\
`GET /earn/uni/lend_records`\
\
_Query lending transaction records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| type | query | string | false | Operation type: lend - Lend, redeem - Redeem |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-56) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-134) Enumerated Values\
\
| Parameter | Value |\
| --- | --- |\
| type | lend |\
| type | redeem |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Lending Record |\
| »» currency | string | Currency name |\
| »» amount | string | Current Amount |\
| »» last\_wallet\_amount | string | Previous Available Amount |\
| »» last\_lent\_amount | string | Previous Lent Amount |\
| »» last\_frozen\_amount | string | Previous Frozen Amount |\
| »» type | string | Record Type: lend - Lend, redeem - Redeem |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/lend_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/lend_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "lend",\
    "currency": "BTC",\
    "amount": "1",\
    "last_wallet_amount": "0.2",\
    "last_lent_amount": "0",\
    "last_frozen_amount": "0",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-total-interest-income-for-specified-currency) Query user's total interest income for specified currency\
\
`GET /earn/uni/interests/{currency}`\
\
_Query user's total interest income for specified currency_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UniLendInterest_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » interest | string | Interest income |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interests/btc'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interests/btc"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "AE",\
"interest": "123.345"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-dividend-records) Query user dividend records\
\
`GET /earn/uni/interest_records`\
\
_Query user dividend records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Query by specified currency name |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer(int32) | false | Maximum number of items returned. Default: 100, minimum: 1, maximum: 100 |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-57) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Interest Record |\
| »» status | integer | Status: 0 - fail, 1 - success |\
| »» currency | string | Currency |\
| »» actual\_rate | string | Actual Rate |\
| »» interest | string | Interest |\
| »» interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
| »» create\_time | integer(int64) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interest_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interest_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "status": 1,\
    "currency": "AE",\
    "actual_rate": "0.0005",\
    "interest": "0.05",\
    "interest_status": "interest_dividend",\
    "create_time": 1673247054000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-interest-compounding-status) Query currency interest compounding status\
\
`GET /earn/uni/interest_status/{currency}`\
\
_Query currency interest compounding status_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | path | string | true | Currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_UniCurrencyInterest_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | Currency |\
| » interest\_status | string | Interest status: interest\_dividend - Normal dividend, interest\_reinvest - Interest reinvestment |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/interest_status/btc'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/interest_status/btc"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"currency": "BTC",\
"interest_status": "interest_dividend"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#uniloan-currency-annualized-trend-chart) UniLoan currency annualized trend chart\
\
`GET /earn/uni/chart`\
\
_UniLoan currency annualized trend chart_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | true | Start timestamp in seconds, maximum span 30 days |\
| to | query | integer(int64) | true | End timestamp in seconds, maximum span 30 days |\
| asset | query | string | true | Currency name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | none | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » time | integer(int64) | none |\
| » value | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/chart'\
query_param = 'from=1719763200&to=1722441600&asset=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/chart"\
query_param="from=1719763200&to=1722441600&asset=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "time": 1719705600,\
    "value": "0.01"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#currency-estimated-annualized-interest-rate) Currency estimated annualized interest rate\
\
`GET /earn/uni/rate`\
\
_Currency estimated annualized interest rate_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | none | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency | string | none |\
| » est\_rate | string | Unconverted percentage |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/uni/rate'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/uni/rate"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "USDT",\
    "est_rate": "0.0226"\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#collateral-loan) Collateral-loan\
\
Collateral loan, only for single currency collateral\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-collateral-loan-order) Place collateral loan order\
\
`POST /loan/collateral/orders`\
\
_Place collateral loan order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » collateral\_amount | body | string | true | Collateral amount |\
| » collateral\_currency | body | string | true | Collateral currency |\
| » borrow\_amount | body | string | true | Borrowed amount |\
| » borrow\_currency | body | string | true | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders'\
query_param = ''\
body='{"collateral_amount":"1","collateral_currency":"BTC","borrow_amount":"49","borrow_currency":"USDT"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/orders"\
query_param=""\
body_param='{"collateral_amount":"1","collateral_currency":"BTC","borrow_amount":"49","borrow_currency":"USDT"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_amount": "1",\
"collateral_currency": "BTC",\
"borrow_amount": "49",\
"borrow_currency": "USDT"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005578\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-loan-order-list) Query collateral loan order list\
\
`GET /loan/collateral/orders`\
\
_Query collateral loan order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| collateral\_currency | query | string | false | Collateral currency |\
| borrow\_currency | query | string | false | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Collateral order\] |\
| » _None_ | object | Collateral order |\
| »» order\_id | integer(int64) | Order ID |\
| »» collateral\_currency | string | Collateral currency |\
| »» collateral\_amount | string | Collateral amount |\
| »» borrow\_currency | string | Borrowed currency |\
| »» borrow\_amount | string | Borrowed amount |\
| »» repaid\_amount | string | Repaid amount |\
| »» repaid\_principal | string | Repaid principal |\
| »» repaid\_interest | string | Repaid interest |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» current\_ltv | string | Current collateralization rate |\
| »» liquidate\_ltv | string | Liquidation collateralization rate |\
| »» status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» left\_repay\_total | string | Outstanding principal and interest (outstanding principal + outstanding interest) |\
| »» left\_repay\_principal | string | Outstanding principal |\
| »» left\_repay\_interest | string | Outstanding interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000421,\
    "collateral_currency": "BTC",\
    "borrow_currency": "USDT",\
    "collateral_amount": "1",\
    "borrow_amount": "1000",\
    "repaid_amount": "10",\
    "repaid_principal": "10",\
    "repaid_interest": "0",\
    "init_ltv": "0.0003934533764831",\
    "current_ltv": "0.0004521768651985",\
    "liquidate_ltv": "0.9",\
    "status": "initial_status",\
    "borrow_time": 1688462668,\
    "left_repay_total": "990.0219384",\
    "left_repay_interest": "0.0219384"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-single-order-details-5) Query single order details\
\
`GET /loan/collateral/orders/{order_id}`\
\
_Query single order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | integer(int64) | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details queried successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Collateral order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » collateral\_currency | string | Collateral currency |\
| » collateral\_amount | string | Collateral amount |\
| » borrow\_currency | string | Borrowed currency |\
| » borrow\_amount | string | Borrowed amount |\
| » repaid\_amount | string | Repaid amount |\
| » repaid\_principal | string | Repaid principal |\
| » repaid\_interest | string | Repaid interest |\
| » init\_ltv | string | Initial collateralization rate |\
| » current\_ltv | string | Current collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
| » status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| » borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| » left\_repay\_total | string | Outstanding principal and interest (outstanding principal + outstanding interest) |\
| » left\_repay\_principal | string | Outstanding principal |\
| » left\_repay\_interest | string | Outstanding interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/orders/100001'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/orders/100001"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10000421,\
"collateral_currency": "BTC",\
"borrow_currency": "USDT",\
"collateral_amount": "1",\
"borrow_amount": "1000",\
"repaid_amount": "10",\
"repaid_principal": "10",\
"repaid_interest": "0",\
"init_ltv": "0.0003934533764831",\
"current_ltv": "0.0004521768651985",\
"liquidate_ltv": "0.9",\
"status": "initial_status",\
"borrow_time": 1688462668,\
"left_repay_total": "990.0219384",\
"left_repay_interest": "0.0219384"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#collateral-loan-repayment) Collateral loan repayment\
\
`POST /loan/collateral/repay`\
\
_Collateral loan repayment_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » repay\_amount | body | string | true | Repayment amount, it is mandatory when making partial repayments |\
| » repaid\_all | body | boolean | true | Repayment method, set to `true` for full repayment, and `false` for partial repayment; |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-58) Detailed descriptions\
\
**» repaid\_all**: Repayment method, set to `true` for full repayment, and `false` for partial repayment;\
When partial repayment, the repay\_amount parameter cannot be greater than the remaining amount to be repaid by the user.\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Repay_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » repaid\_principal | string | Principal |\
| » repaid\_interest | string | Interest |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/repay'\
query_param = ''\
body='{"order_id":37438962,"repay_amount":"1000","repaid_all":false}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/repay"\
query_param=""\
body_param='{"order_id":37438962,"repay_amount":"1000","repaid_all":false}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 37438962,\
"repay_amount": "1000",\
"repaid_all": false\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"repaid_principal": "11",\
"repaid_interest": "111"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-loan-repayment-records) Query collateral loan repayment records\
\
`GET /loan/collateral/repay_records`\
\
_Query collateral loan repayment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| source | query | string | true | Operation type: repay - Regular repayment, liquidate - Liquidation |\
| borrow\_currency | query | string | false | Borrowed currency |\
| collateral\_currency | query | string | false | Collateral currency |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Repayment record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Repayment record ID |\
| »» repaid\_amount | string | Repayment amount |\
| »» borrow\_currency | string | Borrowed currency |\
| »» collateral\_currency | string | Collateral currency |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp |\
| »» repay\_time | integer(int64) | Repayment time, timestamp |\
| »» total\_interest | string | Total interest |\
| »» before\_left\_principal | string | Principal to be repaid before repayment |\
| »» after\_left\_principal | string | Principal to be repaid after repayment |\
| »» before\_left\_collateral | string | Collateral amount before repayment |\
| »» after\_left\_collateral | string | Collateral amount after repayment |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/repay_records'\
query_param = 'source=repay'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/repay_records"\
query_param="source=repay"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000425,\
    "record_id": 181,\
    "repaid_amount": "10.00000000000000000000",\
    "borrow_currency": "USDT",\
    "collateral_currency": "BTC",\
    "collateral_amount": "1.00000000000000000000",\
    "init_ltv": "0.00039345337648310000",\
    "borrow_time": 1688471851,\
    "repay_time": 1688526310,\
    "total_interest": "0.25446901544300000000",\
    "before_left_principal": "11.00000000",\
    "pre_left_principal": "990.00000000000000000000",\
    "after_left_principal": "990.00000000000000000000",\
    "before_left_collateral": "1.00000000000000000000",\
    "after_left_collateral": "1.00000000000000000000"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#increase-or-redeem-collateral) Increase or redeem collateral\
\
`POST /loan/collateral/collaterals`\
\
_Increase or redeem collateral_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » collateral\_currency | body | string | true | Collateral currency |\
| » collateral\_amount | body | string | true | Collateral amount |\
| » type | body | string | true | Operation type: append - add collateral, redeem - withdraw collateral |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 204 | [No Content(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.5) | Operation successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/collaterals'\
query_param = ''\
body='{"collateral_amount":"1212","collateral_currency":"BTC","order_id":1130,"type":"append"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/collateral/collaterals"\
query_param=""\
body_param='{"collateral_amount":"1212","collateral_currency":"BTC","order_id":1130,"type":"append"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"collateral_amount": "1212",\
"collateral_currency": "BTC",\
"order_id": 1130,\
"type": "append"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-adjustment-records) Query collateral adjustment records\
\
`GET /loan/collateral/collaterals`\
\
_Query collateral adjustment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| borrow\_currency | query | string | false | Borrowed currency |\
| collateral\_currency | query | string | false | Collateral currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Collateral record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Collateral record ID |\
| »» borrow\_currency | string | Borrowed currency |\
| »» borrow\_amount | string | Borrowed amount |\
| »» collateral\_currency | string | Collateral currency |\
| »» before\_collateral | string | Collateral amount before adjustment |\
| »» after\_collateral | string | Collateral amount after adjustment |\
| »» before\_ltv | string | Collateral ratio before adjustment |\
| »» after\_ltv | string | Collateral ratio after adjustment |\
| »» operate\_time | integer(int64) | Operation time, timestamp in seconds |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/collaterals'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/collaterals"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000417,\
    "record_id": 10000452,\
    "borrow_currency": "USDT",\
    "borrow_amount": "1000.00000000000000000000",\
    "collateral_currency": "BTC",\
    "pre_collateral": "1.00000000000000000000",\
    "after_collateral": "2.00000000000000000000",\
    "pre_ltv": "0.00039345555621480000",\
    "after_ltv": "0.00019672777810740000",\
    "operate_time": 1688461924\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-total-borrowing-and-collateral-amount) Query user's total borrowing and collateral amount\
\
`GET /loan/collateral/total_amount`\
\
_Query user's total borrowing and collateral amount_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's total borrowing and collateral amount_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » borrow\_amount | string | Total borrowing amount in USDT |\
| » collateral\_amount | string | Total collateral amount in USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/total_amount'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/total_amount"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"borrow_amount": "11",\
"collateral_amount": "111"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-collateralization-ratio-and-remaining-borrowable-currencies) Query user's collateralization ratio and remaining borrowable currencies\
\
`GET /loan/collateral/ltv`\
\
_Query user's collateralization ratio and remaining borrowable currencies_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| collateral\_currency | query | string | true | Collateral currency |\
| borrow\_currency | query | string | true | Borrowed currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_User's currency statistics data_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » collateral\_currency | string | Collateral currency |\
| » borrow\_currency | string | Borrowed currency |\
| » init\_ltv | string | Initial collateralization rate |\
| » alert\_ltv | string | Warning collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
| » min\_borrow\_amount | string | Minimum borrowable amount for the loan currency |\
| » left\_borrowable\_amount | string | Remaining borrowable amount for the loan currency |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/ltv'\
query_param = 'collateral_currency=BTC&borrow_currency=USDT'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/collateral/ltv"\
query_param="collateral_currency=BTC&borrow_currency=USDT"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"collateral_currency": "BTC",\
"borrow_currency": "USDT",\
"init_ltv": "0.7",\
"alert_ltv": "0.8",\
"liquidate_ltv": "0.9",\
"min_borrow_amount": "3",\
"left_borrowable_amount": "4233030.635065916703"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-supported-borrowing-and-collateral-currencies) Query supported borrowing and collateral currencies\
\
`GET /loan/collateral/currencies`\
\
_Query supported borrowing and collateral currencies_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| loan\_currency | query | string | false | Parameter loan\_currency. If omitted, returns all supported borrowing currencies; if provided, returns the array of collateral currencies supported for that borrowing currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Supported borrowing and collateral currencies |\
| »» loan\_currency | string | Borrowed currency |\
| »» collateral\_currency | array | List of supported collateral currencies |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/collateral/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/collateral/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "loan_currency": "BTC",\
    "collateral_currency": [\
      "BTC",\
      "ETH",\
      "GT"\
    ]\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#multi-collateral-loan) Multi-collateral-loan\
\
Multi-currency collateral\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-multi-currency-collateral-order) Place multi-currency collateral order\
\
`POST /loan/multi_collateral/orders`\
\
_Place multi-currency collateral order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | string | false | Order ID |\
| » order\_type | body | string | false | current - current rate, fixed - fixed rate, defaults to current if not specified |\
| » fixed\_type | body | string | false | Fixed interest rate lending period: 7d - 7 days, 30d - 30 days. Required for fixed rate |\
| » fixed\_rate | body | string | false | Fixed interest rate, required for fixed rate |\
| » auto\_renew | body | boolean | false | Fixed interest rate, auto-renewal |\
| » auto\_repay | body | boolean | false | Fixed interest rate, auto-repayment |\
| » borrow\_currency | body | string | true | Borrowed currency |\
| » borrow\_amount | body | string | true | Borrowed amount |\
| » collateral\_currencies | body | array | false | Collateral currency and amount |\
| »» CollateralCurrency | body | object | false | none |\
| »»» currency | body | string | false | Currency |\
| »»» amount | body | string | false | Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders'\
query_param = ''\
body='{"order_id":1721387470,"order_type":"fixed","fixed_type":"7d","fixed_rate":0.00001,"auto_renew":true,"auto_repay":true,"borrow_currency":"BTC","borrow_amount":"1","collateral_currencies":[{"currency":"USDT","amount":"1000"}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/orders"\
query_param=""\
body_param='{"order_id":1721387470,"order_type":"fixed","fixed_type":"7d","fixed_rate":0.00001,"auto_renew":true,"auto_repay":true,"borrow_currency":"BTC","borrow_amount":"1","collateral_currencies":[{"currency":"USDT","amount":"1000"}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 1721387470,\
"order_type": "fixed",\
"fixed_type": "7d",\
"fixed_rate": 0.00001,\
"auto_renew": true,\
"auto_repay": true,\
"borrow_currency": "BTC",\
"borrow_amount": "1",\
"collateral_currencies": [\
    {\
      "currency": "USDT",\
      "amount": "1000"\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005578\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-multi-currency-collateral-order-list) Query multi-currency collateral order list\
\
`GET /loan/multi_collateral/orders`\
\
_Query multi-currency collateral order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| sort | query | string | false | Sort type: `time_desc` \- Created time descending (default), `ltv_asc` \- Collateral ratio ascending, `ltv_desc` \- Collateral ratio descending. |\
| order\_type | query | string | false | Order type: current - Query current orders, fixed - Query fixed orders, defaults to current orders if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | \[Multi-Collateral Order\] |\
| » _None_ | object | Multi-Collateral Order |\
| »» order\_id | string | Order ID |\
| »» order\_type | string | current - current, fixed - fixed |\
| »» fixed\_type | string | Fixed interest rate loan periods: 7d - 7 days, 30d - 30 days |\
| »» fixed\_rate | string | Fixed interest rate |\
| »» expire\_time | integer(int64) | Expiration time, timestamp, unit in seconds |\
| »» auto\_renew | boolean | Fixed interest rate, auto-renewal |\
| »» auto\_repay | boolean | Fixed interest rate, auto-repayment |\
| »» current\_ltv | string | Current collateralization rate |\
| »» status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» total\_left\_repay\_usdt | string | Total outstanding value converted to USDT |\
| »» total\_left\_collateral\_usdt | string | Total collateral value converted to USDT |\
| »» borrow\_currencies | array | Borrowing Currency List |\
| »»» BorrowCurrencyInfo | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» left\_repay\_principal | string | Outstanding principal |\
| »»»» left\_repay\_interest | string | Outstanding interest |\
| »»»» left\_repay\_usdt | string | Remaining total outstanding value converted to USDT |\
| »»» collateral\_currencies | array | Collateral Currency List |\
| »»»» CollateralCurrencyInfo | object | none |\
| »»»»» currency | string | Currency |\
| »»»»» index\_price | string | Currency Index Price |\
| »»»»» left\_collateral | string | Remaining collateral amount |\
| »»»»» left\_collateral\_usdt | string | Remaining collateral value converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": "10005578",\
    "order_type": "fixed",\
    "fixed_type": "7d",\
    "fixed_rate": 0.00001,\
    "expire_time": 1703820105,\
    "auto_renew": true,\
    "auto_repay": true,\
    "current_ltv": "0.0001004349664281",\
    "status": "lent",\
    "borrow_time": 1702615021,\
    "total_left_repay_usdt": "106.491212982",\
    "total_left_collateral_usdt": "1060300.18",\
    "borrow_currencies": [\
      {\
        "currency": "GT",\
        "index_price": "10.6491",\
        "left_repay_principal": "10",\
        "left_repay_interest": "0.00002",\
        "left_repay_usdt": "106.491212982"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "112794.7",\
        "left_collateral": "9.4",\
        "left_collateral_usdt": "1060270.18"\
      },\
      {\
        "currency": "USDT",\
        "index_price": "1",\
        "left_collateral": "30",\
        "left_collateral_usdt": "30"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-order-details) Query order details\
\
`GET /loan/multi_collateral/orders/{order_id}`\
\
_Query order details_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | path | string | true | Order ID returned when order is successfully created |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order details queried successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-Collateral Order_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | string | Order ID |\
| » order\_type | string | current - current, fixed - fixed |\
| » fixed\_type | string | Fixed interest rate loan periods: 7d - 7 days, 30d - 30 days |\
| » fixed\_rate | string | Fixed interest rate |\
| » expire\_time | integer(int64) | Expiration time, timestamp, unit in seconds |\
| » auto\_renew | boolean | Fixed interest rate, auto-renewal |\
| » auto\_repay | boolean | Fixed interest rate, auto-repayment |\
| » current\_ltv | string | Current collateralization rate |\
| » status | string | Order status:<br>\- initial: Initial state after placing the order<br>\- collateral\_deducted: Collateral deduction successful<br>\- collateral\_returning: Loan failed - Collateral return pending<br>\- lent: Loan successful<br>\- repaying: Repayment in progress<br>\- liquidating: Liquidation in progress<br>\- finished: Order completed<br>\- closed\_liquidated: Liquidation and repayment completed |\
| » borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| » total\_left\_repay\_usdt | string | Total outstanding value converted to USDT |\
| » total\_left\_collateral\_usdt | string | Total collateral value converted to USDT |\
| » borrow\_currencies | array | Borrowing Currency List |\
| »» BorrowCurrencyInfo | object | none |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» left\_repay\_principal | string | Outstanding principal |\
| »»» left\_repay\_interest | string | Outstanding interest |\
| »»» left\_repay\_usdt | string | Remaining total outstanding value converted to USDT |\
| »» collateral\_currencies | array | Collateral Currency List |\
| »»» CollateralCurrencyInfo | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» left\_collateral | string | Remaining collateral amount |\
| »»»» left\_collateral\_usdt | string | Remaining collateral value converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/orders/12345'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/orders/12345"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": "10005578",\
"order_type": "fixed",\
"fixed_type": "7d",\
"fixed_rate": 0.00001,\
"expire_time": 1703820105,\
"auto_renew": true,\
"auto_repay": true,\
"current_ltv": "0.0001004349664281",\
"status": "lent",\
"borrow_time": 1702615021,\
"total_left_repay_usdt": "106.491212982",\
"total_left_collateral_usdt": "1060300.18",\
"borrow_currencies": [\
    {\
      "currency": "GT",\
      "index_price": "10.6491",\
      "left_repay_principal": "10",\
      "left_repay_interest": "0.00002",\
      "left_repay_usdt": "106.491212982"\
    }\
],\
"collateral_currencies": [\
    {\
      "currency": "BTC",\
      "index_price": "112794.7",\
      "left_collateral": "9.4",\
      "left_collateral_usdt": "1060270.18"\
    },\
    {\
      "currency": "USDT",\
      "index_price": "1",\
      "left_collateral": "30",\
      "left_collateral_usdt": "30"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#multi-currency-collateral-repayment) Multi-currency collateral repayment\
\
`POST /loan/multi_collateral/repay`\
\
_Multi-currency collateral repayment_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » repay\_items | body | array | true | Repay Currency Item |\
| »» MultiLoanRepayItem | body | object | false | none |\
| »»» currency | body | string | false | Repayment currency |\
| »»» amount | body | string | false | Amount |\
| »»» repaid\_all | body | boolean | true | Repayment method, set to true for full repayment, false for partial repayment |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-currency collateral repayment_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » repaid\_currencies | array | Repay Currency List |\
| »» RepayCurrencyRes | object | none |\
| »»» succeeded | boolean | Whether the repayment was successful |\
| »»» label | string | Error identifier for failed operations; empty when successful |\
| »»» message | string | Error description for failed operations; empty when successful |\
| »»» currency | string | Repayment currency |\
| »»» repaid\_principal | string | Principal |\
| »»» repaid\_interest | string | Principal |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/repay'\
query_param = ''\
body='{"order_id":10005578,"repay_items":[{"currency":"btc","amount":"1","repaid_all":false}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/repay"\
query_param=""\
body_param='{"order_id":10005578,"repay_items":[{"currency":"btc","amount":"1","repaid_all":false}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 10005578,\
"repay_items": [\
    {\
      "currency": "btc",\
      "amount": "1",\
      "repaid_all": false\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005679,\
"repaid_currencies": [\
    {\
      "succeeded": false,\
      "label": "INVALID_PARAM_VALUE",\
      "message": "Invalid parameter value",\
      "currency": "BTC",\
      "repaid_principal": "1",\
      "repaid_interest": "0.0001"\
    },\
    {\
      "succeeded": true,\
      "currency": "BTC",\
      "repaid_principal": "1",\
      "repaid_interest": "0.0001"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-multi-currency-collateral-repayment-records) Query multi-currency collateral repayment records\
\
`GET /loan/multi_collateral/repay`\
\
_Query multi-currency collateral repayment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | true | Operation type: repay - Regular repayment, liquidate - Liquidation |\
| borrow\_currency | query | string | false | Borrowed currency |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-Collateral Repayment Record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Repayment record ID |\
| »» init\_ltv | string | Initial collateralization rate |\
| »» before\_ltv | string | Ltv before the operation |\
| »» after\_ltv | string | Ltv after the operation |\
| »» borrow\_time | integer(int64) | Borrowing time, timestamp in seconds |\
| »» repay\_time | integer(int64) | Repayment time, timestamp in seconds |\
| »» borrow\_currencies | array | List of borrowing information |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» collateral\_currencies | array | List of collateral information |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» repaid\_currencies | array | Repay Currency List |\
| »»» RepayRecordRepaidCurrency | object | none |\
| »»»» currency | string | Repayment currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» repaid\_amount | string | Repayment amount |\
| »»»» repaid\_principal | string | Principal |\
| »»»» repaid\_interest | string | Interest |\
| »»»» repaid\_amount\_usdt | string | Repayment amount converted to USDT |\
| »»» total\_interest\_list | array | Total Interest List |\
| »»»» RepayRecordTotalInterest | object | none |\
| »»»»» currency | string | Currency |\
| »»»»» index\_price | string | Currency Index Price |\
| »»»»» amount | string | Interest Amount |\
| »»»»» amount\_usdt | string | Interest amount converted to USDT |\
| »»»» left\_repay\_interest\_list | array | List of remaining interest to be repaid |\
| »»»»» RepayRecordLeftInterest | object | none |\
| »»»»»» currency | string | Currency |\
| »»»»»» index\_price | string | Currency Index Price |\
| »»»»»» before\_amount | string | Interest amount before repayment |\
| »»»»»» before\_amount\_usdt | string | Converted value of interest before repayment in USDT |\
| »»»»»» after\_amount | string | Interest amount after repayment |\
| »»»»»» after\_amount\_usdt | string | Converted value of interest after repayment in USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/repay'\
query_param = 'type=repay'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/repay"\
query_param="type=repay"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10005679,\
    "record_id": 1348,\
    "init_ltv": "0.2141",\
    "before_ltv": "0.215",\
    "after_ltv": "0.312",\
    "borrow_time": 1702995889,\
    "repay_time": 1703053927,\
    "borrow_currencies": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "before_amount": "1",\
        "before_amount_usdt": "103.02",\
        "after_amount": "0.999017",\
        "after_amount_usdt": "102.91873134"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "ETC",\
        "index_price": "0.6014228107",\
        "before_amount": "1000",\
        "before_amount_usdt": "601.4228107",\
        "after_amount": "1000",\
        "after_amount_usdt": "601.4228107"\
      }\
    ],\
    "repaid_currencies": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "repaid_amount": "0.001",\
        "repaid_principal": "0.000983",\
        "repaid_interest": "0.000017",\
        "repaid_amount_usdt": "0.10302"\
      }\
    ],\
    "total_interest_list": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "amount": "0.000017",\
        "amount_usdt": "0.00175134"\
      }\
    ],\
    "left_repay_interest_list": [\
      {\
        "currency": "BAT",\
        "index_price": "103.02",\
        "before_amount": "0.000017",\
        "before_amount_usdt": "0.00175134",\
        "after_amount": "0",\
        "after_amount_usdt": "0"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#add-or-withdraw-collateral) Add or withdraw collateral\
\
`POST /loan/multi_collateral/mortgage`\
\
_Add or withdraw collateral_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » order\_id | body | integer(int64) | true | Order ID |\
| » type | body | string | true | Operation type: append - add collateral, redeem - withdraw collateral |\
| » collaterals | body | array | false | Collateral currency list |\
| »» currency | body | string | false | Currency |\
| »» amount | body | string | false | Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Operation successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-collateral adjustment result_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » order\_id | integer(int64) | Order ID |\
| » collateral\_currencies | array | Collateral currency information |\
| »» CollateralCurrencyRes | object | none |\
| »»» succeeded | boolean | Update success status |\
| »»» label | string | Error identifier for failed operations; empty when successful |\
| »»» message | string | Error description for failed operations; empty when successful |\
| »»» currency | string | Currency |\
| »»» amount | string | Successfully operated collateral quantity; 0 if operation fails |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/mortgage'\
query_param = ''\
body='{"order_id":10005578,"type":"append","collaterals":[{"currency":"btc","amount":"0.5"}]}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/loan/multi_collateral/mortgage"\
query_param=""\
body_param='{"order_id":10005578,"type":"append","collaterals":[{"currency":"btc","amount":"0.5"}]}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"order_id": 10005578,\
"type": "append",\
"collaterals": [\
    {\
      "currency": "btc",\
      "amount": "0.5"\
    }\
]\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"order_id": 10005679,\
"collateral_currencies": [\
    {\
      "succeeded": true,\
      "currency": "btc",\
      "amount": "0.5"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateral-adjustment-records-2) Query collateral adjustment records\
\
`GET /loan/multi_collateral/mortgage`\
\
_Query collateral adjustment records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| page | query | integer | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| from | query | integer(int64) | false | Start timestamp for the query |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| collateral\_currency | query | string | false | Collateral currency |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-Collateral adjustment record |\
| »» order\_id | integer(int64) | Order ID |\
| »» record\_id | integer(int64) | Collateral record ID |\
| »» before\_ltv | string | Collateral ratio before adjustment |\
| »» after\_ltv | string | Collateral ratio before adjustment |\
| »» operate\_time | integer(int64) | Operation time, timestamp in seconds |\
| »» borrow\_currencies | array | Borrowing Currency List |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
| »» collateral\_currencies | array | Collateral Currency List |\
| »»» currency | string | Currency |\
| »»» index\_price | string | Currency Index Price |\
| »»» before\_amount | string | Amount before the operation |\
| »»» before\_amount\_usdt | string | USDT Amount before the operation |\
| »»» after\_amount | string | Amount after the operation |\
| »»» after\_amount\_usdt | string | USDT Amount after the operation |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/mortgage'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/mortgage"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "order_id": 10000417,\
    "record_id": 10000452,\
    "before_ltv": "0.00039345555621480000",\
    "after_ltv": "0.00019672777810740000",\
    "operate_time": 1688461924,\
    "borrow_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "30000",\
        "before_amount": "0.1",\
        "before_amount_usdt": "1000",\
        "after_amount": "0.6",\
        "after_amount_usdt": "1006"\
      }\
    ],\
    "collateral_currencies": [\
      {\
        "currency": "BTC",\
        "index_price": "30000",\
        "before_amount": "0.1",\
        "before_amount_usdt": "1000",\
        "after_amount": "0.6",\
        "after_amount_usdt": "1006"\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-user-s-collateral-and-borrowing-currency-quota-information) Query user's collateral and borrowing currency quota information\
\
`GET /loan/multi_collateral/currency_quota`\
\
_Query user's collateral and borrowing currency quota information_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | true | Currency type: collateral - Collateral currency, borrow - Borrowing currency |\
| currency | query | string | true | When it is a collateral currency, multiple currencies can be provided separated by commas; when it is a borrowing currency, only one currency can be provided. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Currency Quota |\
| »» currency | string | Currency |\
| »» index\_price | string | Currency Index Price |\
| »» min\_quota | string | Minimum borrowing/collateral limit for the currency |\
| »» left\_quota | string | Remaining borrowing/collateral quota for the currency |\
| »» left\_quote\_usdt | string | Remaining currency limit converted to USDT |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/currency_quota'\
query_param = 'type=collateral&currency=BTC'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/loan/multi_collateral/currency_quota"\
query_param="type=collateral&currency=BTC"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "index_price": "35306.1",\
    "min_quota": "0",\
    "left_quota": "2768152.4958445218723677",\
    "left_quote_usdt": "97732668833.536273678"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-supported-borrowing-and-collateral-currencies-for-multi-currency-collateral) Query supported borrowing and collateral currencies for multi-currency collateral\
\
`GET /loan/multi_collateral/currencies`\
\
_Query supported borrowing and collateral currencies for multi-currency collateral_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Borrowing and collateral currencies supported for Multi-Collateral_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » loan\_currencies | array | List of supported borrowing currencies |\
| »» MultiLoanItem | object | none |\
| »»» currency | string | Currency |\
| »»» price | string | Latest price of the currency |\
| »» collateral\_currencies | array | List of supported collateral currencies |\
| »»» MultiCollateralItem | object | none |\
| »»»» currency | string | Currency |\
| »»»» index\_price | string | Currency Index Price |\
| »»»» discount | string | Discount |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/currencies'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/currencies \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"loan_currencies": [\
    {\
      "currency": "BTC",\
      "price": "1212"\
    },\
    {\
      "currency": "GT",\
      "price": "12"\
    }\
],\
"collateral_currencies": [\
    {\
      "currency": "BTC",\
      "index_price": "1212",\
      "discount": "0.7"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-collateralization-ratio-information) Query collateralization ratio information\
\
`GET /loan/multi_collateral/ltv`\
\
_Query collateralization ratio information_\
\
Multi-currency collateral ratio is fixed, independent of currency\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_Multi-collateral ratio_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » init\_ltv | string | Initial collateralization rate |\
| » alert\_ltv | string | Warning collateralization rate |\
| » liquidate\_ltv | string | Liquidation collateralization rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/ltv'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/ltv \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"init_ltv": "0.7",\
"alert_ltv": "0.8",\
"liquidate_ltv": "0.9"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-s-7-day-and-30-day-fixed-interest-rates) Query currency's 7-day and 30-day fixed interest rates\
\
`GET /loan/multi_collateral/fixed_rate`\
\
_Query currency's 7-day and 30-day fixed interest rates_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-collateral fixed interest rate |\
| »» currency | string | Currency |\
| »» rate\_7d | string | Fixed interest rate for 7-day lending period |\
| »» rate\_30d | string | Fixed interest rate for 30-day lending period |\
| »» update\_time | integer(int64) | Update time, timestamp in seconds |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/fixed_rate'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/fixed_rate \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "rate_7d": "0.000023",\
    "rate_30d": "0.1",\
    "update_time": 1703820105\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-currency-s-current-interest-rate) Query currency's current interest rate\
\
`GET /loan/multi_collateral/current_rate`\
\
_Query currency's current interest rate_\
\
Query currency's current interest rate for the previous hour, current interest rate updates hourly\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currencies | query | array\[string\] | true | Specify currency name query array, separated by commas, maximum 100 items |\
| vip\_level | query | string | false | VIP level, defaults to 0 if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Multi-collateral current interest rate |\
| »» currency | string | Currency |\
| »» current\_rate | string | Currency current interest rate |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/loan/multi_collateral/current_rate'\
query_param = 'currencies=BTC,GT'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/loan/multi_collateral/current_rate?currencies=BTC,GT \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "currency": "BTC",\
    "current_rate": "0.000023"\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#earn) Earn\
\
Earn service\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#eth2-swap) ETH2 swap\
\
`POST /earn/staking/eth2/swap`\
\
_ETH2 swap_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » side | body | string | true | 1-Forward Swap (ETH -> ETH2), 2-Reverse Swap (ETH2 -> ETH) |\
| » amount | body | string | true | Swap Amount |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Swap successful | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/eth2/swap'\
query_param = ''\
body='{"side":"1","amount":"1.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/staking/eth2/swap"\
query_param=""\
body_param='{"side":"1","amount":"1.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"side": "1",\
"amount": "1.5"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#eth2-historical-return-rate-query) ETH2 historical return rate query\
\
`GET /earn/staking/eth2/rate_records`\
\
_ETH2 historical return rate query_\
\
Query ETH earnings rate records for the last 31 days\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » date\_time | integer(int64) | Date Timestamp |\
| » date | string | Date |\
| » rate | string | Percentage Rate |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/eth2/rate_records'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/eth2/rate_records"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "date_time": 1690348815,\
    "date": "2023-07-26",\
    "rate": "60.00"\
},\
{\
    "date_time": 1690435215,\
    "date": "2023-07-27",\
    "rate": "20.00"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#dual-investment-product-list) Dual Investment product list\
\
`GET /earn/dual/investment_plan`\
\
_Dual Investment product list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| plan\_id | query | integer(int64) | false | Financial project ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int32) | Product ID |\
| » instrument\_name | string | Product Name |\
| » invest\_currency | string | Investment Token |\
| » exercise\_currency | string | Strike Token |\
| » exercise\_price | number(double) | Strike price |\
| » delivery\_time | integer(int32) | Settlement time |\
| » min\_copies | integer(int32) | Minimum Units |\
| » max\_copies | integer(int32) | Maximum Units |\
| » per\_value | string | Value Per Unit |\
| » apy\_display | string | Annual Yield |\
| » start\_time | integer(int32) | Start Time |\
| » end\_time | integer(int32) | End time |\
| » status | string | Status: <br>`NOTSTARTED`-Not Started <br>`ONGOING`-In Progress <br>`ENDED`-Ended |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/investment_plan'\
query_param = ''\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/dual/investment_plan \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 272,\
    "instrument_name": "DOGE-17NOV23-0.067-P",\
    "type": "put",\
    "invest_currency": "USDT",\
    "exercise_currency": "DOGE",\
    "exercise_price": 0.067,\
    "delivery_time": 1700208000,\
    "min_copies": 1,\
    "max_copies": 1000,\
    "start_time": 1697685172,\
    "end_time": 1697685172,\
    "status": "ONGOING",\
    "apy_display": "0.0114000000",\
    "per_value": "1"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#dual-investment-order-list) Dual Investment order list\
\
`GET /earn/dual/orders`\
\
_Dual Investment order list_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | false | Start settlement time |\
| to | query | integer(int64) | false | End settlement time |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int32) | Order ID |\
| » plan\_id | integer(int32) | Product ID |\
| » copies | string | Units |\
| » invest\_amount | string | Investment Quantity |\
| » settlement\_amount | string | Settlement Quantity |\
| » create\_time | integer(int32) | Creation time |\
| » complete\_time | integer(int32) | Completed Time |\
| » status | string | Status:<br>`INIT`-Created<br>`SETTLEMENT_SUCCESS`-Settlement Success<br>`SETTLEMENT_PROCESSING`-Settlement Processing<br>`CANCELED`-Canceled<br>`FAILED`-Failed |\
| » invest\_currency | string | Investment Token |\
| » exercise\_currency | string | Strike Token |\
| » exercise\_price | string | Strike price |\
| » settlement\_price | string | Settlement price |\
| » settlement\_currency | string | Settlement currency |\
| » apy\_display | string | Annual Yield |\
| » apy\_settlement | string | Settlement Annual Yield |\
| » delivery\_time | integer(int32) | Settlement time |\
| » text | string | Custom order information |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/dual/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 373,\
    "plan_id": 176,\
    "copies": "1.0000000000",\
    "invest_amount": "0.0000000000",\
    "settlement_amount": "0.0000000000",\
    "create_time": 1697685172,\
    "complete_time": 1697685172,\
    "status": "CANCELED",\
    "invest_currency": "USDT",\
    "exercise_currency": "BTC",\
    "settlement_currency": "",\
    "exercise_price": "24500.0000000000",\
    "settlement_price": "0.0000000000",\
    "delivery_time": 1697685172,\
    "apy_display": "0.6800000000",\
    "apy_settlement": "0.0000000000",\
    "text": "t-custom-text"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-dual-investment-order) Place Dual Investment order\
\
`POST /earn/dual/orders`\
\
_Place Dual Investment order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » plan\_id | body | string | true | Product ID |\
| » amount | body | string | true | Subscription amount, mutually exclusive with copies field |\
| » text | body | string | false | Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions: |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-59) Detailed descriptions\
\
**» text**: Order custom information. Users can set custom ID with this field. Custom fields must meet the following conditions:\
\
1. Must start with `t-`\
2. Excluding `t-`, length cannot exceed 28 bytes\
3. Can only contain numbers, letters, underscore(\_), hyphen(-) or dot(.)\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/dual/orders'\
query_param = ''\
body='{"plan_id":"176","amount":"1","text":"t-custom-text"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/dual/orders"\
query_param=""\
body_param='{"plan_id":"176","amount":"1","text":"t-custom-text"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"plan_id": "176",\
"amount": "1",\
"text": "t-custom-text"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#structured-product-list) Structured Product List\
\
`GET /earn/structured/products`\
\
_Structured Product List_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| type | query | string | false | Product Type (Default empty to query all) |\
| status | query | string | true | Status (Default empty to query all) |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-60) Detailed descriptions\
\
**type**: Product Type (Default empty to query all)\
\
`SharkFin2.0`-Shark Fin\
`BullishSharkFin`-Bullish Treasure\
`BearishSharkFin`-Bearish Treasure\
`DoubleNoTouch`-Volatility Treasure\
`RangeAccrual`-Range Smart Yield\
`SnowBall`-Snowball\
\
**status**: Status (Default empty to query all)\
\
`in_process`-In progress\
`will_begin`-Not started\
`wait_settlement`-Pending settlement\
`done`-Completed\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Structured Investment |\
| »» id | integer(int32) | Product ID |\
| »» type | string | Product Type: <br>`SharkFin2.0`-Shark Fin 2.0 <br>`BullishSharkFin`-Bullish Shark Fin <br>`BearishSharkFin`-Bearish Shark Fin<br>`DoubleNoTouch`-Double No-Touch<br>`RangeAccrual`-Range Accrual<br>`SnowBall`-Snow Ball |\
| »» name\_en | string | Product Name |\
| »» investment\_coin | string | Investment Token |\
| »» investment\_period | string | Investment Period |\
| »» min\_annual\_rate | string | Minimum Annual Rate |\
| »» mid\_annual\_rate | string | Intermediate Annual Rate |\
| »» max\_annual\_rate | string | Maximum Annual Rate |\
| »» watch\_market | string | Underlying Market |\
| »» start\_time | integer(int32) | Start Time |\
| »» end\_time | integer(int32) | End time |\
| »» status | string | Status: <br>`in_process`-in progress <br>`will_begin`-will begin <br>`wait_settlement`-waiting for settlement <br>`done`-done |\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/products'\
query_param = 'status=in_process'\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
\
curl -X GET https://api.gateio.ws/api/v4/earn/structured/products?status=in_process \\
  -H 'Accept: application/json'\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 3700,\
    "type": "BullishSharkFin",\
    "name_en": "Bullish Sharkfin_USDT",\
    "investment_period": 7,\
    "min_annual_rate": "0.50",\
    "mid_annual_rate": "7.50",\
    "max_annual_rate": "13.00",\
    "watch_market": "BTC_USDT",\
    "investment_coin": "USDT",\
    "start_time": 1698224400,\
    "end_time": 1700902800,\
    "status": "in_process"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#structured-product-order-list) Structured Product Order List\
\
`GET /earn/structured/orders`\
\
_Structured Product Order List_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| from | query | integer(int64) | false | Start timestamp |\
| to | query | integer(int64) | false | Termination Timestamp |\
| page | query | integer(int32) | false | Page number |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#detailed-descriptions-61) Detailed descriptions\
\
**from**: Start timestamp\
\
Specify start time, time format is Unix timestamp. If not specified, it defaults to (the data start time of the time range actually returned by to and limit)\
\
**to**: Termination Timestamp\
\
Specify the end time. If not specified, it defaults to the current time, and the time format is a Unix timestamp\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Structured order |\
| »» id | integer(int32) | Order ID |\
| »» pid | string | Product ID |\
| »» lock\_coin | string | Locked coin |\
| »» amount | string | Locked amount |\
| »» status | string | Status: <br>SUCCESS - SUCCESS <br>FAILED - FAILED<br>DONE - DONE |\
| »» income | string | Income |\
| »» create\_time | integer(int32) | Created time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/orders'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/structured/orders"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 35,\
    "pid": "3691",\
    "lock_coin": "ETH",\
    "amount": "20",\
    "status": "SUCCESS",\
    "income": "0.000000",\
    "create_time": 1697685172\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#place-structured-product-order) Place Structured Product Order\
\
`POST /earn/structured/orders`\
\
_Place Structured Product Order_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | string | false | Product ID |\
| » amount | body | string | false | Buy Quantity |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Order placed successfully | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/structured/orders'\
query_param = ''\
body='{"pid":"1","amount":"0.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/structured/orders"\
query_param=""\
body_param='{"pid":"1","amount":"0.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": "1",\
"amount": "0.5"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#staking-coins) Staking coins\
\
`GET /earn/staking/coins`\
\
_Staking coins_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » cointype | body | string | false | Currency type: swap - voucher; lock - locked position; debt - US Treasury bond. |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » pid | integer | Product ID |\
| » productType | integer | Project type 0-voucher 1-locked position 2-US Treasury bond |\
| » isDefi | integer | Is DEFI protocol 0-no 1-yes |\
| » currency | string | Staked currencies (multiple entries separated by commas) |\
| » estimateApr | string | Estimated yield rate |\
| » minStakeAmount | string | Minimum staked amount |\
| » maxStakeAmount | string | Maximum staked amount |\
| » protocolName | string | Protocol name |\
| » redeemPeriod | string | Redemption period (days) |\
| » exchangeRate | string | Exchange rate |\
| » exchangeRateReserve | string | Reverse exchange rate |\
| » extraInterest | array | Additional rewards |\
| »» start\_time | string | Start timestamp |\
| »» end\_time | string | End Timestamp |\
| »» reward\_coin | string | Additional reward currency |\
| »» segment\_interest | array | Tiered reward information |\
| »»» money\_min | string | Tiered lower value |\
| »»» money\_max | string | Tiered upper value |\
| »»» money\_rate | string | Tiered interest rate |\
| »» currencyRewards | array | Reward currency information |\
| »»» apr | string | Base interest rate |\
| »»» reward\_coin | string | Reward currency |\
| »»» reward\_delay\_days | string | Dividend day -1 indicates dividends are distributed upon redemption |\
| »»» interest\_delay\_days | string | Interest accrual day |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/coins'\
query_param = ''\
body='{"cointype":"string"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/coins"\
query_param=""\
body_param='{"cointype":"string"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"cointype": "string"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "pid": 1,\
    "productType": 0,\
    "isDefi": 0,\
    "currency": "GT",\
    "estimateApr": "36.00",\
    "minStakeAmount": "1",\
    "maxStakeAmount": 700,\
    "protocolName": "Gatechain",\
    "redeemPeriod": 0,\
    "exchangeRate": "1.00000000",\
    "exchangeRateReserve": "1.00000000",\
    "extraInterest": [\
      {\
        "start_time": 1749427201,\
        "end_time": 1765497600,\
        "reward_coin": "GT",\
        "segment_interest": [\
          {\
            "money_min": "0",\
            "money_max": "1000",\
            "money_rate": "10.00"\
          },\
          {\
            "money_min": "1000",\
            "money_max": "2000",\
            "money_rate": "15.00"\
          },\
          {\
            "money_min": "2000",\
            "money_max": "3000",\
            "money_rate": "30.00"\
          }\
        ]\
      }\
    ],\
    "currencyRewards": [\
      {\
        "apr": "6.00",\
        "reward_coin": "GT2",\
        "reward_delay_days": 1,\
        "interest_delay_days": 1\
      }\
    ]\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-token-swap-for-earned-coins) On-chain token swap for earned coins\
\
`POST /earn/staking/swap`\
\
_On-chain token swap for earned coins_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » coin | body | string | true | Currency |\
| » side | body | string | true | 0 - Stake 1 - Redeem |\
| » amount | body | string | true | Amount |\
| » pid | body | integer(int32) | false | DeFi-type Mining Protocol Identifier |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Swap successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer | Order ID |\
| » pid | integer | Product ID |\
| » uid | integer | User ID |\
| » coin | string | Currency |\
| » type | integer | Type 0-Staking 1-Redemption |\
| » subtype | string | SubType |\
| » amount | string | Amount |\
| » exchange\_rate | string | Exchange ratio |\
| » exchange\_amount | string | Redemption Amount |\
| » updateStamp | integer | UpdateTimestamp |\
| » createStamp | integer | Transaction timestamp |\
| » status | integer | status 1-success |\
| » protocol\_type | integer | DEFI Protocol Type |\
| » client\_order\_id | string | Reference ID |\
| » source | string | Order Origin |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/swap'\
query_param = ''\
body='{"coin":"GT","side":"0","amount":"1.5"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/earn/staking/swap"\
query_param=""\
body_param='{"coin":"GT","side":"0","amount":"1.5"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"coin": "GT",\
"side": "0",\
"amount": "1.5"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 21000,\
"uid": 12345,\
"coin": "GT",\
"type": 0,\
"exchange_rate": "1.00000000",\
"amount": "2",\
"pid": 1,\
"status": 1,\
"createStamp": 1752200661\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#list-of-on-chain-coin-earning-orders) List of on-chain coin-earning orders\
\
`GET /earn/staking/order_list`\
\
_List of on-chain coin-earning orders_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
| » type | body | integer | false | Type 0-Staking 1-Redemption |\
| » page | body | integer | false | Page |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » page | integer | Page |\
| » pageSize | integer | Items per page |\
| » pageCount | integer | Total pages |\
| » totalCount | integer | Total entries |\
| » list | array | none |\
| »» pid | integer | Product ID |\
| »» coin | string | Staked and redeemed currencies |\
| »» amount | string | Amount |\
| »» type | integer | Type 0-Staking 1-Redemption |\
| »» status | integer | Status |\
| »» redeem\_stamp | integer | Redemption credit time |\
| »» createStamp | integer | Order time |\
| »» exchange\_amount | string | Exchange rate |\
| »» fee | string | Fee |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/order_list'\
query_param = ''\
body='{"pid":0,"coin":"string","type":0,"page":0}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/order_list"\
query_param=""\
body_param='{"pid":0,"coin":"string","type":0,"page":0}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string",\
"type": 0,\
"page": 0\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"page": 1,\
"pageSize": 20,\
"pageCount": 5,\
"totalCount": 90,\
"list": [\
    {\
      "pid": 2,\
      "coin": "SOL",\
      "amount": "1.00000000",\
      "type": 0,\
      "status": 1,\
      "redeem_stamp": 0,\
      "createStamp": 1756105456,\
      "exchange_amount": "1.00000000",\
      "fee": "0.0000000000"\
    },\
    {\
      "pid": 2,\
      "coin": "SOL",\
      "amount": "1.00000000",\
      "type": 0,\
      "status": 1,\
      "redeem_stamp": 0,\
      "createStamp": 1755588122,\
      "exchange_amount": "0.80000000",\
      "fee": "0.0000000000"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-coin-earning-dividend-records) On-chain coin-earning dividend records\
\
`GET /earn/staking/award_list`\
\
_On-chain coin-earning dividend records_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
| » page | body | integer | false | Page |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » page | integer | Page |\
| » pageSize | integer | Items per page |\
| » pageCount | integer | Total pages |\
| » totalCount | integer | Total entries |\
| » list | array | none |\
| »» pid | integer | Product ID |\
| »» mortgage\_coin | string | Collateral currency |\
| »» amount | string | Amount |\
| »» reward\_coin | string | Reward currency |\
| »» interest | string | Interest amount |\
| »» fee | string | Fee |\
| »» status | integer | Status |\
| »» bonus\_date | string | Date |\
| »» should\_bonus\_stamp | integer | Scheduled distribution timestamp |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/award_list'\
query_param = ''\
body='{"pid":0,"coin":"string","page":0}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/award_list"\
query_param=""\
body_param='{"pid":0,"coin":"string","page":0}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string",\
"page": 0\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"page": 1,\
"pageSize": 20,\
"pageCount": 2,\
"totalCount": 33,\
"list": [\
    {\
      "pid": 64,\
      "mortgage_coin": "USDT",\
      "amount": "0.0000019100",\
      "reward_coin": "COMP",\
      "interest": "0.0000019100",\
      "fee": "0.0000000700",\
      "status": 4,\
      "bonus_date": "2025-08-08 00:00:00",\
      "should_bonus_stamp": 1755907200\
    },\
    {\
      "pid": 27,\
      "mortgage_coin": "DOT",\
      "amount": "0.0023424700",\
      "reward_coin": "DOT",\
      "interest": "0.0023424700",\
      "fee": "0.0001232800",\
      "status": 4,\
      "bonus_date": "2025-08-11 00:00:00",\
      "should_bonus_stamp": 1755043200\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#on-chain-coin-earning-assets) On-chain coin-earning assets\
\
`GET /earn/staking/assets`\
\
_On-chain coin-earning assets_\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » pid | body | integer | false | Product ID |\
| » coin | body | string | false | Staked and redeemed currencies |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » pid | integer | Product ID |\
| » mortgage\_coin | string | Staked currencies (multiple entries separated by commas) |\
| » mortgage\_amount | string | Position amount |\
| » createStamp | integer | First timestamp |\
| » extra\_income | string | Additional rewards converted to USDT amount |\
| » freeze\_amount | string | Locked amount, used in trading |\
| » move\_income | string | none |\
| » type | integer | Type 0-voucher 1-locked position 2-US Treasury bond |\
| » status | integer | Status |\
| » income\_total | string | Total earnings by currency |\
| » yesterday\_income\_multi | array | Yesterday's earnings |\
| » reward\_coins | array | Currency-specific reward earnings |\
| »» reward\_coin | string | Reward currency |\
| »» interest\_delay\_days | integer | Interest accrual day |\
| »» reward\_delay\_days | integer | Dividend day -1 indicates dividends are distributed upon redemption |\
| » defi\_income | object | DEIF earnings |\
| »» total | array | none |\
| »»» coin | string | none |\
| »»» amount | string | none |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/earn/staking/assets'\
query_param = ''\
body='{"pid":0,"coin":"string"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/earn/staking/assets"\
query_param=""\
body_param='{"pid":0,"coin":"string"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"pid": 0,\
"coin": "string"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "pid": 1,\
    "mortgage_coin": "GT",\
    "mortgage_amount": "111.60000000",\
    "createStamp": 1728530266,\
    "extra_income": "0",\
    "freeze_amount": "0.0000000000",\
    "move_income": "0.0000000000",\
    "type": 0,\
    "status": 1,\
    "income_total": "0",\
    "yesterday_income_multi": [],\
    "reward_coins": [\
      {\
        "reward_coin": "GT2",\
        "interest_delay_days": 1,\
        "reward_delay_days": 1\
      }\
    ]\
},\
{\
    "pid": 64,\
    "mortgage_coin": "USDT",\
    "mortgage_amount": "1.0000000000",\
    "createStamp": 1750764156,\
    "extra_income": "0",\
    "freeze_amount": "0.0000000000",\
    "move_income": "0.0000000000",\
    "type": 1,\
    "status": 1,\
    "income_total": "0",\
    "yesterday_income_multi": [],\
    "defi_income": {\
      "total": [\
        {\
          "coin": "COMP",\
          "amount": "0.0000076200"\
        }\
      ]\
    },\
    "reward_coins": [\
      {\
        "reward_coin": "USDT",\
        "interest_delay_days": 1,\
        "reward_delay_days": -1\
      },\
      {\
        "reward_coin": "COMP",\
        "interest_delay_days": 1,\
        "reward_delay_days": 15\
      }\
    ]\
}\
]\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#account) Account\
\
Retrieve user account information\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#retrieve-user-account-information) Retrieve user account information\
\
`GET /account/detail`\
\
_Retrieve user account information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
_AccountDetail_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » ip\_whitelist | array | IP Whitelist |\
| » currency\_pairs | array | Trading pair whitelist |\
| » user\_id | integer(int64) | User ID |\
| » tier | integer(int64) | User VIP level |\
| » key | object | API Key details |\
| »» mode | integer(int32) | Mode: 1 - Classic mode, 2 - Legacy unified mode |\
| » copy\_trading\_role | integer(int32) | User role: 0 - Normal user, 1 - Copy trading leader, 2 - Follower, 3 - Both leader and follower |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/detail'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/detail"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"user_id": 1667201533,\
"ip_whitelist": [\
    "127.0.0.1"\
],\
"currency_pairs": [\
    "USDT_BTC"\
],\
"key": {\
    "mode": 1\
},\
"tier": 2,\
"copy_trading_role": 1\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#get-user-transaction-rate-limit-information) Get user transaction rate limit information\
\
`GET /account/rate_limit`\
\
_Get user transaction rate limit information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Successfully retrieved | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
_AccountRateLimit_\
\
| Name | Type | Description |\
| --- | --- | --- |\
| AccountRateLimit | array | Account rate limit |\
| » tier | string | Frequency limit level (For detailed frequency limit rules, see [Transaction ratio frequency limit](https://www.gate.com/docs/developers/apiv4/en/#rate-limit-based-on-fill-ratio)) |\
| » ratio | string | Fill rate |\
| » main\_ratio | string | Total fill ratio of main account |\
| » updated\_at | string | Update time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/rate_limit'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/rate_limit"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "type": "spot",\
    "tier": "1",\
    "ratio": "0",\
    "main_ratio": "0",\
    "updated_at": "1728230400"\
},\
{\
    "type": "futures",\
    "tier": "1",\
    "ratio": "0",\
    "main_ratio": "0",\
    "updated_at": "1728230400"\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#create-stp-user-group) Create STP user group\
\
`POST /account/stp_groups`\
\
_Create STP user group_\
\
Only the main account is allowed to create a new STP user group\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | object | true | none |\
| » id | body | integer(int64) | false | STP Group ID |\
| » name | body | string | true | STP Group name |\
| » creator\_id | body | integer(int64) | false | Creator ID |\
| » create\_time | body | integer(int64) | false | Creation time |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User added successfully, returning current users in the STP group | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » id | integer(int64) | STP Group ID |\
| » name | string | STP Group name |\
| » creator\_id | integer(int64) | Creator ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups'\
query_param = ''\
body='{"name":"stp_name"}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/stp_groups"\
query_param=""\
body_param='{"name":"stp_name"}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"name": "stp_name"\
}\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"id": 123435,\
"name": "group",\
"create_time": 1548000000,\
"creator_id": 10000\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-stp-user-groups-created-by-the-user) Query STP user groups created by the user\
\
`GET /account/stp_groups`\
\
_Query STP user groups created by the user_\
\
Only query STP user groups created by the current main account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| name | query | string | false | Fuzzy search by name |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » id | integer(int64) | STP Group ID |\
| » name | string | STP Group name |\
| » creator\_id | integer(int64) | Creator ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/stp_groups"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "id": 123435,\
    "name": "group",\
    "create_time": 1548000000,\
    "creator_id": 10000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-users-in-the-stp-user-group) Query users in the STP user group\
\
`GET /account/stp_groups/{stp_id}/users`\
\
_Query users in the STP user group_\
\
Only the main account that created this STP group can query the account ID list in the current STP group\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/stp_groups/1/users"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#add-users-to-the-stp-user-group) Add users to the STP user group\
\
`POST /account/stp_groups/{stp_id}/users`\
\
_Add users to the STP user group_\
\
- Only the main account that created this STP group can add users to the STP user group\
- Only accounts under the current main account are allowed, cross-main account is not permitted\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
| body | body | array\[integer\] | true | User ID |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | User added successfully, returning current users in the STP group | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = ''\
body='[1,2,3]'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/stp_groups/1/users"\
query_param=""\
body_param='[1,2,3]'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
[\
1,\
2,\
3\
]\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#delete-users-from-the-stp-user-group) Delete users from the STP user group\
\
`DELETE /account/stp_groups/{stp_id}/users`\
\
_Delete users from the STP user group_\
\
- Only the main account that created this STP group is allowed to delete users from the STP user group\
- Deletion is limited to accounts under the current main account; cross-account deletion is not permitted\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| stp\_id | path | integer(int64) | true | STP Group ID |\
| user\_id | query | integer(int64) | true | STP user IDs, multiple IDs can be separated by commas |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Users deleted successfully, returns current users in the STP group | \[Inline\] |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| _None_ | array | none |\
| » user\_id | integer(int64) | User ID |\
| » stp\_id | integer(int64) | STP Group ID |\
| » create\_time | integer(int64) | Creation time |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/stp_groups/1/users'\
query_param = 'user_id=1'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('DELETE', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('DELETE', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="DELETE"\
url="/account/stp_groups/1/users"\
query_param="user_id=1"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
[\
{\
    "user_id": 10000,\
    "stp_id": 1,\
    "create_time": 1548000000\
}\
]\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#configure-gt-fee-deduction) Configure GT fee deduction\
\
`POST /account/debit_fee`\
\
_Configure GT fee deduction_\
\
Enable or disable GT fee deduction for the current account\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| body | body | [DebitFee](https://www.gate.com/docs/developers/apiv4/en/#schemadebitfee) | true | none |\
| » enabled | body | boolean | true | Whether GT fee deduction is enabled |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | None |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/debit_fee'\
query_param = ''\
body='{"enabled":true}'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('POST', prefix + url, query_param, body)\
headers.update(sign_headers)\
r = requests.request('POST', host + prefix + url, headers=headers, data=body)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="POST"\
url="/account/debit_fee"\
query_param=""\
body_param='{"enabled":true}'\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url -d "$body_param" -H "Content-Type: application/json" \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Body parameter\
\
```\
{\
"enabled": true\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#query-gt-fee-deduction-configuration) Query GT fee deduction configuration\
\
`GET /account/debit_fee`\
\
_Query GT fee deduction configuration_\
\
Query the GT fee deduction configuration for the current account\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Success | [DebitFee](https://www.gate.com/docs/developers/apiv4/en/#schemadebitfee) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/account/debit_fee'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/account/debit_fee"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"enabled": true\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#rebate-2) Rebate\
\
Broker rebate endpoints\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-transaction-history-of-recommended-users) Broker obtains transaction history of recommended users\
\
`GET /rebate/agency/transaction_history`\
\
_Broker obtains transaction history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify the trading pair. If not specified, returns all trading pairs |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» AgencyTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» amount\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/agency/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/agency/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 100,\
"list": [\
    {\
      "transaction_time": 1539852480,\
      "user_id": 10000,\
      "group_name": "gateio",\
      "fee": "1",\
      "fee_asset": "GT",\
      "currency_pair": "GT_USDT",\
      "amount": "1000",\
      "source": "SPOT",\
      "amount_asset": "GT"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-rebate-history-of-recommended-users) Broker obtains rebate history of recommended users\
\
`GET /rebate/agency/commission_history`\
\
_Broker obtains rebate history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| commission\_type | query | integer | false | Rebate type: 1 - Direct rebate, 2 - Indirect rebate, 3 - Self rebate |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » currency\_pair | string | Trading pair |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» AgencyCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» commission\_amount | string | Transaction amount |\
| »»» commission\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/agency/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/agency/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 100,\
"list": [\
    {\
      "commission_time": 1539852480,\
      "user_id": 10000,\
      "group_name": "gateio",\
      "commission_amount": "1000",\
      "source": "SPOT",\
      "commission_asset": "GT"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-obtains-transaction-history-of-recommended-users) Partner obtains transaction history of recommended users\
\
`GET /rebate/partner/transaction_history`\
\
_Partner obtains transaction history of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency\_pair | query | string | false | Specify the trading pair. If not specified, returns all trading pairs |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» PartnerTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» amount\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 15,\
"list": [\
    {\
      "user_id": 1879032535,\
      "group_name": "test",\
      "fee": "0.00044800",\
      "transaction_time": 1718615824,\
      "amount": "29.98688000USDT",\
      "amount_asset": "USDT",\
      "currency_pair": "BCH_USDT",\
      "source": "SPOT",\
      "fee_asset": "BCH"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-obtains-rebate-records-of-recommended-users) Partner obtains rebate records of recommended users\
\
`GET /rebate/partner/commission_history`\
\
_Partner obtains rebate records of recommended users_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| currency | query | string | false | Specify the currency. If not specified, returns all currencies |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time for querying records, defaults to 7 days before current time if not specified |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» PartnerCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» commission\_amount | string | Transaction amount |\
| »»» commission\_asset | string | Commission Asset |\
| »»» source | string | Commission source: SPOT - Spot commission, FUTURES - Futures commission |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 52,\
"list": [\
    {\
      "user_id": 1879043947,\
      "commission_time": 1718616728,\
      "commission_amount": "0.2216934846",\
      "commission_asset": "USDT",\
      "source": "SPOT",\
      "group_name": "test"\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#partner-subordinate-list) Partner subordinate list\
\
`GET /rebate/partner/sub_list`\
\
_Partner subordinate list_\
\
Including sub-agents, direct customers, and indirect customers\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | Subordinate list |\
| »» PartnerSub | object | none |\
| »»» user\_id | integer(int64) | User ID |\
| »»» user\_join\_time | integer(int64) | Time when user joined the system, Unix timestamp in seconds |\
| »»» type | integer(int64) | Type (1-Sub-agent 2-Indirect direct customer 3-Direct direct customer) |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/partner/sub_list'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/partner/sub_list"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"total": 3,\
"list": [\
    {\
      "user_id": 1,\
      "user_join_time": 1666255731,\
      "type": 1\
    },\
    {\
      "user_id": 2,\
      "user_join_time": 1666271213,\
      "type": 2\
    },\
    {\
      "user_id": 3,\
      "user_join_time": 1666422143,\
      "type": 3\
    }\
]\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-user-s-rebate-records) Broker obtains user's rebate records\
\
`GET /rebate/broker/commission_history`\
\
_Broker obtains user's rebate records_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time of the query record. If not specified, defaults to 30 days before the current time |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of commission history |\
| »» BrokerCommission | object | none |\
| »»» commission\_time | integer(int64) | Commission time (Unix timestamp in seconds) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» amount | string | The amount of commission rebates |\
| »»» fee | string | Fee |\
| »»» fee\_asset | string | Fee currency |\
| »»» rebate\_fee | string | The income from rebates, converted to USDT |\
| »»» source | string | Commission transaction type: Spot, Futures, Options, Alpha |\
| »»» currency\_pair | string | Trading pair |\
| »»» sub\_broker\_info | object | Sub-broker information |\
| »»»» user\_id | integer(int64) | Sub-broker user ID |\
| »»»» original\_commission\_rate | string | Sub-broker original commission rate |\
| »»»» relative\_commission\_rate | string | Sub-broker relative commission rate |\
| »»»» commission\_rate | string | Sub-broker actual commission rate |\
| »»» alpha\_contract\_addr | string | Alpha contract address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/broker/commission_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/broker/commission_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "user_id": 110285113,\
      "group_name": "",\
      "commission_time": 1702545051,\
      "fee": "0.0020000000",\
      "source": "SPOT",\
      "amount": "0.00040000",\
      "rebate_fee": "0.0004000000",\
      "fee_asset": "BEAM",\
      "currency_pair": "BEAM_USDT",\
      "sub_broker_info": {\
        "user_id": 110285114,\
        "original_commission_rate": "0.2",\
        "relative_commission_rate": "0.5",\
        "commission_rate": "0.1"\
      },\
      "alpha_contract_addr": "0x9a26f5433671751c3276a065f57e5a02d2817973"\
    }\
],\
"total": 47\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#broker-obtains-user-s-trading-history) Broker obtains user's trading history\
\
`GET /rebate/broker/transaction_history`\
\
_Broker obtains user's trading history_\
\
Record query time range cannot exceed 30 days\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| limit | query | integer | false | Maximum number of records returned in a single list |\
| offset | query | integer | false | List offset, starting from 0 |\
| user\_id | query | integer(int64) | false | User ID. If not specified, all user records will be returned |\
| from | query | integer(int64) | false | Start time of the query record. If not specified, defaults to 30 days before the current time |\
| to | query | integer(int64) | false | End timestamp for the query, defaults to current time if not specified |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » total | integer(int64) | Total |\
| » list | array | List of transaction history |\
| »» BrokerTransaction | object | none |\
| »»» transaction\_time | integer(int64) | Transaction Time. (unix timestamp) |\
| »»» user\_id | integer(int64) | User ID |\
| »»» group\_name | string | Group name |\
| »»» fee | string | Fee amount (USDT) |\
| »»» currency\_pair | string | Trading pair |\
| »»» amount | string | Transaction amount |\
| »»» fee\_asset | string | Fee currency |\
| »»» source | string | Commission transaction type: Spot, Futures, Options, Alpha |\
| »»» sub\_broker\_info | object | Sub-broker information |\
| »»»» user\_id | integer(int64) | Sub-broker user ID |\
| »»»» original\_commission\_rate | string | Sub-broker original commission rate |\
| »»»» relative\_commission\_rate | string | Sub-broker relative commission rate |\
| »»»» commission\_rate | string | Sub-broker actual commission rate |\
| »»» alpha\_contract\_addr | string | Alpha contract address |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/broker/transaction_history'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/broker/transaction_history"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "user_id": 110285442,\
      "group_name": "",\
      "fee": "0.5000045000",\
      "transaction_time": 1702545051,\
      "amount": "-1000.00900000",\
      "currency_pair": "DOGE_USDT",\
      "source": "Futures",\
      "fee_asset": "USDT",\
      "sub_broker_info": {\
        "user_id": 110285114,\
        "original_commission_rate": "0.2",\
        "relative_commission_rate": "0.5",\
        "commission_rate": "0.1"\
      },\
      "alpha_contract_addr": "0x9a26f5433671751c3276a065f57e5a02d2817973"\
    }\
],\
"total": 47\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-obtains-rebate-information) User obtains rebate information\
\
`GET /rebate/user/info`\
\
_User obtains rebate information_\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | Query successful | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » _None_ | object | Retrieve user rebate information |\
| »» invite\_uid | integer(int64) | My inviter's UID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/user/info'\
query_param = ''\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/user/info"\
query_param=""\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"invite_uid": 987\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#user-subordinate-relationship) User subordinate relationship\
\
`GET /rebate/user/sub_relation`\
\
_User subordinate relationship_\
\
Query whether the specified user is within the system\
\
### Parameters\
\
| Name | In | Type | Required | Description |\
| --- | --- | --- | --- | --- |\
| user\_id\_list | query | string | true | Query user ID list, separated by commas. If more than 100, only 100 will be returned |\
\
### Responses\
\
| Status | Meaning | Description | Schema |\
| --- | --- | --- | --- |\
| 200 | [OK(opens new window)](https://tools.ietf.org/html/rfc7231#section-6.3.1) | List retrieved successfully | Inline |\
\
### Response Schema\
\
Status Code **200**\
\
| Name | Type | Description |\
| --- | --- | --- |\
| » list | array | Subordinate relationship list |\
| »» UserSub | object | none |\
| »»» uid | integer(int64) | User ID |\
| »»» belong | string | User's system affiliation (partner/referral). Empty means not belonging to any system |\
| »»» type | integer(int64) | Type (0-Not in system 1-Direct subordinate agent 2-Indirect subordinate agent 3-Direct direct customer 4-Indirect direct customer 5-Regular user) |\
| »»» ref\_uid | integer(int64) | Inviter user ID |\
\
WARNING\
\
To perform this operation, you must be authenticated by API key and secret\
\
> Code samples\
\
```\
# coding: utf-8\
import requests\
import time\
import hashlib\
import hmac\
\
host = "https://api.gateio.ws"\
prefix = "/api/v4"\
headers = {'Accept': 'application/json', 'Content-Type': 'application/json'}\
\
url = '/rebate/user/sub_relation'\
query_param = 'user_id_list=1, 2, 3'\
# for `gen_sign` implementation, refer to section `Authentication` above\
sign_headers = gen_sign('GET', prefix + url, query_param)\
headers.update(sign_headers)\
r = requests.request('GET', host + prefix + url + "?" + query_param, headers=headers)\
print(r.json())\
\
```\
\
```\
key="YOUR_API_KEY"\
secret="YOUR_API_SECRET"\
host="https://api.gateio.ws"\
prefix="/api/v4"\
method="GET"\
url="/rebate/user/sub_relation"\
query_param="user_id_list=1, 2, 3"\
body_param=''\
timestamp=$(date +%s)\
body_hash=$(printf "$body_param" | openssl sha512 | awk '{print $NF}')\
sign_string="$method\n$prefix$url\n$query_param\n$body_hash\n$timestamp"\
sign=$(printf "$sign_string" | openssl sha512 -hmac "$secret" | awk '{print $NF}')\
\
full_url="$host$prefix$url?$query_param"\
curl -X $method $full_url \\
    -H "Timestamp: $timestamp" -H "KEY: $key" -H "SIGN: $sign"\
\
```\
\
> Example responses\
\
> 200 Response\
\
```\
{\
"list": [\
    {\
      "belong": "",\
      "ref_uid": 0,\
      "type": 0,\
      "uid": 9\
    },\
    {\
      "belong": "partner",\
      "type": 1,\
      "ref_uid": 1,\
      "uid": 2\
    },\
    {\
      "belong": "referral",\
      "type": 5,\
      "ref_uid": 1,\
      "uid": 3\
    }\
]\
}\
\
```\
\
# [\#](https://www.gate.com/docs/developers/apiv4/en/\#schemas) Schemas\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#subaccountkey) SubAccountKey\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| user\_id | integer(int64) | false | read-only | User ID |\
| mode | integer(int32) | false | none | Mode: 1 - classic 2 - portfolio account |\
| name | string | false | none | API Key Name |\
| perms | array | false | none | none |\
| » name | string | false | none | Permission function name (no value will be cleared)<br>\- wallet: wallet<br>\- spot: spot/margin<br>\- futures: perpetual contract<br>\- delivery: delivery contract<br>\- earn: earn<br>\- custody: custody<br>\- options: options<br>\- account: account information<br>\- loan: lending<br>\- margin: margin<br>\- unified: unified account<br>\- copy: copy trading |\
| » read\_only | boolean | false | none | Read Only |\
| ip\_whitelist | array | false | none | IP whitelist (list will be cleared if no value is passed) |\
| key | string | false | read-only | API Key |\
| state | integer(int32) | false | read-only | Status: 1-Normal 2-Frozen 3-Locked |\
| created\_at | integer(int64) | false | read-only | Creation time |\
| updated\_at | integer(int64) | false | read-only | Last Update Time |\
| last\_access | integer(int64) | false | read-only | Last Access Time |\
\
```\
{\
"user_id": 0,\
"mode": 0,\
"name": "string",\
"perms": [\
    {\
      "name": "string",\
      "read_only": true\
    }\
],\
"ip_whitelist": [\
    "string"\
],\
"key": "string",\
"state": 0,\
"created_at": 0,\
"updated_at": 0,\
"last_access": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#estimaterate) EstimateRate\
\
_Estimate current hourly lending rates, returned by currency_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-2) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| **additionalProperties** | string | false | none | none |\
\
```\
{\
"property1": "string",\
"property2": "string"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#spotpricetriggeredorder) SpotPriceTriggeredOrder\
\
_Spot price order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-3) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| trigger | object | true | none | none |\
| » price | string | true | none | Trigger price |\
| » rule | string | true | none | Price trigger condition<br>\- `>=`: triggered when market price is greater than or equal to `price`<br>\- `<=`: triggered when market price is less than or equal to `price` |\
| » expiration | integer | true | none | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| put | object | true | none | none |\
| » type | string | false | none | Order type，default to `limit`<br>\- limit : Limit Order<br>\- market : Market Order |\
| » side | string | true | none | Order side<br>\- buy: buy side<br>\- sell: sell side |\
| » price | string | true | none | Order price |\
| » amount | string | true | none | Trading quantity, refers to the trading quantity of the trading currency, i.e., the currency that needs to be traded, for example, the quantity of BTC in BTC\_USDT. |\
| » account | string | true | none | Trading account type. Unified account must be set to `unified`<br>\- normal: spot trading<br>\- margin: margin trading<br>\- unified: unified account |\
| » time\_in\_force | string | false | none | time\_in\_force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only |\
| » auto\_borrow | boolean | false | none | Whether to borrow coins automatically |\
| » auto\_repay | boolean | false | none | Whether to repay the loan automatically |\
| » text | string | false | none | The source of the order, including:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app |\
| id | integer(int64) | false | read-only | Auto order ID |\
| user | integer | false | read-only | User ID |\
| market | string | true | none | Market |\
| ctime | integer(int64) | false | read-only | Creation time |\
| ftime | integer(int64) | false | read-only | End time |\
| fired\_order\_id | integer(int64) | false | read-only | ID of the order created after trigger |\
| status | string | false | read-only | Status<br>\- open: Running<br>\- cancelled: Manually cancelled<br>\- finish: Successfully completed<br>\- failed: Failed to execute<br>\- expired: Expired |\
| reason | string | false | read-only | Additional description of how the order was completed |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-135) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| rule | >= |\
| rule | <= |\
| type | limit |\
| type | market |\
| side | buy |\
| side | sell |\
| account | normal |\
| account | margin |\
| account | unified |\
| time\_in\_force | gtc |\
| time\_in\_force | ioc |\
\
```\
{\
"trigger": {\
    "price": "string",\
    "rule": ">=",\
    "expiration": 0\
},\
"put": {\
    "type": "limit",\
    "side": "buy",\
    "price": "string",\
    "amount": "string",\
    "account": "normal",\
    "time_in_force": "gtc",\
    "auto_borrow": false,\
    "auto_repay": false,\
    "text": "string"\
},\
"id": 0,\
"user": 0,\
"market": "string",\
"ctime": 0,\
"ftime": 0,\
"fired_order_id": 0,\
"status": "string",\
"reason": "string"\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#contract) Contract\
\
_Futures contract details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-4) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| name | string | false | none | Futures contract |\
| type | string | false | none | Contract type: inverse - inverse contract, direct - direct contract |\
| quanto\_multiplier | string | false | none | Multiplier used in converting from invoicing to settlement currency |\
| leverage\_min | string | false | none | Minimum leverage |\
| leverage\_max | string | false | none | Maximum leverage |\
| maintenance\_rate | string | false | none | Maintenance rate of margin |\
| mark\_type | string | false | none | Mark price type: internal - internal trading price, index - external index price |\
| mark\_price | string | false | none | Current mark price |\
| index\_price | string | false | none | Current index price |\
| last\_price | string | false | none | Last trading price |\
| maker\_fee\_rate | string | false | none | Maker fee rate, negative values indicate rebates |\
| taker\_fee\_rate | string | false | none | Taker fee rate |\
| order\_price\_round | string | false | none | Minimum order price increment |\
| mark\_price\_round | string | false | none | Minimum mark price increment |\
| funding\_rate | string | false | none | Current funding rate |\
| funding\_interval | integer | false | none | Funding application interval, unit in seconds |\
| funding\_next\_apply | number(double) | false | none | Next funding time |\
| risk\_limit\_base | string | false | none | Base risk limit (deprecated) |\
| risk\_limit\_step | string | false | none | Risk limit adjustment step (deprecated) |\
| risk\_limit\_max | string | false | none | Maximum risk limit allowed by the contract (deprecated). It is recommended to use /futures/{settle}/risk\_limit\_tiers to query risk limits |\
| order\_size\_min | integer(int64) | false | none | Minimum order size allowed by the contract |\
| order\_size\_max | integer(int64) | false | none | Maximum order size allowed by the contract |\
| order\_price\_deviate | string | false | none | Maximum allowed deviation between order price and current mark price. The order price `order_price` must satisfy the following condition:<br> abs(order\_price - mark\_price) <= mark\_price \* order\_price\_deviate |\
| ref\_discount\_rate | string | false | none | Trading fee discount for referred users |\
| ref\_rebate\_rate | string | false | none | Commission rate for referrers |\
| orderbook\_id | integer(int64) | false | none | Orderbook update ID |\
| trade\_id | integer(int64) | false | none | Current trade ID |\
| trade\_size | integer(int64) | false | none | Historical cumulative trading volume |\
| position\_size | integer(int64) | false | none | Current total long position size |\
| config\_change\_time | number(double) | false | none | Last configuration update time |\
| in\_delisting | boolean | false | none | `in_delisting=true` and position\_size>0 indicates the contract is in delisting transition period<br>`in_delisting=true` and position\_size=0 indicates the contract is delisted |\
| orders\_limit | integer | false | none | Maximum number of pending orders |\
| enable\_bonus | boolean | false | none | Whether bonus is enabled |\
| enable\_credit | boolean | false | none | Whether portfolio margin account is enabled |\
| create\_time | number(double) | false | none | Created time of the contract |\
| funding\_cap\_ratio | string | false | none | The factor for the maximum of the funding rate. Maximum of funding rate = (1/market maximum leverage - maintenance margin rate) \* funding\_cap\_ratio |\
| status | string | false | none | Contract status types include: prelaunch (pre-launch), trading (active), delisting (delisting), delisted (delisted), circuit\_breaker (circuit breaker) |\
| launch\_time | integer(int64) | false | none | Contract expiry timestamp |\
| delisting\_time | integer(int64) | false | none | Timestamp when contract enters reduce-only state |\
| delisted\_time | integer(int64) | false | none | Contract delisting time |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-136) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| type | inverse |\
| type | direct |\
| mark\_type | internal |\
| mark\_type | index |\
\
```\
{\
"name": "string",\
"type": "inverse",\
"quanto_multiplier": "string",\
"leverage_min": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"mark_type": "internal",\
"mark_price": "string",\
"index_price": "string",\
"last_price": "string",\
"maker_fee_rate": "string",\
"taker_fee_rate": "string",\
"order_price_round": "string",\
"mark_price_round": "string",\
"funding_rate": "string",\
"funding_interval": 0,\
"funding_next_apply": 0.1,\
"risk_limit_base": "string",\
"risk_limit_step": "string",\
"risk_limit_max": "string",\
"order_size_min": 0,\
"order_size_max": 0,\
"order_price_deviate": "string",\
"ref_discount_rate": "string",\
"ref_rebate_rate": "string",\
"orderbook_id": 0,\
"trade_id": 0,\
"trade_size": 0,\
"position_size": 0,\
"config_change_time": 0.1,\
"in_delisting": true,\
"orders_limit": 0,\
"enable_bonus": true,\
"enable_credit": true,\
"create_time": 0.1,\
"funding_cap_ratio": "string",\
"status": "string",\
"launch_time": 0,\
"delisting_time": 0,\
"delisted_time": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#position) Position\
\
_Futures position details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-5) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| user | integer(int64) | false | read-only | User ID |\
| contract | string | false | read-only | Futures contract |\
| size | integer(int64) | false | read-only | Position size |\
| leverage | string | false | none | Position leverage. 0 means cross margin; positive number means isolated margin |\
| risk\_limit | string | false | none | Position risk limit |\
| leverage\_max | string | false | read-only | Maximum leverage under current risk limit |\
| maintenance\_rate | string | false | read-only | Maintenance rate under current risk limit |\
| value | string | false | read-only | Position value calculated in settlement currency |\
| margin | string | false | none | Position margin |\
| entry\_price | string | false | read-only | Entry price |\
| liq\_price | string | false | read-only | Liquidation price |\
| mark\_price | string | false | read-only | Current mark price |\
| initial\_margin | string | false | read-only | The initial margin occupied by the position, applicable to the portfolio margin account |\
| maintenance\_margin | string | false | read-only | Maintenance margin required for the position, applicable to portfolio margin account |\
| unrealised\_pnl | string | false | read-only | Unrealized PNL |\
| realised\_pnl | string | false | read-only | Realized PnL |\
| pnl\_pnl | string | false | read-only | Realized PNL - Position P/L |\
| pnl\_fund | string | false | read-only | Realized PNL - Funding Fees |\
| pnl\_fee | string | false | read-only | Realized PNL - Transaction Fees |\
| history\_pnl | string | false | read-only | Total realized PnL from closed positions |\
| last\_close\_pnl | string | false | read-only | PNL of last position close |\
| realised\_point | string | false | read-only | Realized POINT PNL |\
| history\_point | string | false | read-only | History realized POINT PNL |\
| adl\_ranking | integer | false | read-only | Ranking of auto deleveraging, a total of 1-5 grades, `1` is the highest, `5` is the lowest, and `6` is the special case when there is no position held or in liquidation |\
| pending\_orders | integer | false | read-only | Current pending order quantity |\
| close\_order | object\|null | false | read-only | Current close order information, or `null` if no close order |\
| » id | integer(int64) | false | none | Order ID |\
| » price | string | false | none | Order price |\
| » is\_liq | boolean | false | none | Whether the close order is from liquidation |\
| mode | string | false | none | Position mode, including:<br>\- `single`: Single position mode<br>\- `dual_long`: Long position in dual position mode<br>\- `dual_short`: Short position in dual position mode |\
| cross\_leverage\_limit | string | false | none | Cross margin leverage (valid only when `leverage` is 0) |\
| update\_time | integer(int64) | false | read-only | Last update time |\
| update\_id | integer(int64) | false | read-only | Update ID. The value increments by 1 each time the position is updated |\
| trade\_long\_size | integer(int64) | false | read-only | Cumulative long size |\
| trade\_long\_xprice | string | false | read-only | Cumulative long size\*price |\
| trade\_short\_size | integer(int64) | false | read-only | Cumulative short size |\
| trade\_short\_xprice | string | false | read-only | Cumulative short size\*price |\
| trade\_max\_size | string | false | none | Maximum position |\
| open\_time | integer(int64) | false | none | First Open Time |\
| risk\_limit\_table | string | false | read-only | Risk limit table ID |\
| average\_maintenance\_rate | string | false | read-only | Average maintenance margin rate |\
| voucher\_size | string | false | read-only | Experience Coupon Position Size |\
| voucher\_margin | string | false | read-only | Experience Coupon Position Margin |\
| voucher\_id | integer(int64) | false | read-only | Experience Coupon ID |\
| pid | integer(int64) | false | read-only | Sub-account position ID |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-137) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| mode | single |\
| mode | dual\_long |\
| mode | dual\_short |\
\
```\
{\
"user": 0,\
"contract": "string",\
"size": 0,\
"leverage": "string",\
"risk_limit": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"value": "string",\
"margin": "string",\
"entry_price": "string",\
"liq_price": "string",\
"mark_price": "string",\
"initial_margin": "string",\
"maintenance_margin": "string",\
"unrealised_pnl": "string",\
"realised_pnl": "string",\
"pnl_pnl": "string",\
"pnl_fund": "string",\
"pnl_fee": "string",\
"history_pnl": "string",\
"last_close_pnl": "string",\
"realised_point": "string",\
"history_point": "string",\
"adl_ranking": 0,\
"pending_orders": 0,\
"close_order": {\
    "id": 0,\
    "price": "string",\
    "is_liq": true\
},\
"mode": "single",\
"cross_leverage_limit": "string",\
"update_time": 0,\
"update_id": 0,\
"trade_long_size": 0,\
"trade_long_xprice": "string",\
"trade_short_size": 0,\
"trade_short_xprice": "string",\
"trade_max_size": "string",\
"open_time": 0,\
"risk_limit_table": "string",\
"average_maintenance_rate": "string",\
"voucher_size": "string",\
"voucher_margin": "string",\
"voucher_id": 0,\
"pid": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futuresorder) FuturesOrder\
\
_Futures order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-6) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| id | integer(int64) | false | read-only | Futures order ID |\
| user | integer | false | read-only | User ID |\
| create\_time | number(double) | false | read-only | Creation time of order |\
| update\_time | number(double) | false | read-only | OrderUpdateTime |\
| finish\_time | number(double) | false | read-only | Order finished time. Not returned if order is open |\
| finish\_as | string | false | read-only | How the order was finished:<br>\- filled: all filled<br>\- cancelled: manually cancelled<br>\- liquidated: cancelled because of liquidation<br>\- ioc: time in force is `IOC`, finish immediately<br>\- auto\_deleveraged: finished by ADL<br>\- reduce\_only: cancelled because of increasing position while `reduce-only` set<br>\- position\_closed: cancelled because the position was closed<br>\- reduce\_out: only reduce positions by excluding hard-to-fill orders<br>\- stp: cancelled because self trade prevention |\
| status | string | false | read-only | Order status<br>\- `open`: Pending<br>\- `finished`: Completed |\
| contract | string | true | none | Futures contract |\
| size | integer(int64) | true | none | Required. Trading quantity. Positive for buy, negative for sell. Set to 0 for close position orders. |\
| iceberg | integer(int64) | false | none | Display size for iceberg orders. 0 for non-iceberg orders. Note that hidden portions are charged taker fees. |\
| price | string | false | none | Order price. Price of 0 with `tif` set to `ioc` represents a market order. |\
| close | boolean | false | write-only | Set as `true` to close the position, with `size` set to 0 |\
| is\_close | boolean | false | read-only | Is the order to close position |\
| reduce\_only | boolean | false | write-only | Set as `true` to be reduce-only order |\
| is\_reduce\_only | boolean | false | read-only | Is the order reduce-only |\
| is\_liq | boolean | false | read-only | Is the order for liquidation |\
| tif | string | false | none | Time in force<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled, taker only<br>\- poc: PendingOrCancelled, makes a post-only order that always enjoys a maker fee<br>\- fok: FillOrKill, fill either completely or none |\
| left | integer(int64) | false | read-only | Unfilled quantity |\
| fill\_price | string | false | read-only | Fill price |\
| text | string | false | none | Custom order information. If not empty, must follow the rules below:<br>1\. Prefixed with `t-`<br>2\. No longer than 28 bytes without `t-` prefix<br>3\. Can only include 0-9, A-Z, a-z, underscore(\_), hyphen(-) or dot(.)<br>In addition to user-defined information, the following are internal reserved fields that identify the order source:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app<br>\- auto\_deleveraging: Automatic deleveraging<br>\- liquidation: Forced liquidation of positions under the old classic mode<br>\- liq-xxx: a. Forced liquidation of positions under the new classic mode, including isolated margin, one-way cross margin, and non-hedged positions under two-way cross margin. b. Forced liquidation of isolated positions under the unified account single-currency margin mode<br>\- hedge-liq-xxx: Forced liquidation of hedged positions under the new classic mode two-way cross margin, i.e., simultaneously closing long and short positions<br>\- pm\_liquidate: Forced liquidation under unified account multi-currency margin mode<br>\- comb\_margin\_liquidate: Forced liquidation under unified account portfolio margin mode<br>\- scm\_liquidate: Forced liquidation of positions under unified account single-currency margin mode<br>\- insurance: Insurance |\
| tkfr | string | false | read-only | Taker fee |\
| mkfr | string | false | read-only | Maker fee |\
| refu | integer | false | read-only | Referrer user ID |\
| auto\_size | string | false | write-only | Set side to close dual-mode position. `close_long` closes the long side; while `close_short` the short one. Note `size` also needs to be set to 0 |\
| stp\_id | integer | false | read-only | Orders between users in the same `stp_id` group are not allowed to be self-traded<br>1\. If the `stp_id` of two orders being matched is non-zero and equal, they will not be executed. Instead, the corresponding strategy will be executed based on the `stp_act` of the taker.<br>2\. `stp_id` returns `0` by default for orders that have not been set for `STP group` |\
| stp\_act | string | false | none | Self-Trading Prevention Action. Users can use this field to set self-trade prevention strategies<br>1\. After users join the `STP Group`, they can pass `stp_act` to limit the user's self-trade prevention strategy. If `stp_act` is not passed, the default is `cn` strategy.<br>2\. When the user does not join the `STP group`, an error will be returned when passing the `stp_act` parameter.<br>3\. If the user did not use `stp_act` when placing the order, `stp_act` will return '-'<br>\- cn: Cancel newest, cancel new orders and keep old ones<br>\- co: Cancel oldest, cancel old orders and keep new ones<br>\- cb: Cancel both, both old and new orders will be cancelled |\
| amend\_text | string | false | read-only | The custom data that the user remarked when amending the order |\
\
\|limit\_vip\|integer(int64)\|false\|write-only\|Counterparty user's VIP level for limit order fills. Current order will only match with orders whose VIP level is less than or equal to the specified level. Only 11~16 are supported; default is 0\|\
\|pid\|integer(int64)\|false\|write-only\|Position ID\|\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-138) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| finish\_as | filled |\
| finish\_as | cancelled |\
| finish\_as | liquidated |\
| finish\_as | ioc |\
| finish\_as | auto\_deleveraged |\
| finish\_as | reduce\_only |\
| finish\_as | position\_closed |\
| finish\_as | reduce\_out |\
| finish\_as | stp |\
| status | open |\
| status | finished |\
| tif | gtc |\
| tif | ioc |\
| tif | poc |\
| tif | fok |\
| auto\_size | close\_long |\
| auto\_size | close\_short |\
| stp\_act | co |\
| stp\_act | cn |\
| stp\_act | cb |\
| stp\_act | - |\
\
```\
{\
"id": 0,\
"user": 0,\
"create_time": 0.1,\
"update_time": 0.1,\
"finish_time": 0.1,\
"finish_as": "filled",\
"status": "open",\
"contract": "string",\
"size": 0,\
"iceberg": 0,\
"price": "string",\
"close": false,\
"is_close": true,\
"reduce_only": false,\
"is_reduce_only": true,\
"is_liq": true,\
"tif": "gtc",\
"left": 0,\
"fill_price": "string",\
"text": "string",\
"tkfr": "string",\
"mkfr": "string",\
"refu": 0,\
"auto_size": "close_long",\
"stp_id": 0,\
"stp_act": "co",\
"amend_text": "string",\
\
"limit_vip": 0,\
"pid": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#batchamendorderreq) BatchAmendOrderReq\
\
_Modify contract order parameters_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-7) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| order\_id | integer(int64) | false | none | Order id, order\_id and text must contain at least one |\
| text | string | false | none | User-defined order text, at least one of order\_id and text must be passed |\
| size | integer(int64) | false | none | New order size, including filled size.<br>\- If less than or equal to the filled quantity, the order will be cancelled.<br>\- The new order side must be identical to the original one.<br>\- Close order size cannot be modified.<br>\- For reduce-only orders, increasing the size may cancel other reduce-only orders.<br>\- If the price is not modified, decreasing the size will not affect the depth queue, while increasing the size will place it at the end of the current price level. |\
| price | string | false | none | New order price |\
| amend\_text | string | false | none | Custom info during order amendment |\
\
```\
{\
"order_id": 0,\
"text": "string",\
"size": 0,\
"price": "string",\
"amend_text": "string",\
\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#futurespricetriggeredorder) FuturesPriceTriggeredOrder\
\
_Futures price-triggered order details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-8) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| initial | object | true | none | none |\
| » contract | string | true | none | Futures contract |\
| » size | integer(int64) | false | none | Represents the number of contracts that need to be closed, full closing: size=0<br>Partial closing: plan-close-short-position size>0 <br>Partial closing: plan-close-long-position size<0 |\
| » price | string | true | none | Order price. Set to 0 to use market price |\
| » close | boolean | false | write-only | When all positions are closed in a single position mode, it must be set to true to perform the closing operation<br>When partially closed positions in single-store mode/double-store mode, you can not set close, or close=false |\
| » tif | string | false | none | Time in force strategy, default is gtc, market orders currently only support ioc mode<br>\- gtc: GoodTillCancelled<br>\- ioc: ImmediateOrCancelled |\
| » text | string | false | none | The source of the order, including:<br>\- web: Web<br>\- api: API call<br>\- app: Mobile app |\
| » reduce\_only | boolean | false | none | When set to true, perform automatic position reduction operation. Set to true to ensure that the order will not open a new position, and is only used to close or reduce positions |\
| » auto\_size | string | false | write-only | Single position mode: auto\_size is not required<br>Dual position mode full closing (size=0): auto\_size must be set, close\_long for closing long positions, close\_short for closing short positions<br>Dual position mode partial closing (size≠0): auto\_size is not required |\
| » is\_reduce\_only | boolean | false | read-only | Is the order reduce-only |\
| » is\_close | boolean | false | read-only | Is the order to close position |\
| trigger | object | true | none | none |\
| » strategy\_type | integer(int32) | false | none | Trigger Strategy<br> \- 0: Price trigger, triggered when price meets conditions<br> \- 1: Price spread trigger, i.e. the difference between the latest price specified in `price_type` and the second-last price<br>Currently only supports 0 (latest transaction price) |\
| » price\_type | integer(int32) | false | none | Reference price type. 0 - Latest trade price, 1 - Mark price, 2 - Index price |\
| » price | string | false | none | Price value for price trigger, or spread value for spread trigger |\
| » rule | integer(int32) | false | none | Price Condition Type<br>\- 1: Trigger when the price calculated based on `strategy_type` and `price_type` is greater than or equal to `Trigger.Price`, while Trigger.Price must > last\_price<br>\- 2: Trigger when the price calculated based on `strategy_type` and `price_type` is less than or equal to `Trigger.Price`, and Trigger.Price must < last\_price |\
| » expiration | integer | false | none | Maximum wait time for trigger condition (in seconds). Order will be cancelled if timeout |\
| id | integer(int64) | false | read-only | Auto order ID |\
| user | integer | false | read-only | User ID |\
| create\_time | number(double) | false | read-only | Creation time |\
| finish\_time | number(double) | false | read-only | End time |\
| trade\_id | integer(int64) | false | read-only | ID of the order created after trigger |\
| status | string | false | read-only | Order status<br>\- `open`: Active<br>\- `finished`: Finished<br>\- `inactive`: Inactive, only applies to order take-profit/stop-loss<br>\- `invalid`: Invalid, only applies to order take-profit/stop-loss |\
| finish\_as | string | false | read-only | Finish status: cancelled - Cancelled; succeeded - Succeeded; failed - Failed; expired - Expired |\
| reason | string | false | read-only | Additional description of how the order was completed |\
| order\_type | string | false | none | Types of take-profit and stop-loss orders, including:<br>\- `close-long-order`: Order take-profit/stop-loss, close long position<br>\- `close-short-order`: Order take-profit/stop-loss, close short position<br>\- `close-long-position`: Position take-profit/stop-loss, used to close all long positions<br>\- `close-short-position`: Position take-profit/stop-loss, used to close all short positions<br>\- `plan-close-long-position`: Position plan take-profit/stop-loss, used to close all or partial long positions<br>\- `plan-close-short-position`: Position plan take-profit/stop-loss, used to close all or partial short positions<br>The two types of order take-profit/stop-loss are read-only and cannot be passed in requests |\
| me\_order\_id | integer(int64) | false | read-only | Corresponding order ID for order take-profit/stop-loss orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-139) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| tif | gtc |\
| tif | ioc |\
| strategy\_type | 0 |\
| strategy\_type | 1 |\
| price\_type | 0 |\
| price\_type | 1 |\
| price\_type | 2 |\
| rule | 1 |\
| rule | 2 |\
| status | open |\
| status | finished |\
| status | inactive |\
| status | invalid |\
| finish\_as | cancelled |\
| finish\_as | succeeded |\
| finish\_as | failed |\
| finish\_as | expired |\
\
```\
{\
"initial": {\
    "contract": "string",\
    "size": 0,\
    "price": "string",\
    "close": false,\
    "tif": "gtc",\
    "text": "string",\
    "reduce_only": false,\
    "auto_size": "string",\
    "is_reduce_only": true,\
    "is_close": true\
},\
"trigger": {\
    "strategy_type": 0,\
    "price_type": 0,\
    "price": "string",\
    "rule": 1,\
    "expiration": 0\
},\
"id": 0,\
"user": 0,\
"create_time": 0.1,\
"finish_time": 0.1,\
"trade_id": 0,\
"status": "open",\
"finish_as": "cancelled",\
"reason": "string",\
"order_type": "string",\
"me_order_id": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#deliverycontract) DeliveryContract\
\
_Futures contract details_\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-9) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| name | string | false | none | Futures contract |\
| underlying | string | false | none | Underlying |\
| cycle | string | false | none | Cycle type, e.g. WEEKLY, QUARTERLY |\
| type | string | false | none | Contract type: inverse - inverse contract, direct - direct contract |\
| quanto\_multiplier | string | false | none | Multiplier used in converting from invoicing to settlement currency |\
| leverage\_min | string | false | none | Minimum leverage |\
| leverage\_max | string | false | none | Maximum leverage |\
| maintenance\_rate | string | false | none | Maintenance rate of margin |\
| mark\_type | string | false | none | Mark price type: internal - internal trading price, index - external index price |\
| mark\_price | string | false | none | Current mark price |\
| index\_price | string | false | none | Current index price |\
| last\_price | string | false | none | Last trading price |\
| maker\_fee\_rate | string | false | none | Maker fee rate, negative values indicate rebates |\
| taker\_fee\_rate | string | false | none | Taker fee rate |\
| order\_price\_round | string | false | none | Minimum order price increment |\
| mark\_price\_round | string | false | none | Minimum mark price increment |\
| basis\_rate | string | false | none | Fair basis rate |\
| basis\_value | string | false | none | Fair basis value |\
| basis\_impact\_value | string | false | none | Funding used for calculating impact bid, ask price |\
| settle\_price | string | false | none | Settle price |\
| settle\_price\_interval | integer | false | none | Settle price update interval |\
| settle\_price\_duration | integer | false | none | Settle price update duration in seconds |\
| expire\_time | integer(int64) | false | none | Contract expiry timestamp |\
| risk\_limit\_base | string | false | none | Risk limit base |\
| risk\_limit\_step | string | false | none | Step of adjusting risk limit |\
| risk\_limit\_max | string | false | none | Maximum risk limit the contract allowed |\
| order\_size\_min | integer(int64) | false | none | Minimum order size allowed by the contract |\
| order\_size\_max | integer(int64) | false | none | Maximum order size allowed by the contract |\
| order\_price\_deviate | string | false | none | Maximum allowed deviation between order price and current mark price. The order price `order_price` must satisfy the following condition:<br> abs(order\_price - mark\_price) <= mark\_price \* order\_price\_deviate |\
| ref\_discount\_rate | string | false | none | Trading fee discount for referred users |\
| ref\_rebate\_rate | string | false | none | Commission rate for referrers |\
| orderbook\_id | integer(int64) | false | none | Orderbook update ID |\
| trade\_id | integer(int64) | false | none | Current trade ID |\
| trade\_size | integer(int64) | false | none | Historical cumulative trading volume |\
| position\_size | integer(int64) | false | none | Current total long position size |\
| config\_change\_time | number(double) | false | none | Last configuration update time |\
| in\_delisting | boolean | false | none | Contract is delisting |\
| orders\_limit | integer | false | none | Maximum number of pending orders |\
\
#### [\#](https://www.gate.com/docs/developers/apiv4/en/\#enumerated-values-140) Enumerated Values\
\
| Property | Value |\
| --- | --- |\
| cycle | WEEKLY |\
| cycle | BI-WEEKLY |\
| cycle | QUARTERLY |\
| cycle | BI-QUARTERLY |\
| type | inverse |\
| type | direct |\
| mark\_type | internal |\
| mark\_type | index |\
\
```\
{\
"name": "string",\
"underlying": "string",\
"cycle": "WEEKLY",\
"type": "inverse",\
"quanto_multiplier": "string",\
"leverage_min": "string",\
"leverage_max": "string",\
"maintenance_rate": "string",\
"mark_type": "internal",\
"mark_price": "string",\
"index_price": "string",\
"last_price": "string",\
"maker_fee_rate": "string",\
"taker_fee_rate": "string",\
"order_price_round": "string",\
"mark_price_round": "string",\
"basis_rate": "string",\
"basis_value": "string",\
"basis_impact_value": "string",\
"settle_price": "string",\
"settle_price_interval": 0,\
"settle_price_duration": 0,\
"expire_time": 0,\
"risk_limit_base": "string",\
"risk_limit_step": "string",\
"risk_limit_max": "string",\
"order_size_min": 0,\
"order_size_max": 0,\
"order_price_deviate": "string",\
"ref_discount_rate": "string",\
"ref_rebate_rate": "string",\
"orderbook_id": 0,\
"trade_id": 0,\
"trade_size": 0,\
"position_size": 0,\
"config_change_time": 0.1,\
"in_delisting": true,\
"orders_limit": 0\
}\
\
```\
\
## [\#](https://www.gate.com/docs/developers/apiv4/en/\#debitfee) DebitFee\
\
### [\#](https://www.gate.com/docs/developers/apiv4/en/\#properties-10) Properties\
\
| Name | Type | Required | Restrictions | Description |\
| --- | --- | --- | --- | --- |\
| enabled | boolean | true | none | Whether GT fee deduction is enabled |\
\
```\
{\
"enabled": true\
}\
\
```\
\
Last Updated:7/13/2025, 12:10:24 PM

