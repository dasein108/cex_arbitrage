# =============================================================================
# PostgreSQL Optimization Configuration for CEX Arbitrage System
# =============================================================================
# Optimized for 25GB disk with aggressive space management
# Target: Sub-millisecond performance with minimal space consumption

# Memory Configuration (Conservative for 4GB RAM system)
shared_buffers = 512MB                    # 25% of RAM (was already optimal)
effective_cache_size = 1GB                # Total system cache estimate
work_mem = 4MB                            # Reduced from 8MB to limit temp space
maintenance_work_mem = 64MB               # For VACUUM and index operations
temp_buffers = 16MB                       # Temporary table buffers

# Checkpoint and WAL Configuration (Aggressive for space saving)
wal_buffers = 16MB                        # WAL buffer size
checkpoint_completion_target = 0.9        # Spread checkpoints over 90% of interval
checkpoint_timeout = 5min                 # More frequent checkpoints (was 15min)
max_wal_size = 256MB                      # Reduced from default 1GB to save space
min_wal_size = 128MB                      # Minimum WAL size
wal_compression = on                      # Enable WAL compression to save space

# Connection and Resource Limits
max_connections = 50                      # Current setting is appropriate
max_locks_per_transaction = 64            # Default is fine
max_prepared_transactions = 0             # Disable if not needed

# Query Planner Configuration
random_page_cost = 1.1                    # SSD optimization
effective_io_concurrency = 200            # SSD can handle concurrent I/O
default_statistics_target = 100           # Balanced statistics collection

# Logging Configuration (Minimal for space)
log_destination = 'stderr'                # Log to stderr only
logging_collector = off                   # Don't collect logs to files
log_min_duration_statement = 1000         # Log only slow queries (>1s)
log_checkpoints = on                      # Monitor checkpoint performance
log_lock_waits = on                       # Monitor lock contention
log_statement = 'none'                    # Don't log all statements
log_min_messages = warning                # Reduce log verbosity

# Background Writer Configuration
bgwriter_delay = 200ms                    # Background writer frequency
bgwriter_lru_maxpages = 100              # Pages to write per round
bgwriter_lru_multiplier = 2.0            # Multiplier for adaptive writing

# Vacuum and Autovacuum Configuration (Aggressive for space management)
autovacuum = on                           # Enable autovacuum
autovacuum_max_workers = 3                # More workers for better cleanup
autovacuum_naptime = 30s                  # More frequent autovacuum (was 1min)
autovacuum_vacuum_threshold = 50          # Vacuum after 50 dead tuples
autovacuum_analyze_threshold = 50         # Analyze after 50 modifications
autovacuum_vacuum_scale_factor = 0.1      # Vacuum at 10% dead tuples (was 0.2)
autovacuum_analyze_scale_factor = 0.05    # Analyze at 5% modifications (was 0.1)
autovacuum_vacuum_cost_delay = 10ms       # Faster vacuum operations
autovacuum_vacuum_cost_limit = 400        # Higher cost limit for faster cleanup

# Time-series specific optimizations
# These settings help with high-volume insert workloads
commit_delay = 0                          # No artificial delay
commit_siblings = 5                       # Commit siblings threshold
synchronous_commit = off                  # Async commit for better performance
wal_writer_delay = 200ms                  # WAL writer frequency

# Additional space-saving settings
old_snapshot_threshold = 60min            # Clean old snapshots after 1 hour
track_activities = on                     # Track activities but minimal overhead
track_counts = on                         # Track tuple counts for autovacuum
track_io_timing = off                     # Disable I/O timing (overhead)
track_functions = none                    # Don't track function stats

# Locale and Encoding
lc_messages = 'en_US.utf8'               # Error message language
lc_monetary = 'en_US.utf8'               # Monetary formatting
lc_numeric = 'en_US.utf8'                # Numeric formatting
lc_time = 'en_US.utf8'                   # Time formatting

# TimescaleDB specific settings (if available)
# These will be ignored if TimescaleDB is not installed
timescaledb.max_background_workers = 4   # Background worker limit
timescaledb.enable_optimizations = on    # Enable query optimizations
timescaledb.enable_constraint_aware_append = on  # Constraint-aware planning