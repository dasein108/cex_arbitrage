# =============================================================================
# Prometheus Monitoring Stack for HFT Arbitrage Engine
# =============================================================================
# This docker-compose provides Prometheus with Push Gateway, Grafana, and 
# AlertManager specifically configured for high-frequency trading metrics
#
# Usage:
#   docker-compose -f docker-compose.prometheus.yml up -d
#
# Access:
#   - Prometheus: http://localhost:9090
#   - Push Gateway: http://localhost:9091 (for HFT logging)
#   - Grafana: http://localhost:3000 (admin/admin)
#   - AlertManager: http://localhost:9093

version: '3.8'

services:
  # Prometheus Server - Core metrics storage and querying
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: hft_prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      # HFT-optimized settings
      - '--storage.tsdb.min-block-duration=1h'
      - '--storage.tsdb.max-block-duration=24h'
      - '--query.max-concurrency=20'
      - '--query.timeout=2m'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - hft_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Push Gateway - Critical for HFT logging system
  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: hft_pushgateway
    ports:
      - "9091:9091"
    networks:
      - hft_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9091/metrics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.2.0
    container_name: hft_grafana
    ports:
      - "3000:3000"
    environment:
      # Admin credentials
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      
      # Security settings
      GF_SECURITY_DISABLE_GRAVATAR: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_ALLOW_ORG_CREATE: "false"
      
      # Performance settings
      GF_LOG_LEVEL: info
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      
      # Server settings
      GF_SERVER_ROOT_URL: "http://localhost:3000"
      GF_INSTALL_PLUGINS: ""
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - hft_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - prometheus

  # AlertManager - HFT-specific alerting
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: hft_alertmanager
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.listen-address='
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    networks:
      - hft_monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    depends_on:
      - prometheus

# Persistent volumes for data storage
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

# Network for monitoring components
networks:
  hft_monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16